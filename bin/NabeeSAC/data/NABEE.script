SET DATABASE UNIQUE NAME HSQLDB3D613C3FC1
SET DATABASE GC 0
SET DATABASE DEFAULT RESULT MEMORY ROWS 0
SET DATABASE EVENT LOG LEVEL 0
SET DATABASE SQL NAMES FALSE
SET DATABASE SQL REFERENCES FALSE
SET DATABASE SQL SIZE TRUE
SET DATABASE SQL TYPES FALSE
SET DATABASE SQL TDC DELETE TRUE
SET DATABASE SQL TDC UPDATE TRUE
SET DATABASE SQL TRANSLATE TTI TYPES TRUE
SET DATABASE SQL CONCAT NULLS TRUE
SET DATABASE SQL NULLS FIRST TRUE
SET DATABASE SQL UNIQUE NULLS TRUE
SET DATABASE SQL CONVERT TRUNCATE TRUE
SET DATABASE SQL AVG SCALE 0
SET DATABASE SQL DOUBLE NAN TRUE
SET DATABASE SQL LONGVAR IS LOB FALSE
SET DATABASE TRANSACTION CONTROL LOCKS
SET DATABASE DEFAULT ISOLATION LEVEL READ COMMITTED
SET DATABASE TRANSACTION ROLLBACK ON CONFLICT TRUE
SET DATABASE TEXT TABLE DEFAULTS ''
SET FILES WRITE DELAY 500 MILLIS
SET FILES BACKUP INCREMENT TRUE
SET FILES CACHE SIZE 10000
SET FILES CACHE ROWS 50000
SET FILES SCALE 8
SET FILES LOB SCALE 32
SET FILES DEFRAG 0
SET FILES NIO TRUE
SET FILES NIO SIZE 256
SET FILES LOG TRUE
SET FILES LOG SIZE 50
CREATE USER "nabeeconfigdatabase" PASSWORD DIGEST 'fc5608ba9617749596535495fb42fd61'
ALTER USER "nabeeconfigdatabase" SET LOCAL TRUE
CREATE SCHEMA PUBLIC AUTHORIZATION DBA
SET SCHEMA PUBLIC
CREATE MEMORY TABLE PUBLIC.INSTANCE(ID VARCHAR(50) NOT NULL PRIMARY KEY,SYSTEM_HEADER_ID VARCHAR(50),USE_TELEGRAM_CACHE CHARACTER(5),USE_COMPONENT_CACHE CHARACTER(5),USE_QUERY_CACHE CHARACTER(5),USE_SERVICE_CACHE CHARACTER(5),SERVICE_PORT INTEGER,BUFFER_SIZE INTEGER,READ_TIMEOUT INTEGER,MAX_CLIENTS INTEGER,SERVER_ENCODING VARCHAR(30),TIME_LOCALE VARCHAR(30),CLASS_PATH VARCHAR(2000),JAVA_HOME VARCHAR(300),SYSTEM_PATH VARCHAR(300),SYSTEM_ENCODING VARCHAR(30),FILE_ENCODING VARCHAR(30),LOG_CONFIG_PATH VARCHAR(300),LOAD_ON_STARTUP CHARACTER(5),EXTRA_LOAD_PARAMS VARCHAR(300),LENGTH_FIELD_ID VARCHAR(50),ID_FIELD_ID VARCHAR(50))
CREATE MEMORY TABLE PUBLIC.USER(ID VARCHAR(50) NOT NULL PRIMARY KEY,NAME VARCHAR(50) NOT NULL,PW VARCHAR(100) NOT NULL,AUTH VARCHAR(20),PHONE VARCHAR(20),ACTIVATION CHARACTER(5))
CREATE MEMORY TABLE PUBLIC.TELEGRAM(INSTANCE VARCHAR(50) NOT NULL,ID VARCHAR(50) NOT NULL,NAME VARCHAR(50) NOT NULL,HEADER_ID VARCHAR(50),LOG_LEVEL CHARACTER(1) NOT NULL,REMARK VARCHAR(200),PRIMARY KEY(INSTANCE,ID))
CREATE MEMORY TABLE PUBLIC.TELEGRAM_FIELDS(INSTANCE VARCHAR(50) NOT NULL,TELEGRAM_ID VARCHAR(50) NOT NULL,ID VARCHAR(50) NOT NULL,NAME VARCHAR(50) NOT NULL,INDEX INTEGER NOT NULL,LENGTH INTEGER NOT NULL,MANDATORY CHARACTER(5) NOT NULL,PADDING CHARACTER(1) NOT NULL,ALIGN CHARACTER(1) NOT NULL,TYPE CHARACTER(1) NOT NULL,REMARK VARCHAR(200),PRIMARY KEY(INSTANCE,TELEGRAM_ID,ID),FOREIGN KEY(INSTANCE,TELEGRAM_ID) REFERENCES PUBLIC.TELEGRAM(INSTANCE,ID))
CREATE MEMORY TABLE PUBLIC.TELEGRAM_H(INSTANCE VARCHAR(50) NOT NULL,ID VARCHAR(50) NOT NULL,MODIFY_TIME TIMESTAMP NOT NULL,NAME VARCHAR(50) NOT NULL,HEADER_ID VARCHAR(50),LOG_LEVEL CHARACTER(1) NOT NULL,REMARK VARCHAR(200),PRIMARY KEY(INSTANCE,ID,MODIFY_TIME))
CREATE MEMORY TABLE PUBLIC.TELEGRAM_FIELDS_H(INSTANCE VARCHAR(50) NOT NULL,TELEGRAM_ID VARCHAR(50) NOT NULL,ID VARCHAR(50) NOT NULL,MODIFY_TIME TIMESTAMP NOT NULL,NAME VARCHAR(50) NOT NULL,INDEX INTEGER NOT NULL,LENGTH INTEGER NOT NULL,MANDATORY CHARACTER(5) NOT NULL,PADDING CHARACTER(1) NOT NULL,ALIGN CHARACTER(1) NOT NULL,TYPE CHARACTER(1) NOT NULL,REMARK VARCHAR(200),PRIMARY KEY(INSTANCE,TELEGRAM_ID,MODIFY_TIME,ID),FOREIGN KEY(INSTANCE,TELEGRAM_ID,MODIFY_TIME) REFERENCES PUBLIC.TELEGRAM_H(INSTANCE,ID,MODIFY_TIME))
CREATE MEMORY TABLE PUBLIC.COMPONENT(INSTANCE VARCHAR(50) NOT NULL,ID VARCHAR(50) NOT NULL,NAME VARCHAR(100) NOT NULL,CLASS_NAME VARCHAR(200) NOT NULL,FILE_PATH VARCHAR(300) NOT NULL,SHARE CHARACTER(5) NOT NULL,PRIMARY KEY(INSTANCE,ID))
CREATE MEMORY TABLE PUBLIC.COMPONENT_H(INSTANCE VARCHAR(50) NOT NULL,ID VARCHAR(50) NOT NULL,MODIFY_TIME TIMESTAMP NOT NULL,NAME VARCHAR(100) NOT NULL,CLASS_NAME VARCHAR(200) NOT NULL,FILE_PATH VARCHAR(300) NOT NULL,SHARE CHARACTER(5) NOT NULL,PRIMARY KEY(INSTANCE,ID,MODIFY_TIME))
CREATE MEMORY TABLE PUBLIC.SERVICE(INSTANCE VARCHAR(50) NOT NULL,ID VARCHAR(100) NOT NULL,NAME VARCHAR(100) NOT NULL,TYPE VARCHAR(20) NOT NULL,REMARK VARCHAR(200) NOT NULL,SERVICE_DESIGN BLOB(16M),ACTIVATE CHARACTER(5) NOT NULL,PRIMARY KEY(INSTANCE,ID))
CREATE MEMORY TABLE PUBLIC.SERVICE_H(INSTANCE VARCHAR(50) NOT NULL,ID VARCHAR(100) NOT NULL,MODIFY_TIME TIMESTAMP NOT NULL,NAME VARCHAR(100) NOT NULL,TYPE VARCHAR(20) NOT NULL,REMARK VARCHAR(200) NOT NULL,SERVICE_DESIGN BLOB(16M),ACTIVATE CHARACTER(5) NOT NULL,PRIMARY KEY(INSTANCE,ID,MODIFY_TIME))
CREATE MEMORY TABLE PUBLIC.USER_ACCESS_LIST(INSTANCE VARCHAR(50) NOT NULL,USER_ID VARCHAR(50) NOT NULL,FOREIGN KEY(INSTANCE) REFERENCES PUBLIC.INSTANCE(ID),FOREIGN KEY(USER_ID) REFERENCES PUBLIC.USER(ID))
CREATE MEMORY TABLE PUBLIC.PLUGIN_LIST(INSTANCE VARCHAR(50) NOT NULL,PLUGIN_NAME VARCHAR(100) NOT NULL,FOREIGN KEY(INSTANCE) REFERENCES PUBLIC.INSTANCE(ID))
CREATE MEMORY TABLE PUBLIC.SQL_STORAGE(INSTANCE VARCHAR(50) NOT NULL,ID VARCHAR(300) NOT NULL,LEVEL INTEGER NOT NULL,TYPE VARCHAR(10) NOT NULL,NEED_PARAM CHARACTER(5) NOT NULL,CONTENTS VARCHAR(10000),TAG_DOCUMENT BLOB(16M),PRIMARY KEY(INSTANCE,ID))
CREATE MEMORY TABLE PUBLIC.SQL_STORAGE_H(INSTANCE VARCHAR(50) NOT NULL,ID VARCHAR(300) NOT NULL,MODIFY_TIME TIMESTAMP NOT NULL,LEVEL INTEGER NOT NULL,TYPE VARCHAR(10) NOT NULL,NEED_PARAM CHARACTER(5) NOT NULL,CONTENTS VARCHAR(10000),PRIMARY KEY(INSTANCE,ID,MODIFY_TIME))
ALTER SEQUENCE SYSTEM_LOBS.LOB_ID RESTART WITH 3293
SET DATABASE DEFAULT INITIAL SCHEMA PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.YES_OR_NO TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.TIME_STAMP TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CARDINAL_NUMBER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CHARACTER_DATA TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.SQL_IDENTIFIER TO PUBLIC
GRANT DBA TO "nabeeconfigdatabase"
SET SCHEMA SYSTEM_LOBS
INSERT INTO BLOCKS VALUES(1032,1,0)
INSERT INTO BLOCKS VALUES(1033,1,0)
INSERT INTO BLOCKS VALUES(1034,1,0)
INSERT INTO BLOCKS VALUES(1035,1,0)
INSERT INTO BLOCKS VALUES(1036,1,0)
INSERT INTO BLOCKS VALUES(1037,1,0)
INSERT INTO BLOCKS VALUES(1038,1,0)
INSERT INTO BLOCKS VALUES(1039,1,0)
INSERT INTO BLOCKS VALUES(1040,1,0)
INSERT INTO BLOCKS VALUES(1041,1,0)
INSERT INTO BLOCKS VALUES(1042,1,0)
INSERT INTO BLOCKS VALUES(1043,1,0)
INSERT INTO BLOCKS VALUES(1044,1,0)
INSERT INTO BLOCKS VALUES(1045,1,0)
INSERT INTO BLOCKS VALUES(1046,1,0)
INSERT INTO BLOCKS VALUES(1047,1,0)
INSERT INTO BLOCKS VALUES(1048,1,0)
INSERT INTO BLOCKS VALUES(1049,1,0)
INSERT INTO BLOCKS VALUES(1050,1,0)
INSERT INTO BLOCKS VALUES(1051,1,0)
INSERT INTO BLOCKS VALUES(1052,1,0)
INSERT INTO BLOCKS VALUES(1053,1,0)
INSERT INTO BLOCKS VALUES(1054,1,0)
INSERT INTO BLOCKS VALUES(1055,1,0)
INSERT INTO BLOCKS VALUES(1056,1,0)
INSERT INTO BLOCKS VALUES(1057,1,0)
INSERT INTO BLOCKS VALUES(1058,1,0)
INSERT INTO BLOCKS VALUES(1059,1,0)
INSERT INTO BLOCKS VALUES(1060,1,0)
INSERT INTO BLOCKS VALUES(1061,1,0)
INSERT INTO BLOCKS VALUES(1062,1,0)
INSERT INTO BLOCKS VALUES(1063,1,0)
INSERT INTO BLOCKS VALUES(1064,1,0)
INSERT INTO BLOCKS VALUES(1065,1,0)
INSERT INTO BLOCKS VALUES(1066,1,0)
INSERT INTO BLOCKS VALUES(1067,1,0)
INSERT INTO BLOCKS VALUES(1068,1,0)
INSERT INTO BLOCKS VALUES(1069,1,0)
INSERT INTO BLOCKS VALUES(1070,1,0)
INSERT INTO BLOCKS VALUES(1071,1,0)
INSERT INTO BLOCKS VALUES(1072,1,0)
INSERT INTO BLOCKS VALUES(1073,1,0)
INSERT INTO BLOCKS VALUES(1074,1,0)
INSERT INTO BLOCKS VALUES(1075,1,0)
INSERT INTO BLOCKS VALUES(1076,1,0)
INSERT INTO BLOCKS VALUES(1077,1,0)
INSERT INTO BLOCKS VALUES(1078,1,0)
INSERT INTO BLOCKS VALUES(1079,1,0)
INSERT INTO BLOCKS VALUES(1080,1,0)
INSERT INTO BLOCKS VALUES(1081,1,0)
INSERT INTO BLOCKS VALUES(1082,1,0)
INSERT INTO BLOCKS VALUES(1083,1,0)
INSERT INTO BLOCKS VALUES(1084,1,0)
INSERT INTO BLOCKS VALUES(1085,1,0)
INSERT INTO BLOCKS VALUES(1086,1,0)
INSERT INTO BLOCKS VALUES(1087,1,0)
INSERT INTO BLOCKS VALUES(1088,1,0)
INSERT INTO BLOCKS VALUES(1089,1,0)
INSERT INTO BLOCKS VALUES(1090,1,0)
INSERT INTO BLOCKS VALUES(1091,1,0)
INSERT INTO BLOCKS VALUES(1092,1,0)
INSERT INTO BLOCKS VALUES(1093,1,0)
INSERT INTO BLOCKS VALUES(1094,1,0)
INSERT INTO BLOCKS VALUES(1095,1,0)
INSERT INTO BLOCKS VALUES(1096,1,0)
INSERT INTO BLOCKS VALUES(1097,1,0)
INSERT INTO BLOCKS VALUES(1098,1,0)
INSERT INTO BLOCKS VALUES(1099,1,0)
INSERT INTO BLOCKS VALUES(1100,1,0)
INSERT INTO BLOCKS VALUES(1101,1,0)
INSERT INTO BLOCKS VALUES(1102,1,0)
INSERT INTO BLOCKS VALUES(1103,1,0)
INSERT INTO BLOCKS VALUES(1104,1,0)
INSERT INTO BLOCKS VALUES(1105,1,0)
INSERT INTO BLOCKS VALUES(1106,1,0)
INSERT INTO BLOCKS VALUES(1107,1,0)
INSERT INTO BLOCKS VALUES(1108,1,0)
INSERT INTO BLOCKS VALUES(1109,1,0)
INSERT INTO BLOCKS VALUES(1110,1,0)
INSERT INTO BLOCKS VALUES(1111,1,0)
INSERT INTO BLOCKS VALUES(1112,1,0)
INSERT INTO BLOCKS VALUES(1113,1,0)
INSERT INTO BLOCKS VALUES(1114,1,0)
INSERT INTO BLOCKS VALUES(1115,1,0)
INSERT INTO BLOCKS VALUES(1116,1,0)
INSERT INTO BLOCKS VALUES(1117,1,0)
INSERT INTO BLOCKS VALUES(1118,1,0)
INSERT INTO BLOCKS VALUES(1119,1,0)
INSERT INTO BLOCKS VALUES(1120,1,0)
INSERT INTO BLOCKS VALUES(1121,1,0)
INSERT INTO BLOCKS VALUES(1122,1,0)
INSERT INTO BLOCKS VALUES(1123,1,0)
INSERT INTO BLOCKS VALUES(1124,1,0)
INSERT INTO BLOCKS VALUES(1125,1,0)
INSERT INTO BLOCKS VALUES(1126,1,0)
INSERT INTO BLOCKS VALUES(1127,1,0)
INSERT INTO BLOCKS VALUES(1128,1,0)
INSERT INTO BLOCKS VALUES(1129,1,0)
INSERT INTO BLOCKS VALUES(1130,1,0)
INSERT INTO BLOCKS VALUES(1131,1,0)
INSERT INTO BLOCKS VALUES(1132,1,0)
INSERT INTO BLOCKS VALUES(1133,1,0)
INSERT INTO BLOCKS VALUES(1134,1,0)
INSERT INTO BLOCKS VALUES(1135,1,0)
INSERT INTO BLOCKS VALUES(1136,1,0)
INSERT INTO BLOCKS VALUES(1137,1,0)
INSERT INTO BLOCKS VALUES(1138,1,0)
INSERT INTO BLOCKS VALUES(1139,1,0)
INSERT INTO BLOCKS VALUES(1140,1,0)
INSERT INTO BLOCKS VALUES(1141,1,0)
INSERT INTO BLOCKS VALUES(1142,1,0)
INSERT INTO BLOCKS VALUES(1143,1,0)
INSERT INTO BLOCKS VALUES(1144,1,0)
INSERT INTO BLOCKS VALUES(1145,1,0)
INSERT INTO BLOCKS VALUES(1146,1,0)
INSERT INTO BLOCKS VALUES(1147,1,0)
INSERT INTO BLOCKS VALUES(1148,1,0)
INSERT INTO BLOCKS VALUES(1149,1,0)
INSERT INTO BLOCKS VALUES(1150,1,0)
INSERT INTO BLOCKS VALUES(1151,1,0)
INSERT INTO BLOCKS VALUES(1152,1,0)
INSERT INTO BLOCKS VALUES(1153,1,0)
INSERT INTO BLOCKS VALUES(1154,1,0)
INSERT INTO BLOCKS VALUES(1155,1,0)
INSERT INTO BLOCKS VALUES(1156,1,0)
INSERT INTO BLOCKS VALUES(1157,1,0)
INSERT INTO BLOCKS VALUES(1158,1,0)
INSERT INTO BLOCKS VALUES(1159,1,0)
INSERT INTO BLOCKS VALUES(1160,1,0)
INSERT INTO BLOCKS VALUES(1161,1,0)
INSERT INTO BLOCKS VALUES(1162,1,0)
INSERT INTO BLOCKS VALUES(1163,1,0)
INSERT INTO BLOCKS VALUES(1164,1,0)
INSERT INTO BLOCKS VALUES(1165,1,0)
INSERT INTO BLOCKS VALUES(1166,1,0)
INSERT INTO BLOCKS VALUES(1167,1,0)
INSERT INTO BLOCKS VALUES(1168,1,0)
INSERT INTO BLOCKS VALUES(1169,1,0)
INSERT INTO BLOCKS VALUES(1170,1,0)
INSERT INTO BLOCKS VALUES(1171,1,0)
INSERT INTO BLOCKS VALUES(1172,1,0)
INSERT INTO BLOCKS VALUES(1173,1,0)
INSERT INTO BLOCKS VALUES(1174,1,0)
INSERT INTO BLOCKS VALUES(1175,1,0)
INSERT INTO BLOCKS VALUES(1176,1,0)
INSERT INTO BLOCKS VALUES(1177,1,0)
INSERT INTO BLOCKS VALUES(1178,1,0)
INSERT INTO BLOCKS VALUES(1179,1,0)
INSERT INTO BLOCKS VALUES(1180,1,0)
INSERT INTO BLOCKS VALUES(1181,1,0)
INSERT INTO BLOCKS VALUES(1182,1,0)
INSERT INTO BLOCKS VALUES(1183,1,0)
INSERT INTO BLOCKS VALUES(1184,1,0)
INSERT INTO BLOCKS VALUES(1185,1,0)
INSERT INTO BLOCKS VALUES(1186,1,0)
INSERT INTO BLOCKS VALUES(1187,1,0)
INSERT INTO BLOCKS VALUES(1188,1,0)
INSERT INTO BLOCKS VALUES(1189,1,0)
INSERT INTO BLOCKS VALUES(1190,1,0)
INSERT INTO BLOCKS VALUES(1191,1,0)
INSERT INTO BLOCKS VALUES(1192,1,0)
INSERT INTO BLOCKS VALUES(1193,1,0)
INSERT INTO BLOCKS VALUES(1194,1,0)
INSERT INTO BLOCKS VALUES(1195,1,0)
INSERT INTO BLOCKS VALUES(1196,1,0)
INSERT INTO BLOCKS VALUES(1197,1,0)
INSERT INTO BLOCKS VALUES(1198,1,0)
INSERT INTO BLOCKS VALUES(1200,1,0)
INSERT INTO BLOCKS VALUES(1201,1,0)
INSERT INTO BLOCKS VALUES(1202,1,0)
INSERT INTO BLOCKS VALUES(1203,1,0)
INSERT INTO BLOCKS VALUES(1204,1,0)
INSERT INTO BLOCKS VALUES(1205,1,0)
INSERT INTO BLOCKS VALUES(1206,1,0)
INSERT INTO BLOCKS VALUES(1207,1,0)
INSERT INTO BLOCKS VALUES(1208,1,0)
INSERT INTO BLOCKS VALUES(1209,1,0)
INSERT INTO BLOCKS VALUES(1210,1,0)
INSERT INTO BLOCKS VALUES(1211,1,0)
INSERT INTO BLOCKS VALUES(1212,1,0)
INSERT INTO BLOCKS VALUES(1213,1,0)
INSERT INTO BLOCKS VALUES(1214,1,0)
INSERT INTO BLOCKS VALUES(1215,1,0)
INSERT INTO BLOCKS VALUES(1216,1,0)
INSERT INTO BLOCKS VALUES(1217,1,0)
INSERT INTO BLOCKS VALUES(1218,1,0)
INSERT INTO BLOCKS VALUES(1219,1,0)
INSERT INTO BLOCKS VALUES(1220,1,0)
INSERT INTO BLOCKS VALUES(1221,1,0)
INSERT INTO BLOCKS VALUES(1222,1,0)
INSERT INTO BLOCKS VALUES(1223,1,0)
INSERT INTO BLOCKS VALUES(1224,1,0)
INSERT INTO BLOCKS VALUES(1225,1,0)
INSERT INTO BLOCKS VALUES(1226,1,0)
INSERT INTO BLOCKS VALUES(1227,1,0)
INSERT INTO BLOCKS VALUES(1228,1,0)
INSERT INTO BLOCKS VALUES(1229,1,0)
INSERT INTO BLOCKS VALUES(1230,1,0)
INSERT INTO BLOCKS VALUES(1231,1,0)
INSERT INTO BLOCKS VALUES(1232,1,0)
INSERT INTO BLOCKS VALUES(1233,1,0)
INSERT INTO BLOCKS VALUES(1234,1,0)
INSERT INTO BLOCKS VALUES(1235,1,0)
INSERT INTO BLOCKS VALUES(1236,1,0)
INSERT INTO BLOCKS VALUES(1237,1,0)
INSERT INTO BLOCKS VALUES(1238,1,0)
INSERT INTO BLOCKS VALUES(1239,1,0)
INSERT INTO BLOCKS VALUES(1240,1,0)
INSERT INTO BLOCKS VALUES(1241,1,0)
INSERT INTO BLOCKS VALUES(1242,1,0)
INSERT INTO BLOCKS VALUES(1243,1,0)
INSERT INTO BLOCKS VALUES(1245,1,0)
INSERT INTO BLOCKS VALUES(1246,1,0)
INSERT INTO BLOCKS VALUES(1247,1,0)
INSERT INTO BLOCKS VALUES(1248,1,0)
INSERT INTO BLOCKS VALUES(1249,1,0)
INSERT INTO BLOCKS VALUES(1250,1,0)
INSERT INTO BLOCKS VALUES(1251,1,0)
INSERT INTO BLOCKS VALUES(1252,1,0)
INSERT INTO BLOCKS VALUES(1253,1,0)
INSERT INTO BLOCKS VALUES(1254,1,0)
INSERT INTO BLOCKS VALUES(1255,1,0)
INSERT INTO BLOCKS VALUES(1256,1,0)
INSERT INTO BLOCKS VALUES(1257,1,0)
INSERT INTO BLOCKS VALUES(1258,1,0)
INSERT INTO BLOCKS VALUES(1259,1,0)
INSERT INTO BLOCKS VALUES(1260,1,0)
INSERT INTO BLOCKS VALUES(1261,1,0)
INSERT INTO BLOCKS VALUES(1262,1,0)
INSERT INTO BLOCKS VALUES(1263,1,0)
INSERT INTO BLOCKS VALUES(1264,1,0)
INSERT INTO BLOCKS VALUES(1265,1,0)
INSERT INTO BLOCKS VALUES(1266,1,0)
INSERT INTO BLOCKS VALUES(1267,1,0)
INSERT INTO BLOCKS VALUES(1268,1,0)
INSERT INTO BLOCKS VALUES(1269,1,0)
INSERT INTO BLOCKS VALUES(1270,1,0)
INSERT INTO BLOCKS VALUES(1271,1,0)
INSERT INTO BLOCKS VALUES(1272,1,0)
INSERT INTO BLOCKS VALUES(1273,1,0)
INSERT INTO BLOCKS VALUES(1274,1,0)
INSERT INTO BLOCKS VALUES(1275,1,0)
INSERT INTO BLOCKS VALUES(1276,1,0)
INSERT INTO BLOCKS VALUES(1277,1,0)
INSERT INTO BLOCKS VALUES(1278,1,0)
INSERT INTO BLOCKS VALUES(1279,1,0)
INSERT INTO BLOCKS VALUES(1280,1,0)
INSERT INTO BLOCKS VALUES(1281,1,0)
INSERT INTO BLOCKS VALUES(1282,1,0)
INSERT INTO BLOCKS VALUES(1283,1,0)
INSERT INTO BLOCKS VALUES(1284,1,0)
INSERT INTO BLOCKS VALUES(1285,1,0)
INSERT INTO BLOCKS VALUES(1286,1,0)
INSERT INTO BLOCKS VALUES(1287,1,0)
INSERT INTO BLOCKS VALUES(1288,1,0)
INSERT INTO BLOCKS VALUES(1289,1,0)
INSERT INTO BLOCKS VALUES(1290,1,0)
INSERT INTO BLOCKS VALUES(1291,1,0)
INSERT INTO BLOCKS VALUES(1292,1,0)
INSERT INTO BLOCKS VALUES(1293,1,0)
INSERT INTO BLOCKS VALUES(1294,1,0)
INSERT INTO BLOCKS VALUES(1295,1,0)
INSERT INTO BLOCKS VALUES(1296,1,0)
INSERT INTO BLOCKS VALUES(1297,1,0)
INSERT INTO BLOCKS VALUES(1298,1,0)
INSERT INTO BLOCKS VALUES(1299,1,0)
INSERT INTO BLOCKS VALUES(1300,1,0)
INSERT INTO BLOCKS VALUES(1301,1,0)
INSERT INTO BLOCKS VALUES(1302,1,0)
INSERT INTO BLOCKS VALUES(1303,1,0)
INSERT INTO BLOCKS VALUES(1304,1,0)
INSERT INTO BLOCKS VALUES(1305,1,0)
INSERT INTO BLOCKS VALUES(1306,1,0)
INSERT INTO BLOCKS VALUES(1307,1,0)
INSERT INTO BLOCKS VALUES(1308,1,0)
INSERT INTO BLOCKS VALUES(1309,1,0)
INSERT INTO BLOCKS VALUES(1310,1,0)
INSERT INTO BLOCKS VALUES(1311,1,0)
INSERT INTO BLOCKS VALUES(1312,1,0)
INSERT INTO BLOCKS VALUES(1313,1,0)
INSERT INTO BLOCKS VALUES(1314,1,0)
INSERT INTO BLOCKS VALUES(1315,1,0)
INSERT INTO BLOCKS VALUES(1316,1,0)
INSERT INTO BLOCKS VALUES(1317,1,0)
INSERT INTO BLOCKS VALUES(1318,1,0)
INSERT INTO BLOCKS VALUES(1319,1,0)
INSERT INTO BLOCKS VALUES(1320,1,0)
INSERT INTO BLOCKS VALUES(1321,1,0)
INSERT INTO BLOCKS VALUES(1322,1,0)
INSERT INTO BLOCKS VALUES(1323,1,0)
INSERT INTO BLOCKS VALUES(1324,1,0)
INSERT INTO BLOCKS VALUES(1325,1,0)
INSERT INTO BLOCKS VALUES(1326,1,0)
INSERT INTO BLOCKS VALUES(1327,1,0)
INSERT INTO BLOCKS VALUES(1328,1,0)
INSERT INTO BLOCKS VALUES(1329,1,0)
INSERT INTO BLOCKS VALUES(1330,1,0)
INSERT INTO BLOCKS VALUES(1331,1,0)
INSERT INTO BLOCKS VALUES(1332,1,0)
INSERT INTO BLOCKS VALUES(1333,1,0)
INSERT INTO BLOCKS VALUES(1334,1,0)
INSERT INTO BLOCKS VALUES(1335,1,0)
INSERT INTO BLOCKS VALUES(1336,1,0)
INSERT INTO BLOCKS VALUES(1337,1,0)
INSERT INTO BLOCKS VALUES(1338,1,0)
INSERT INTO BLOCKS VALUES(1339,1,0)
INSERT INTO BLOCKS VALUES(1340,1,0)
INSERT INTO BLOCKS VALUES(1341,1,0)
INSERT INTO BLOCKS VALUES(1342,1,0)
INSERT INTO BLOCKS VALUES(1343,1,0)
INSERT INTO BLOCKS VALUES(1344,1,0)
INSERT INTO BLOCKS VALUES(1345,1,0)
INSERT INTO BLOCKS VALUES(1346,1,0)
INSERT INTO BLOCKS VALUES(1347,1,0)
INSERT INTO BLOCKS VALUES(1348,1,0)
INSERT INTO BLOCKS VALUES(1349,1,0)
INSERT INTO BLOCKS VALUES(1350,1,0)
INSERT INTO BLOCKS VALUES(1351,1,0)
INSERT INTO BLOCKS VALUES(1352,1,0)
INSERT INTO BLOCKS VALUES(1353,1,0)
INSERT INTO BLOCKS VALUES(1354,1,0)
INSERT INTO BLOCKS VALUES(1355,1,0)
INSERT INTO BLOCKS VALUES(1356,1,0)
INSERT INTO BLOCKS VALUES(1357,1,0)
INSERT INTO BLOCKS VALUES(1358,1,0)
INSERT INTO BLOCKS VALUES(1359,1,0)
INSERT INTO BLOCKS VALUES(1360,1,0)
INSERT INTO BLOCKS VALUES(1361,1,0)
INSERT INTO BLOCKS VALUES(1362,1,0)
INSERT INTO BLOCKS VALUES(1363,1,0)
INSERT INTO BLOCKS VALUES(1364,1,0)
INSERT INTO BLOCKS VALUES(1365,1,0)
INSERT INTO BLOCKS VALUES(1366,1,0)
INSERT INTO BLOCKS VALUES(1367,1,0)
INSERT INTO BLOCKS VALUES(1368,1,0)
INSERT INTO BLOCKS VALUES(1369,1,0)
INSERT INTO BLOCKS VALUES(1370,1,0)
INSERT INTO BLOCKS VALUES(1371,1,0)
INSERT INTO BLOCKS VALUES(1372,1,0)
INSERT INTO BLOCKS VALUES(1373,1,0)
INSERT INTO BLOCKS VALUES(1374,1,0)
INSERT INTO BLOCKS VALUES(1375,1,0)
INSERT INTO BLOCKS VALUES(1376,1,0)
INSERT INTO BLOCKS VALUES(1377,1,0)
INSERT INTO BLOCKS VALUES(1378,1,0)
INSERT INTO BLOCKS VALUES(1379,1,0)
INSERT INTO BLOCKS VALUES(1380,1,0)
INSERT INTO BLOCKS VALUES(1381,1,0)
INSERT INTO BLOCKS VALUES(1382,1,0)
INSERT INTO BLOCKS VALUES(1383,1,0)
INSERT INTO BLOCKS VALUES(1384,1,0)
INSERT INTO BLOCKS VALUES(1385,1,0)
INSERT INTO BLOCKS VALUES(1386,1,0)
INSERT INTO BLOCKS VALUES(1387,1,0)
INSERT INTO BLOCKS VALUES(1388,1,0)
INSERT INTO BLOCKS VALUES(1389,1,0)
INSERT INTO BLOCKS VALUES(1390,1,0)
INSERT INTO BLOCKS VALUES(1391,1,0)
INSERT INTO BLOCKS VALUES(1392,1,0)
INSERT INTO BLOCKS VALUES(1393,1,0)
INSERT INTO BLOCKS VALUES(1394,1,0)
INSERT INTO BLOCKS VALUES(1395,1,0)
INSERT INTO BLOCKS VALUES(1396,1,0)
INSERT INTO BLOCKS VALUES(1397,1,0)
INSERT INTO BLOCKS VALUES(1398,1,0)
INSERT INTO BLOCKS VALUES(1399,1,0)
INSERT INTO BLOCKS VALUES(1400,1,0)
INSERT INTO BLOCKS VALUES(1401,1,0)
INSERT INTO BLOCKS VALUES(1402,1,0)
INSERT INTO BLOCKS VALUES(1403,1,0)
INSERT INTO BLOCKS VALUES(1404,1,0)
INSERT INTO BLOCKS VALUES(1405,1,0)
INSERT INTO BLOCKS VALUES(1406,1,0)
INSERT INTO BLOCKS VALUES(1407,1,0)
INSERT INTO BLOCKS VALUES(1408,1,0)
INSERT INTO BLOCKS VALUES(1409,1,0)
INSERT INTO BLOCKS VALUES(1410,1,0)
INSERT INTO BLOCKS VALUES(1411,1,0)
INSERT INTO BLOCKS VALUES(1412,1,0)
INSERT INTO BLOCKS VALUES(1413,1,0)
INSERT INTO BLOCKS VALUES(1414,1,0)
INSERT INTO BLOCKS VALUES(1415,1,0)
INSERT INTO BLOCKS VALUES(1416,1,0)
INSERT INTO BLOCKS VALUES(1417,1,0)
INSERT INTO BLOCKS VALUES(1418,1,0)
INSERT INTO BLOCKS VALUES(1419,1,0)
INSERT INTO BLOCKS VALUES(1420,1,0)
INSERT INTO BLOCKS VALUES(1421,1,0)
INSERT INTO BLOCKS VALUES(1422,1,0)
INSERT INTO BLOCKS VALUES(1423,1,0)
INSERT INTO BLOCKS VALUES(1424,1,0)
INSERT INTO BLOCKS VALUES(1425,1,0)
INSERT INTO BLOCKS VALUES(1426,1,0)
INSERT INTO BLOCKS VALUES(1427,1,0)
INSERT INTO BLOCKS VALUES(1428,1,0)
INSERT INTO BLOCKS VALUES(1429,1,0)
INSERT INTO BLOCKS VALUES(1430,1,0)
INSERT INTO BLOCKS VALUES(1431,1,0)
INSERT INTO BLOCKS VALUES(1432,1,0)
INSERT INTO BLOCKS VALUES(1433,1,0)
INSERT INTO BLOCKS VALUES(1434,1,0)
INSERT INTO BLOCKS VALUES(1435,1,0)
INSERT INTO BLOCKS VALUES(1436,1,0)
INSERT INTO BLOCKS VALUES(1437,1,0)
INSERT INTO BLOCKS VALUES(1438,1,0)
INSERT INTO BLOCKS VALUES(1439,1,0)
INSERT INTO BLOCKS VALUES(1440,1,0)
INSERT INTO BLOCKS VALUES(1441,1,0)
INSERT INTO BLOCKS VALUES(1442,1,0)
INSERT INTO BLOCKS VALUES(1443,1,0)
INSERT INTO BLOCKS VALUES(1444,1,0)
INSERT INTO BLOCKS VALUES(1445,1,0)
INSERT INTO BLOCKS VALUES(1446,1,0)
INSERT INTO BLOCKS VALUES(1447,1,0)
INSERT INTO BLOCKS VALUES(1448,1,0)
INSERT INTO BLOCKS VALUES(1449,1,0)
INSERT INTO BLOCKS VALUES(1450,1,0)
INSERT INTO BLOCKS VALUES(1451,1,0)
INSERT INTO BLOCKS VALUES(1452,1,0)
INSERT INTO BLOCKS VALUES(1453,1,0)
INSERT INTO BLOCKS VALUES(1454,1,0)
INSERT INTO BLOCKS VALUES(1455,1,0)
INSERT INTO BLOCKS VALUES(1456,1,0)
INSERT INTO BLOCKS VALUES(1457,1,0)
INSERT INTO BLOCKS VALUES(1458,1,0)
INSERT INTO BLOCKS VALUES(1459,1,0)
INSERT INTO BLOCKS VALUES(1460,1,0)
INSERT INTO BLOCKS VALUES(1461,1,0)
INSERT INTO BLOCKS VALUES(1462,1,0)
INSERT INTO BLOCKS VALUES(1463,1,0)
INSERT INTO BLOCKS VALUES(1464,1,0)
INSERT INTO BLOCKS VALUES(1465,1,0)
INSERT INTO BLOCKS VALUES(1466,1,0)
INSERT INTO BLOCKS VALUES(1467,1,0)
INSERT INTO BLOCKS VALUES(1468,1,0)
INSERT INTO BLOCKS VALUES(1469,1,0)
INSERT INTO BLOCKS VALUES(1470,1,0)
INSERT INTO BLOCKS VALUES(1471,1,0)
INSERT INTO BLOCKS VALUES(1472,1,0)
INSERT INTO BLOCKS VALUES(1473,1,0)
INSERT INTO BLOCKS VALUES(1474,1,0)
INSERT INTO BLOCKS VALUES(1475,1,0)
INSERT INTO BLOCKS VALUES(1476,1,0)
INSERT INTO BLOCKS VALUES(1477,1,0)
INSERT INTO BLOCKS VALUES(1478,1,0)
INSERT INTO BLOCKS VALUES(1479,1,0)
INSERT INTO BLOCKS VALUES(1480,1,0)
INSERT INTO BLOCKS VALUES(1481,1,0)
INSERT INTO BLOCKS VALUES(1482,1,0)
INSERT INTO BLOCKS VALUES(1483,1,0)
INSERT INTO BLOCKS VALUES(1484,1,0)
INSERT INTO BLOCKS VALUES(1485,1,0)
INSERT INTO BLOCKS VALUES(1486,1,0)
INSERT INTO BLOCKS VALUES(1487,1,0)
INSERT INTO BLOCKS VALUES(1488,1,0)
INSERT INTO BLOCKS VALUES(1489,1,0)
INSERT INTO BLOCKS VALUES(1490,1,0)
INSERT INTO BLOCKS VALUES(1491,1,0)
INSERT INTO BLOCKS VALUES(1492,1,0)
INSERT INTO BLOCKS VALUES(1493,1,0)
INSERT INTO BLOCKS VALUES(1494,1,0)
INSERT INTO BLOCKS VALUES(1495,1,0)
INSERT INTO BLOCKS VALUES(1496,1,0)
INSERT INTO BLOCKS VALUES(1497,1,0)
INSERT INTO BLOCKS VALUES(1498,1,0)
INSERT INTO BLOCKS VALUES(1499,1,0)
INSERT INTO BLOCKS VALUES(1500,1,0)
INSERT INTO BLOCKS VALUES(1501,1,0)
INSERT INTO BLOCKS VALUES(1502,1,0)
INSERT INTO BLOCKS VALUES(1503,1,0)
INSERT INTO BLOCKS VALUES(1504,1,0)
INSERT INTO BLOCKS VALUES(1505,1,0)
INSERT INTO BLOCKS VALUES(1506,1,0)
INSERT INTO BLOCKS VALUES(1507,1,0)
INSERT INTO BLOCKS VALUES(1508,1,0)
INSERT INTO BLOCKS VALUES(1509,1,0)
INSERT INTO BLOCKS VALUES(1510,1,0)
INSERT INTO BLOCKS VALUES(1511,1,0)
INSERT INTO BLOCKS VALUES(1512,1,0)
INSERT INTO BLOCKS VALUES(1513,1,0)
INSERT INTO BLOCKS VALUES(1514,1,0)
INSERT INTO BLOCKS VALUES(1515,1,0)
INSERT INTO BLOCKS VALUES(1516,1,0)
INSERT INTO BLOCKS VALUES(1517,1,0)
INSERT INTO BLOCKS VALUES(1518,1,0)
INSERT INTO BLOCKS VALUES(1519,1,0)
INSERT INTO BLOCKS VALUES(1520,1,0)
INSERT INTO BLOCKS VALUES(1521,1,0)
INSERT INTO BLOCKS VALUES(1522,1,0)
INSERT INTO BLOCKS VALUES(1523,1,0)
INSERT INTO BLOCKS VALUES(1524,1,0)
INSERT INTO BLOCKS VALUES(1525,1,0)
INSERT INTO BLOCKS VALUES(1526,1,0)
INSERT INTO BLOCKS VALUES(1527,1,0)
INSERT INTO BLOCKS VALUES(1528,1,0)
INSERT INTO BLOCKS VALUES(1529,1,0)
INSERT INTO BLOCKS VALUES(1530,1,0)
INSERT INTO BLOCKS VALUES(1531,1,0)
INSERT INTO BLOCKS VALUES(1532,1,0)
INSERT INTO BLOCKS VALUES(1533,1,0)
INSERT INTO BLOCKS VALUES(1534,1,0)
INSERT INTO BLOCKS VALUES(1535,1,0)
INSERT INTO BLOCKS VALUES(1536,1,0)
INSERT INTO BLOCKS VALUES(1537,1,0)
INSERT INTO BLOCKS VALUES(1538,1,0)
INSERT INTO BLOCKS VALUES(1539,1,0)
INSERT INTO BLOCKS VALUES(1540,1,0)
INSERT INTO BLOCKS VALUES(1541,1,0)
INSERT INTO BLOCKS VALUES(1542,1,0)
INSERT INTO BLOCKS VALUES(1543,1,0)
INSERT INTO BLOCKS VALUES(1544,1,0)
INSERT INTO BLOCKS VALUES(1545,1,0)
INSERT INTO BLOCKS VALUES(1546,1,0)
INSERT INTO BLOCKS VALUES(1547,1,0)
INSERT INTO BLOCKS VALUES(1548,1,0)
INSERT INTO BLOCKS VALUES(1549,1,0)
INSERT INTO BLOCKS VALUES(1550,1,0)
INSERT INTO BLOCKS VALUES(1551,1,0)
INSERT INTO BLOCKS VALUES(1552,1,0)
INSERT INTO BLOCKS VALUES(1553,1,0)
INSERT INTO BLOCKS VALUES(1554,1,0)
INSERT INTO BLOCKS VALUES(1555,1,0)
INSERT INTO BLOCKS VALUES(1556,1,0)
INSERT INTO BLOCKS VALUES(1557,1,0)
INSERT INTO BLOCKS VALUES(1558,1,0)
INSERT INTO BLOCKS VALUES(1559,1,0)
INSERT INTO BLOCKS VALUES(1560,1,0)
INSERT INTO BLOCKS VALUES(1561,1,0)
INSERT INTO BLOCKS VALUES(1562,1,0)
INSERT INTO BLOCKS VALUES(1563,1,0)
INSERT INTO BLOCKS VALUES(1564,1,0)
INSERT INTO BLOCKS VALUES(1565,1,0)
INSERT INTO BLOCKS VALUES(1566,1,0)
INSERT INTO BLOCKS VALUES(1567,1,0)
INSERT INTO BLOCKS VALUES(1568,1,0)
INSERT INTO BLOCKS VALUES(1569,1,0)
INSERT INTO BLOCKS VALUES(1570,1,0)
INSERT INTO BLOCKS VALUES(1571,1,0)
INSERT INTO BLOCKS VALUES(1572,1,0)
INSERT INTO BLOCKS VALUES(1573,1,0)
INSERT INTO BLOCKS VALUES(1574,1,0)
INSERT INTO BLOCKS VALUES(1575,1,0)
INSERT INTO BLOCKS VALUES(1576,1,0)
INSERT INTO BLOCKS VALUES(1577,1,0)
INSERT INTO BLOCKS VALUES(1578,1,0)
INSERT INTO BLOCKS VALUES(1579,1,0)
INSERT INTO BLOCKS VALUES(1580,1,0)
INSERT INTO BLOCKS VALUES(1581,1,0)
INSERT INTO BLOCKS VALUES(1582,1,0)
INSERT INTO BLOCKS VALUES(1583,1,0)
INSERT INTO BLOCKS VALUES(1584,1,0)
INSERT INTO BLOCKS VALUES(1585,1,0)
INSERT INTO BLOCKS VALUES(1586,1,0)
INSERT INTO BLOCKS VALUES(1587,1,0)
INSERT INTO BLOCKS VALUES(1588,1,0)
INSERT INTO BLOCKS VALUES(1589,1,0)
INSERT INTO BLOCKS VALUES(1590,1,0)
INSERT INTO BLOCKS VALUES(1591,1,0)
INSERT INTO BLOCKS VALUES(1592,1,0)
INSERT INTO BLOCKS VALUES(1593,1,0)
INSERT INTO BLOCKS VALUES(1594,1,0)
INSERT INTO BLOCKS VALUES(1595,1,0)
INSERT INTO BLOCKS VALUES(1596,1,0)
INSERT INTO BLOCKS VALUES(1597,1,0)
INSERT INTO BLOCKS VALUES(1598,1,0)
INSERT INTO BLOCKS VALUES(1599,1,0)
INSERT INTO BLOCKS VALUES(1600,1,0)
INSERT INTO BLOCKS VALUES(1601,1,0)
INSERT INTO BLOCKS VALUES(1602,1,0)
INSERT INTO BLOCKS VALUES(1603,1,0)
INSERT INTO BLOCKS VALUES(1604,1,0)
INSERT INTO BLOCKS VALUES(1605,1,0)
INSERT INTO BLOCKS VALUES(1606,1,0)
INSERT INTO BLOCKS VALUES(1607,1,0)
INSERT INTO BLOCKS VALUES(1608,1,0)
INSERT INTO BLOCKS VALUES(1609,1,0)
INSERT INTO BLOCKS VALUES(1610,1,0)
INSERT INTO BLOCKS VALUES(1611,1,0)
INSERT INTO BLOCKS VALUES(1612,1,0)
INSERT INTO BLOCKS VALUES(1613,1,0)
INSERT INTO BLOCKS VALUES(1614,1,0)
INSERT INTO BLOCKS VALUES(1615,1,0)
INSERT INTO BLOCKS VALUES(1616,1,0)
INSERT INTO BLOCKS VALUES(1617,1,0)
INSERT INTO BLOCKS VALUES(1618,1,0)
INSERT INTO BLOCKS VALUES(1619,1,0)
INSERT INTO BLOCKS VALUES(1620,1,0)
INSERT INTO BLOCKS VALUES(1621,1,0)
INSERT INTO BLOCKS VALUES(1622,1,0)
INSERT INTO BLOCKS VALUES(1623,1,0)
INSERT INTO BLOCKS VALUES(1624,1,0)
INSERT INTO BLOCKS VALUES(1625,1,0)
INSERT INTO BLOCKS VALUES(1626,1,0)
INSERT INTO BLOCKS VALUES(1627,1,0)
INSERT INTO BLOCKS VALUES(1628,1,0)
INSERT INTO BLOCKS VALUES(1629,1,0)
INSERT INTO BLOCKS VALUES(1630,1,0)
INSERT INTO BLOCKS VALUES(1631,1,0)
INSERT INTO BLOCKS VALUES(1632,1,0)
INSERT INTO BLOCKS VALUES(1633,1,0)
INSERT INTO BLOCKS VALUES(1634,1,0)
INSERT INTO BLOCKS VALUES(1635,1,0)
INSERT INTO BLOCKS VALUES(1636,1,0)
INSERT INTO BLOCKS VALUES(1638,1,0)
INSERT INTO BLOCKS VALUES(1639,1,0)
INSERT INTO BLOCKS VALUES(1640,1,0)
INSERT INTO BLOCKS VALUES(1641,1,0)
INSERT INTO BLOCKS VALUES(1642,1,0)
INSERT INTO BLOCKS VALUES(1643,1,0)
INSERT INTO BLOCKS VALUES(1644,1,0)
INSERT INTO BLOCKS VALUES(1645,1,0)
INSERT INTO BLOCKS VALUES(1646,1,0)
INSERT INTO BLOCKS VALUES(1647,1,0)
INSERT INTO BLOCKS VALUES(1648,1,0)
INSERT INTO BLOCKS VALUES(1649,1,0)
INSERT INTO BLOCKS VALUES(1650,1,0)
INSERT INTO BLOCKS VALUES(1651,1,0)
INSERT INTO BLOCKS VALUES(1652,1,0)
INSERT INTO BLOCKS VALUES(1653,1,0)
INSERT INTO BLOCKS VALUES(1654,1,0)
INSERT INTO BLOCKS VALUES(1655,1,0)
INSERT INTO BLOCKS VALUES(1656,1,0)
INSERT INTO BLOCKS VALUES(1657,1,0)
INSERT INTO BLOCKS VALUES(1658,1,0)
INSERT INTO BLOCKS VALUES(1659,1,0)
INSERT INTO BLOCKS VALUES(1660,1,0)
INSERT INTO BLOCKS VALUES(1661,1,0)
INSERT INTO BLOCKS VALUES(1662,1,0)
INSERT INTO BLOCKS VALUES(1663,1,0)
INSERT INTO BLOCKS VALUES(1664,1,0)
INSERT INTO BLOCKS VALUES(1665,1,0)
INSERT INTO BLOCKS VALUES(1666,1,0)
INSERT INTO BLOCKS VALUES(1667,1,0)
INSERT INTO BLOCKS VALUES(1668,1,0)
INSERT INTO BLOCKS VALUES(1669,1,0)
INSERT INTO BLOCKS VALUES(1670,1,0)
INSERT INTO BLOCKS VALUES(1671,1,0)
INSERT INTO BLOCKS VALUES(1672,1,0)
INSERT INTO BLOCKS VALUES(1673,1,0)
INSERT INTO BLOCKS VALUES(1674,1,0)
INSERT INTO BLOCKS VALUES(1675,1,0)
INSERT INTO BLOCKS VALUES(1676,1,0)
INSERT INTO BLOCKS VALUES(1677,1,0)
INSERT INTO BLOCKS VALUES(1678,1,0)
INSERT INTO BLOCKS VALUES(1679,1,0)
INSERT INTO BLOCKS VALUES(1680,1,0)
INSERT INTO BLOCKS VALUES(1681,1,0)
INSERT INTO BLOCKS VALUES(1682,1,0)
INSERT INTO BLOCKS VALUES(1683,1,0)
INSERT INTO BLOCKS VALUES(1684,1,0)
INSERT INTO BLOCKS VALUES(1685,1,0)
INSERT INTO BLOCKS VALUES(1686,1,0)
INSERT INTO BLOCKS VALUES(1687,1,0)
INSERT INTO BLOCKS VALUES(1688,1,0)
INSERT INTO BLOCKS VALUES(1689,1,0)
INSERT INTO BLOCKS VALUES(1690,1,0)
INSERT INTO BLOCKS VALUES(1691,1,0)
INSERT INTO BLOCKS VALUES(1692,1,0)
INSERT INTO BLOCKS VALUES(1693,1,0)
INSERT INTO BLOCKS VALUES(1694,1,0)
INSERT INTO BLOCKS VALUES(1695,1,0)
INSERT INTO BLOCKS VALUES(1696,1,0)
INSERT INTO BLOCKS VALUES(1697,1,0)
INSERT INTO BLOCKS VALUES(1698,1,0)
INSERT INTO BLOCKS VALUES(1699,1,0)
INSERT INTO BLOCKS VALUES(1700,1,0)
INSERT INTO BLOCKS VALUES(1701,1,0)
INSERT INTO BLOCKS VALUES(1702,1,0)
INSERT INTO BLOCKS VALUES(1703,1,0)
INSERT INTO BLOCKS VALUES(1704,1,0)
INSERT INTO BLOCKS VALUES(1705,1,0)
INSERT INTO BLOCKS VALUES(1706,1,0)
INSERT INTO BLOCKS VALUES(1707,1,0)
INSERT INTO BLOCKS VALUES(1708,1,0)
INSERT INTO BLOCKS VALUES(1709,1,0)
INSERT INTO BLOCKS VALUES(1710,1,0)
INSERT INTO BLOCKS VALUES(1711,1,0)
INSERT INTO BLOCKS VALUES(1712,1,0)
INSERT INTO BLOCKS VALUES(1713,1,0)
INSERT INTO BLOCKS VALUES(1714,1,0)
INSERT INTO BLOCKS VALUES(1715,1,0)
INSERT INTO BLOCKS VALUES(1716,1,0)
INSERT INTO BLOCKS VALUES(1717,1,0)
INSERT INTO BLOCKS VALUES(1718,1,0)
INSERT INTO BLOCKS VALUES(1719,1,0)
INSERT INTO BLOCKS VALUES(1722,1,0)
INSERT INTO BLOCKS VALUES(1723,1,0)
INSERT INTO BLOCKS VALUES(1724,1,0)
INSERT INTO BLOCKS VALUES(1725,1,0)
INSERT INTO BLOCKS VALUES(1726,1,0)
INSERT INTO BLOCKS VALUES(1727,1,0)
INSERT INTO BLOCKS VALUES(1728,1,0)
INSERT INTO BLOCKS VALUES(1729,1,0)
INSERT INTO BLOCKS VALUES(1730,1,0)
INSERT INTO BLOCKS VALUES(1731,1,0)
INSERT INTO BLOCKS VALUES(1732,1,0)
INSERT INTO BLOCKS VALUES(1733,1,0)
INSERT INTO BLOCKS VALUES(1734,1,0)
INSERT INTO BLOCKS VALUES(1735,1,0)
INSERT INTO BLOCKS VALUES(1736,1,0)
INSERT INTO BLOCKS VALUES(1737,1,0)
INSERT INTO BLOCKS VALUES(1738,1,0)
INSERT INTO BLOCKS VALUES(1739,1,0)
INSERT INTO BLOCKS VALUES(1740,1,0)
INSERT INTO BLOCKS VALUES(1741,1,0)
INSERT INTO BLOCKS VALUES(1742,1,0)
INSERT INTO BLOCKS VALUES(1743,1,0)
INSERT INTO BLOCKS VALUES(1744,1,0)
INSERT INTO BLOCKS VALUES(1745,1,0)
INSERT INTO BLOCKS VALUES(1746,1,0)
INSERT INTO BLOCKS VALUES(1747,1,0)
INSERT INTO BLOCKS VALUES(1748,1,0)
INSERT INTO BLOCKS VALUES(1749,1,0)
INSERT INTO BLOCKS VALUES(1750,1,0)
INSERT INTO BLOCKS VALUES(1751,1,0)
INSERT INTO BLOCKS VALUES(1752,1,0)
INSERT INTO BLOCKS VALUES(1753,1,0)
INSERT INTO BLOCKS VALUES(1754,1,0)
INSERT INTO BLOCKS VALUES(1755,1,0)
INSERT INTO BLOCKS VALUES(1756,1,0)
INSERT INTO BLOCKS VALUES(1757,1,0)
INSERT INTO BLOCKS VALUES(1758,1,0)
INSERT INTO BLOCKS VALUES(1759,1,0)
INSERT INTO BLOCKS VALUES(1760,1,0)
INSERT INTO BLOCKS VALUES(1761,1,0)
INSERT INTO BLOCKS VALUES(1762,1,0)
INSERT INTO BLOCKS VALUES(1763,1,0)
INSERT INTO BLOCKS VALUES(1764,1,0)
INSERT INTO BLOCKS VALUES(1765,1,0)
INSERT INTO BLOCKS VALUES(1766,1,0)
INSERT INTO BLOCKS VALUES(1767,1,0)
INSERT INTO BLOCKS VALUES(1768,1,0)
INSERT INTO BLOCKS VALUES(1769,1,0)
INSERT INTO BLOCKS VALUES(1770,1,0)
INSERT INTO BLOCKS VALUES(1771,1,0)
INSERT INTO BLOCKS VALUES(1772,1,0)
INSERT INTO BLOCKS VALUES(1773,1,0)
INSERT INTO BLOCKS VALUES(1774,1,0)
INSERT INTO BLOCKS VALUES(1775,1,0)
INSERT INTO BLOCKS VALUES(1776,1,0)
INSERT INTO BLOCKS VALUES(1777,1,0)
INSERT INTO BLOCKS VALUES(1778,1,0)
INSERT INTO BLOCKS VALUES(1779,1,0)
INSERT INTO BLOCKS VALUES(1780,1,0)
INSERT INTO BLOCKS VALUES(1781,1,0)
INSERT INTO BLOCKS VALUES(1782,1,0)
INSERT INTO BLOCKS VALUES(1783,1,0)
INSERT INTO BLOCKS VALUES(1784,1,0)
INSERT INTO BLOCKS VALUES(1785,1,0)
INSERT INTO BLOCKS VALUES(1786,1,0)
INSERT INTO BLOCKS VALUES(1787,1,0)
INSERT INTO BLOCKS VALUES(1788,1,0)
INSERT INTO BLOCKS VALUES(1789,1,0)
INSERT INTO BLOCKS VALUES(1790,1,0)
INSERT INTO BLOCKS VALUES(1791,1,0)
INSERT INTO BLOCKS VALUES(1792,1,0)
INSERT INTO BLOCKS VALUES(1793,1,0)
INSERT INTO BLOCKS VALUES(1794,1,0)
INSERT INTO BLOCKS VALUES(1795,1,0)
INSERT INTO BLOCKS VALUES(1796,1,0)
INSERT INTO BLOCKS VALUES(1797,1,0)
INSERT INTO BLOCKS VALUES(1798,1,0)
INSERT INTO BLOCKS VALUES(1799,1,0)
INSERT INTO BLOCKS VALUES(1800,1,0)
INSERT INTO BLOCKS VALUES(1801,1,0)
INSERT INTO BLOCKS VALUES(1802,1,0)
INSERT INTO BLOCKS VALUES(1803,1,0)
INSERT INTO BLOCKS VALUES(1804,1,0)
INSERT INTO BLOCKS VALUES(1805,1,0)
INSERT INTO BLOCKS VALUES(1806,1,0)
INSERT INTO BLOCKS VALUES(1807,1,0)
INSERT INTO BLOCKS VALUES(1808,1,0)
INSERT INTO BLOCKS VALUES(1809,1,0)
INSERT INTO BLOCKS VALUES(1810,1,0)
INSERT INTO BLOCKS VALUES(1811,1,0)
INSERT INTO BLOCKS VALUES(1812,1,0)
INSERT INTO BLOCKS VALUES(1813,1,0)
INSERT INTO BLOCKS VALUES(1814,1,0)
INSERT INTO BLOCKS VALUES(1815,1,0)
INSERT INTO BLOCKS VALUES(1816,1,0)
INSERT INTO BLOCKS VALUES(1817,1,0)
INSERT INTO BLOCKS VALUES(1818,1,0)
INSERT INTO BLOCKS VALUES(1819,1,0)
INSERT INTO BLOCKS VALUES(1820,1,0)
INSERT INTO BLOCKS VALUES(1821,1,0)
INSERT INTO BLOCKS VALUES(1822,1,0)
INSERT INTO BLOCKS VALUES(1823,1,0)
INSERT INTO BLOCKS VALUES(1824,1,0)
INSERT INTO BLOCKS VALUES(1825,1,0)
INSERT INTO BLOCKS VALUES(1826,1,0)
INSERT INTO BLOCKS VALUES(1827,1,0)
INSERT INTO BLOCKS VALUES(1828,1,0)
INSERT INTO BLOCKS VALUES(1829,1,0)
INSERT INTO BLOCKS VALUES(1830,1,0)
INSERT INTO BLOCKS VALUES(1831,1,0)
INSERT INTO BLOCKS VALUES(1832,1,0)
INSERT INTO BLOCKS VALUES(1833,1,0)
INSERT INTO BLOCKS VALUES(1834,1,0)
INSERT INTO BLOCKS VALUES(1835,1,0)
INSERT INTO BLOCKS VALUES(1836,1,0)
INSERT INTO BLOCKS VALUES(1837,1,0)
INSERT INTO BLOCKS VALUES(1838,1,0)
INSERT INTO BLOCKS VALUES(1839,1,0)
INSERT INTO BLOCKS VALUES(1840,1,0)
INSERT INTO BLOCKS VALUES(1841,1,0)
INSERT INTO BLOCKS VALUES(1842,1,0)
INSERT INTO BLOCKS VALUES(1843,1,0)
INSERT INTO BLOCKS VALUES(1844,1,0)
INSERT INTO BLOCKS VALUES(1845,1,0)
INSERT INTO BLOCKS VALUES(1846,1,0)
INSERT INTO BLOCKS VALUES(1847,1,0)
INSERT INTO BLOCKS VALUES(1848,1,0)
INSERT INTO BLOCKS VALUES(1849,1,0)
INSERT INTO BLOCKS VALUES(1850,1,0)
INSERT INTO BLOCKS VALUES(1851,1,0)
INSERT INTO BLOCKS VALUES(1852,1,0)
INSERT INTO BLOCKS VALUES(1853,1,0)
INSERT INTO BLOCKS VALUES(1854,1,0)
INSERT INTO BLOCKS VALUES(1855,1,0)
INSERT INTO BLOCKS VALUES(1856,1,0)
INSERT INTO BLOCKS VALUES(1857,1,0)
INSERT INTO BLOCKS VALUES(1858,1,0)
INSERT INTO BLOCKS VALUES(1859,1,0)
INSERT INTO BLOCKS VALUES(1860,1,0)
INSERT INTO BLOCKS VALUES(1861,1,0)
INSERT INTO BLOCKS VALUES(1862,1,0)
INSERT INTO BLOCKS VALUES(1863,1,0)
INSERT INTO BLOCKS VALUES(1864,1,0)
INSERT INTO BLOCKS VALUES(1865,1,0)
INSERT INTO BLOCKS VALUES(1866,1,0)
INSERT INTO BLOCKS VALUES(1867,1,0)
INSERT INTO BLOCKS VALUES(1868,1,0)
INSERT INTO BLOCKS VALUES(1869,1,0)
INSERT INTO BLOCKS VALUES(1870,1,0)
INSERT INTO BLOCKS VALUES(1871,1,0)
INSERT INTO BLOCKS VALUES(1872,1,0)
INSERT INTO BLOCKS VALUES(1873,1,0)
INSERT INTO BLOCKS VALUES(1874,1,0)
INSERT INTO BLOCKS VALUES(1875,1,0)
INSERT INTO BLOCKS VALUES(1876,1,0)
INSERT INTO BLOCKS VALUES(1877,1,0)
INSERT INTO BLOCKS VALUES(1878,1,0)
INSERT INTO BLOCKS VALUES(1879,1,0)
INSERT INTO BLOCKS VALUES(1880,1,0)
INSERT INTO BLOCKS VALUES(1881,1,0)
INSERT INTO BLOCKS VALUES(1882,1,0)
INSERT INTO BLOCKS VALUES(1883,1,0)
INSERT INTO BLOCKS VALUES(1884,1,0)
INSERT INTO BLOCKS VALUES(1885,1,0)
INSERT INTO BLOCKS VALUES(1886,1,0)
INSERT INTO BLOCKS VALUES(1887,1,0)
INSERT INTO BLOCKS VALUES(1888,1,0)
INSERT INTO BLOCKS VALUES(1889,1,0)
INSERT INTO BLOCKS VALUES(1890,1,0)
INSERT INTO BLOCKS VALUES(1891,1,0)
INSERT INTO BLOCKS VALUES(1892,1,0)
INSERT INTO BLOCKS VALUES(1893,1,0)
INSERT INTO BLOCKS VALUES(1894,1,0)
INSERT INTO BLOCKS VALUES(1895,1,0)
INSERT INTO BLOCKS VALUES(1896,1,0)
INSERT INTO BLOCKS VALUES(1897,1,0)
INSERT INTO BLOCKS VALUES(1898,1,0)
INSERT INTO BLOCKS VALUES(1899,1,0)
INSERT INTO BLOCKS VALUES(1900,1,0)
INSERT INTO BLOCKS VALUES(1901,1,0)
INSERT INTO BLOCKS VALUES(1902,1,0)
INSERT INTO BLOCKS VALUES(1903,1,0)
INSERT INTO BLOCKS VALUES(1904,1,0)
INSERT INTO BLOCKS VALUES(1905,1,0)
INSERT INTO BLOCKS VALUES(1906,1,0)
INSERT INTO BLOCKS VALUES(1907,1,0)
INSERT INTO BLOCKS VALUES(1908,1,0)
INSERT INTO BLOCKS VALUES(1909,1,0)
INSERT INTO BLOCKS VALUES(1910,1,0)
INSERT INTO BLOCKS VALUES(1911,1,0)
INSERT INTO BLOCKS VALUES(1912,1,0)
INSERT INTO BLOCKS VALUES(1913,1,0)
INSERT INTO BLOCKS VALUES(1914,1,0)
INSERT INTO BLOCKS VALUES(1915,1,0)
INSERT INTO BLOCKS VALUES(1916,1,0)
INSERT INTO BLOCKS VALUES(1917,1,0)
INSERT INTO BLOCKS VALUES(1918,1,0)
INSERT INTO BLOCKS VALUES(1919,1,0)
INSERT INTO BLOCKS VALUES(1920,1,0)
INSERT INTO BLOCKS VALUES(1921,1,0)
INSERT INTO BLOCKS VALUES(1922,1,0)
INSERT INTO BLOCKS VALUES(1923,1,0)
INSERT INTO BLOCKS VALUES(1924,1,0)
INSERT INTO BLOCKS VALUES(1925,1,0)
INSERT INTO BLOCKS VALUES(1926,1,0)
INSERT INTO BLOCKS VALUES(1927,1,0)
INSERT INTO BLOCKS VALUES(1928,1,0)
INSERT INTO BLOCKS VALUES(1929,1,0)
INSERT INTO BLOCKS VALUES(1930,1,0)
INSERT INTO BLOCKS VALUES(1931,1,0)
INSERT INTO BLOCKS VALUES(1932,1,0)
INSERT INTO BLOCKS VALUES(1933,1,0)
INSERT INTO BLOCKS VALUES(1934,1,0)
INSERT INTO BLOCKS VALUES(1935,1,0)
INSERT INTO BLOCKS VALUES(1936,1,0)
INSERT INTO BLOCKS VALUES(1937,1,0)
INSERT INTO BLOCKS VALUES(1938,1,0)
INSERT INTO BLOCKS VALUES(1939,1,0)
INSERT INTO BLOCKS VALUES(1940,1,0)
INSERT INTO BLOCKS VALUES(1941,1,0)
INSERT INTO BLOCKS VALUES(1942,1,0)
INSERT INTO BLOCKS VALUES(1943,1,0)
INSERT INTO BLOCKS VALUES(1944,1,0)
INSERT INTO BLOCKS VALUES(1945,1,0)
INSERT INTO BLOCKS VALUES(1946,1,0)
INSERT INTO BLOCKS VALUES(1947,1,0)
INSERT INTO BLOCKS VALUES(1948,1,0)
INSERT INTO BLOCKS VALUES(1949,1,0)
INSERT INTO BLOCKS VALUES(1950,1,0)
INSERT INTO BLOCKS VALUES(1951,1,0)
INSERT INTO BLOCKS VALUES(1952,1,0)
INSERT INTO BLOCKS VALUES(1953,1,0)
INSERT INTO BLOCKS VALUES(1954,1,0)
INSERT INTO BLOCKS VALUES(1955,1,0)
INSERT INTO BLOCKS VALUES(1956,1,0)
INSERT INTO BLOCKS VALUES(1957,1,0)
INSERT INTO BLOCKS VALUES(1958,1,0)
INSERT INTO BLOCKS VALUES(1960,1,0)
INSERT INTO BLOCKS VALUES(1963,1,0)
INSERT INTO BLOCKS VALUES(1964,1,0)
INSERT INTO BLOCKS VALUES(1965,1,0)
INSERT INTO BLOCKS VALUES(1966,1,0)
INSERT INTO BLOCKS VALUES(1967,1,0)
INSERT INTO BLOCKS VALUES(1972,1,0)
INSERT INTO BLOCKS VALUES(1973,1,0)
INSERT INTO BLOCKS VALUES(1975,1,0)
INSERT INTO BLOCKS VALUES(1978,1,0)
INSERT INTO BLOCKS VALUES(1979,1,0)
INSERT INTO BLOCKS VALUES(1980,1,0)
INSERT INTO BLOCKS VALUES(1981,1,0)
INSERT INTO BLOCKS VALUES(1982,1,0)
INSERT INTO BLOCKS VALUES(1983,1,0)
INSERT INTO BLOCKS VALUES(1984,1,0)
INSERT INTO BLOCKS VALUES(1985,1,0)
INSERT INTO BLOCKS VALUES(1986,1,0)
INSERT INTO BLOCKS VALUES(1987,1,0)
INSERT INTO BLOCKS VALUES(1988,1,0)
INSERT INTO BLOCKS VALUES(1989,1,0)
INSERT INTO BLOCKS VALUES(1990,1,0)
INSERT INTO BLOCKS VALUES(1991,1,0)
INSERT INTO BLOCKS VALUES(1992,1,0)
INSERT INTO BLOCKS VALUES(1993,1,0)
INSERT INTO BLOCKS VALUES(1994,1,0)
INSERT INTO BLOCKS VALUES(1995,1,0)
INSERT INTO BLOCKS VALUES(1996,1,0)
INSERT INTO BLOCKS VALUES(1997,1,0)
INSERT INTO BLOCKS VALUES(1998,1,0)
INSERT INTO BLOCKS VALUES(1999,1,0)
INSERT INTO BLOCKS VALUES(2000,1,0)
INSERT INTO BLOCKS VALUES(2001,1,0)
INSERT INTO BLOCKS VALUES(2003,1,0)
INSERT INTO BLOCKS VALUES(2004,1,0)
INSERT INTO BLOCKS VALUES(2005,1,0)
INSERT INTO BLOCKS VALUES(2006,1,0)
INSERT INTO BLOCKS VALUES(2007,1,0)
INSERT INTO BLOCKS VALUES(2008,1,0)
INSERT INTO BLOCKS VALUES(2013,2147481634,0)
INSERT INTO LOBS VALUES(443,1,0,444)
INSERT INTO LOBS VALUES(444,1,0,445)
INSERT INTO LOBS VALUES(445,1,0,446)
INSERT INTO LOBS VALUES(446,1,0,447)
INSERT INTO LOBS VALUES(447,1,0,448)
INSERT INTO LOBS VALUES(448,1,0,449)
INSERT INTO LOBS VALUES(449,1,0,450)
INSERT INTO LOBS VALUES(739,1,0,740)
INSERT INTO LOBS VALUES(828,1,0,829)
INSERT INTO LOBS VALUES(829,1,0,830)
INSERT INTO LOBS VALUES(830,1,0,831)
INSERT INTO LOBS VALUES(832,1,0,833)
INSERT INTO LOBS VALUES(833,1,0,834)
INSERT INTO LOBS VALUES(834,1,0,835)
INSERT INTO LOBS VALUES(835,1,0,836)
INSERT INTO LOBS VALUES(836,1,0,837)
INSERT INTO LOBS VALUES(837,1,0,838)
INSERT INTO LOBS VALUES(838,1,0,839)
INSERT INTO LOBS VALUES(839,1,0,840)
INSERT INTO LOBS VALUES(840,1,0,841)
INSERT INTO LOBS VALUES(842,1,0,843)
INSERT INTO LOBS VALUES(844,1,0,845)
INSERT INTO LOBS VALUES(845,1,0,846)
INSERT INTO LOBS VALUES(846,1,0,847)
INSERT INTO LOBS VALUES(847,1,0,848)
INSERT INTO LOBS VALUES(848,1,0,849)
INSERT INTO LOBS VALUES(849,1,0,850)
INSERT INTO LOBS VALUES(851,1,0,852)
INSERT INTO LOBS VALUES(852,1,0,853)
INSERT INTO LOBS VALUES(853,1,0,854)
INSERT INTO LOBS VALUES(854,1,0,855)
INSERT INTO LOBS VALUES(855,1,0,856)
INSERT INTO LOBS VALUES(856,1,0,857)
INSERT INTO LOBS VALUES(857,1,0,858)
INSERT INTO LOBS VALUES(859,1,0,860)
INSERT INTO LOBS VALUES(860,1,0,861)
INSERT INTO LOBS VALUES(862,1,0,863)
INSERT INTO LOBS VALUES(865,1,0,866)
INSERT INTO LOBS VALUES(866,1,0,867)
INSERT INTO LOBS VALUES(867,1,0,868)
INSERT INTO LOBS VALUES(868,1,0,869)
INSERT INTO LOBS VALUES(869,1,0,870)
INSERT INTO LOBS VALUES(873,1,0,874)
INSERT INTO LOBS VALUES(874,1,0,875)
INSERT INTO LOBS VALUES(875,1,0,876)
INSERT INTO LOBS VALUES(876,1,0,877)
INSERT INTO LOBS VALUES(877,1,0,878)
INSERT INTO LOBS VALUES(881,1,0,882)
INSERT INTO LOBS VALUES(884,1,0,885)
INSERT INTO LOBS VALUES(885,1,0,886)
INSERT INTO LOBS VALUES(886,1,0,887)
INSERT INTO LOBS VALUES(887,1,0,888)
INSERT INTO LOBS VALUES(888,1,0,889)
INSERT INTO LOBS VALUES(889,1,0,890)
INSERT INTO LOBS VALUES(890,1,0,891)
INSERT INTO LOBS VALUES(891,1,0,892)
INSERT INTO LOBS VALUES(892,1,0,893)
INSERT INTO LOBS VALUES(893,1,0,894)
INSERT INTO LOBS VALUES(894,1,0,895)
INSERT INTO LOBS VALUES(895,1,0,896)
INSERT INTO LOBS VALUES(897,1,0,898)
INSERT INTO LOBS VALUES(898,1,0,899)
INSERT INTO LOBS VALUES(899,1,0,900)
INSERT INTO LOBS VALUES(900,1,0,901)
INSERT INTO LOBS VALUES(901,1,0,902)
INSERT INTO LOBS VALUES(902,1,0,903)
INSERT INTO LOBS VALUES(904,1,0,905)
INSERT INTO LOBS VALUES(905,1,0,906)
INSERT INTO LOBS VALUES(909,1,0,910)
INSERT INTO LOBS VALUES(1199,1,0,1200)
INSERT INTO LOBS VALUES(1244,1,0,1245)
INSERT INTO LOBS VALUES(1637,1,0,1638)
INSERT INTO LOBS VALUES(1720,1,0,1721)
INSERT INTO LOBS VALUES(1721,1,0,1722)
INSERT INTO LOBS VALUES(1959,1,0,1960)
INSERT INTO LOBS VALUES(1961,1,0,1962)
INSERT INTO LOBS VALUES(1962,1,0,1963)
INSERT INTO LOBS VALUES(1968,1,0,1969)
INSERT INTO LOBS VALUES(1969,1,0,1970)
INSERT INTO LOBS VALUES(1970,1,0,1971)
INSERT INTO LOBS VALUES(1971,1,0,1972)
INSERT INTO LOBS VALUES(1974,1,0,1975)
INSERT INTO LOBS VALUES(1976,1,0,1977)
INSERT INTO LOBS VALUES(1977,1,0,1978)
INSERT INTO LOBS VALUES(2002,1,0,2003)
INSERT INTO LOBS VALUES(2009,1,0,2010)
INSERT INTO LOBS VALUES(2010,1,0,2011)
INSERT INTO LOBS VALUES(2011,1,0,2012)
INSERT INTO LOBS VALUES(2012,1,0,2013)
INSERT INTO LOBS VALUES(6,1,0,2020)
INSERT INTO LOBS VALUES(3,1,0,2021)
INSERT INTO LOBS VALUES(4,1,0,2022)
INSERT INTO LOBS VALUES(17,1,0,2034)
INSERT INTO LOBS VALUES(40,1,0,2062)
INSERT INTO LOBS VALUES(41,1,0,2063)
INSERT INTO LOBS VALUES(51,1,0,2073)
INSERT INTO LOBS VALUES(54,1,0,2076)
INSERT INTO LOBS VALUES(56,1,0,2078)
INSERT INTO LOBS VALUES(62,1,0,2084)
INSERT INTO LOBS VALUES(63,1,0,2085)
INSERT INTO LOBS VALUES(65,1,0,2087)
INSERT INTO LOBS VALUES(66,1,0,2088)
INSERT INTO LOBS VALUES(67,1,0,2089)
INSERT INTO LOBS VALUES(68,1,0,2090)
INSERT INTO LOBS VALUES(70,1,0,2092)
INSERT INTO LOBS VALUES(71,1,0,2093)
INSERT INTO LOBS VALUES(72,1,0,2094)
INSERT INTO LOBS VALUES(73,1,0,2095)
INSERT INTO LOBS VALUES(74,1,0,2096)
INSERT INTO LOBS VALUES(75,1,0,2097)
INSERT INTO LOBS VALUES(76,1,0,2098)
INSERT INTO LOBS VALUES(77,1,0,2099)
INSERT INTO LOBS VALUES(79,1,0,2101)
INSERT INTO LOBS VALUES(80,1,0,2102)
INSERT INTO LOBS VALUES(81,1,0,2103)
INSERT INTO LOBS VALUES(82,1,0,2104)
INSERT INTO LOBS VALUES(83,1,0,2105)
INSERT INTO LOBS VALUES(84,1,0,2106)
INSERT INTO LOBS VALUES(85,1,0,2107)
INSERT INTO LOBS VALUES(86,1,0,2108)
INSERT INTO LOBS VALUES(87,1,0,2109)
INSERT INTO LOBS VALUES(88,1,0,2110)
INSERT INTO LOBS VALUES(89,1,0,2111)
INSERT INTO LOBS VALUES(90,1,0,2112)
INSERT INTO LOBS VALUES(92,1,0,2114)
INSERT INTO LOBS VALUES(94,1,0,2116)
INSERT INTO LOBS VALUES(95,1,0,2117)
INSERT INTO LOBS VALUES(108,1,0,2132)
INSERT INTO LOBS VALUES(111,1,0,2135)
INSERT INTO LOBS VALUES(112,1,0,2136)
INSERT INTO LOBS VALUES(131,1,0,2155)
INSERT INTO LOBS VALUES(132,1,0,2156)
INSERT INTO LOBS VALUES(133,1,0,2157)
INSERT INTO LOBS VALUES(134,1,0,2158)
INSERT INTO LOBS VALUES(135,1,0,2159)
INSERT INTO LOBS VALUES(140,1,0,2184)
INSERT INTO LOBS VALUES(158,1,0,2192)
INSERT INTO LOBS VALUES(159,1,0,2193)
INSERT INTO LOBS VALUES(162,1,0,2196)
INSERT INTO LOBS VALUES(165,1,0,2199)
INSERT INTO LOBS VALUES(166,1,0,2200)
INSERT INTO LOBS VALUES(184,1,0,2218)
INSERT INTO LOBS VALUES(185,1,0,2219)
INSERT INTO LOBS VALUES(186,1,0,2220)
INSERT INTO LOBS VALUES(187,1,0,2221)
INSERT INTO LOBS VALUES(214,1,0,2248)
INSERT INTO LOBS VALUES(221,1,0,2255)
INSERT INTO LOBS VALUES(225,1,0,2259)
INSERT INTO LOBS VALUES(149,1,0,2266)
INSERT INTO LOBS VALUES(151,1,0,2267)
INSERT INTO LOBS VALUES(152,1,0,2268)
INSERT INTO LOBS VALUES(153,1,0,2269)
INSERT INTO LOBS VALUES(154,1,0,2270)
INSERT INTO LOBS VALUES(156,1,0,2272)
INSERT INTO LOBS VALUES(157,1,0,2273)
INSERT INTO LOBS VALUES(167,1,0,2274)
INSERT INTO LOBS VALUES(168,1,0,2275)
INSERT INTO LOBS VALUES(169,1,0,2276)
INSERT INTO LOBS VALUES(170,1,0,2277)
INSERT INTO LOBS VALUES(171,1,0,2278)
INSERT INTO LOBS VALUES(172,1,0,2279)
INSERT INTO LOBS VALUES(178,1,0,2280)
INSERT INTO LOBS VALUES(182,1,0,2281)
INSERT INTO LOBS VALUES(183,1,0,2282)
INSERT INTO LOBS VALUES(188,1,0,2283)
INSERT INTO LOBS VALUES(189,1,0,2284)
INSERT INTO LOBS VALUES(190,1,0,2285)
INSERT INTO LOBS VALUES(192,1,0,2286)
INSERT INTO LOBS VALUES(193,1,0,2287)
INSERT INTO LOBS VALUES(194,1,0,2288)
INSERT INTO LOBS VALUES(195,1,0,2289)
INSERT INTO LOBS VALUES(196,1,0,2290)
INSERT INTO LOBS VALUES(197,1,0,2291)
INSERT INTO LOBS VALUES(202,1,0,2292)
INSERT INTO LOBS VALUES(203,1,0,2293)
INSERT INTO LOBS VALUES(204,1,0,2294)
INSERT INTO LOBS VALUES(206,1,0,2295)
INSERT INTO LOBS VALUES(210,1,0,2296)
INSERT INTO LOBS VALUES(211,1,0,2297)
INSERT INTO LOBS VALUES(215,1,0,2298)
INSERT INTO LOBS VALUES(216,1,0,2299)
INSERT INTO LOBS VALUES(217,1,0,2300)
INSERT INTO LOBS VALUES(218,1,0,2301)
INSERT INTO LOBS VALUES(219,1,0,2302)
INSERT INTO LOBS VALUES(220,1,0,2303)
INSERT INTO LOBS VALUES(224,1,0,2304)
INSERT INTO LOBS VALUES(230,1,0,2305)
INSERT INTO LOBS VALUES(231,1,0,2306)
INSERT INTO LOBS VALUES(232,1,0,2307)
INSERT INTO LOBS VALUES(233,1,0,2308)
INSERT INTO LOBS VALUES(234,1,0,2309)
INSERT INTO LOBS VALUES(235,1,0,2310)
INSERT INTO LOBS VALUES(236,1,0,2311)
INSERT INTO LOBS VALUES(237,1,0,2312)
INSERT INTO LOBS VALUES(238,1,0,2313)
INSERT INTO LOBS VALUES(239,1,0,2314)
INSERT INTO LOBS VALUES(240,1,0,2315)
INSERT INTO LOBS VALUES(241,1,0,2316)
INSERT INTO LOBS VALUES(242,1,0,2317)
INSERT INTO LOBS VALUES(243,1,0,2318)
INSERT INTO LOBS VALUES(244,1,0,2319)
INSERT INTO LOBS VALUES(246,1,0,2321)
INSERT INTO LOBS VALUES(247,1,0,2322)
INSERT INTO LOBS VALUES(248,1,0,2323)
INSERT INTO LOBS VALUES(249,1,0,2324)
INSERT INTO LOBS VALUES(250,1,0,2325)
INSERT INTO LOBS VALUES(251,1,0,2326)
INSERT INTO LOBS VALUES(252,1,0,2327)
INSERT INTO LOBS VALUES(253,1,0,2328)
INSERT INTO LOBS VALUES(254,1,0,2329)
INSERT INTO LOBS VALUES(255,1,0,2330)
INSERT INTO LOBS VALUES(267,1,0,2342)
INSERT INTO LOBS VALUES(268,1,0,2343)
INSERT INTO LOBS VALUES(273,1,0,2348)
INSERT INTO LOBS VALUES(274,1,0,2349)
INSERT INTO LOBS VALUES(276,1,0,2351)
INSERT INTO LOBS VALUES(277,1,0,2352)
INSERT INTO LOBS VALUES(278,1,0,2353)
INSERT INTO LOBS VALUES(280,1,0,2355)
INSERT INTO LOBS VALUES(281,1,0,2356)
INSERT INTO LOBS VALUES(282,1,0,2357)
INSERT INTO LOBS VALUES(285,1,0,2360)
INSERT INTO LOBS VALUES(287,1,0,2362)
INSERT INTO LOBS VALUES(288,1,0,2363)
INSERT INTO LOBS VALUES(289,1,0,2364)
INSERT INTO LOBS VALUES(290,1,0,2365)
INSERT INTO LOBS VALUES(291,1,0,2366)
INSERT INTO LOBS VALUES(292,1,0,2367)
INSERT INTO LOBS VALUES(293,1,0,2368)
INSERT INTO LOBS VALUES(294,1,0,2369)
INSERT INTO LOBS VALUES(295,1,0,2370)
INSERT INTO LOBS VALUES(296,1,0,2371)
INSERT INTO LOBS VALUES(297,1,0,2372)
INSERT INTO LOBS VALUES(298,1,0,2373)
INSERT INTO LOBS VALUES(299,1,0,2374)
INSERT INTO LOBS VALUES(301,1,0,2376)
INSERT INTO LOBS VALUES(302,1,0,2377)
INSERT INTO LOBS VALUES(303,1,0,2378)
INSERT INTO LOBS VALUES(304,1,0,2379)
INSERT INTO LOBS VALUES(305,1,0,2380)
INSERT INTO LOBS VALUES(306,1,0,2381)
INSERT INTO LOBS VALUES(308,1,0,2383)
INSERT INTO LOBS VALUES(309,1,0,2384)
INSERT INTO LOBS VALUES(310,1,0,2385)
INSERT INTO LOBS VALUES(313,1,0,2388)
INSERT INTO LOBS VALUES(316,1,0,2391)
INSERT INTO LOBS VALUES(322,1,0,2397)
INSERT INTO LOBS VALUES(323,1,0,2398)
INSERT INTO LOBS VALUES(324,1,0,2399)
INSERT INTO LOBS VALUES(325,1,0,2400)
INSERT INTO LOBS VALUES(326,1,0,2401)
INSERT INTO LOBS VALUES(327,1,0,2402)
INSERT INTO LOBS VALUES(328,1,0,2403)
INSERT INTO LOBS VALUES(329,1,0,2404)
INSERT INTO LOBS VALUES(330,1,0,2405)
INSERT INTO LOBS VALUES(331,1,0,2406)
INSERT INTO LOBS VALUES(332,1,0,2407)
INSERT INTO LOBS VALUES(333,1,0,2408)
INSERT INTO LOBS VALUES(334,1,0,2409)
INSERT INTO LOBS VALUES(335,1,0,2410)
INSERT INTO LOBS VALUES(336,1,0,2411)
INSERT INTO LOBS VALUES(337,1,0,2412)
INSERT INTO LOBS VALUES(139,1,0,2413)
INSERT INTO LOBS VALUES(147,1,0,2414)
INSERT INTO LOBS VALUES(155,1,0,2415)
INSERT INTO LOBS VALUES(205,1,0,2416)
INSERT INTO LOBS VALUES(212,1,0,2417)
INSERT INTO LOBS VALUES(213,1,0,2418)
INSERT INTO LOBS VALUES(256,1,0,2420)
INSERT INTO LOBS VALUES(257,1,0,2421)
INSERT INTO LOBS VALUES(259,1,0,2423)
INSERT INTO LOBS VALUES(260,1,0,2424)
INSERT INTO LOBS VALUES(261,1,0,2425)
INSERT INTO LOBS VALUES(264,1,0,2426)
INSERT INTO LOBS VALUES(265,1,0,2427)
INSERT INTO LOBS VALUES(266,1,0,2428)
INSERT INTO LOBS VALUES(269,1,0,2429)
INSERT INTO LOBS VALUES(270,1,0,2430)
INSERT INTO LOBS VALUES(271,1,0,2431)
INSERT INTO LOBS VALUES(272,1,0,2432)
INSERT INTO LOBS VALUES(275,1,0,2433)
INSERT INTO LOBS VALUES(0,1,0,2438)
INSERT INTO LOBS VALUES(5,1,0,2441)
INSERT INTO LOBS VALUES(7,1,0,2442)
INSERT INTO LOBS VALUES(8,1,0,2443)
INSERT INTO LOBS VALUES(9,1,0,2444)
INSERT INTO LOBS VALUES(10,1,0,2445)
INSERT INTO LOBS VALUES(11,1,0,2446)
INSERT INTO LOBS VALUES(12,1,0,2447)
INSERT INTO LOBS VALUES(13,1,0,2448)
INSERT INTO LOBS VALUES(15,1,0,2450)
INSERT INTO LOBS VALUES(18,1,0,2452)
INSERT INTO LOBS VALUES(20,1,0,2454)
INSERT INTO LOBS VALUES(22,1,0,2456)
INSERT INTO LOBS VALUES(25,1,0,2459)
INSERT INTO LOBS VALUES(28,1,0,2462)
INSERT INTO LOBS VALUES(29,1,0,2463)
INSERT INTO LOBS VALUES(34,1,0,2468)
INSERT INTO LOBS VALUES(35,1,0,2469)
INSERT INTO LOBS VALUES(36,1,0,2470)
INSERT INTO LOBS VALUES(37,1,0,2471)
INSERT INTO LOBS VALUES(38,1,0,2472)
INSERT INTO LOBS VALUES(44,1,0,2476)
INSERT INTO LOBS VALUES(45,1,0,2477)
INSERT INTO LOBS VALUES(46,1,0,2478)
INSERT INTO LOBS VALUES(47,1,0,2479)
INSERT INTO LOBS VALUES(50,1,0,2482)
INSERT INTO LOBS VALUES(52,1,0,2483)
INSERT INTO LOBS VALUES(53,1,0,2484)
INSERT INTO LOBS VALUES(55,1,0,2485)
INSERT INTO LOBS VALUES(57,1,0,2486)
INSERT INTO LOBS VALUES(64,1,0,2491)
INSERT INTO LOBS VALUES(69,1,0,2492)
INSERT INTO LOBS VALUES(78,1,0,2493)
INSERT INTO LOBS VALUES(91,1,0,2494)
INSERT INTO LOBS VALUES(93,1,0,2495)
INSERT INTO LOBS VALUES(100,1,0,2500)
INSERT INTO LOBS VALUES(101,1,0,2501)
INSERT INTO LOBS VALUES(102,1,0,2502)
INSERT INTO LOBS VALUES(103,1,0,2503)
INSERT INTO LOBS VALUES(104,1,0,2504)
INSERT INTO LOBS VALUES(106,1,0,2506)
INSERT INTO LOBS VALUES(107,1,0,2507)
INSERT INTO LOBS VALUES(113,1,0,2510)
INSERT INTO LOBS VALUES(114,1,0,2511)
INSERT INTO LOBS VALUES(115,1,0,2512)
INSERT INTO LOBS VALUES(117,1,0,2514)
INSERT INTO LOBS VALUES(118,1,0,2515)
INSERT INTO LOBS VALUES(120,1,0,2517)
INSERT INTO LOBS VALUES(121,1,0,2518)
INSERT INTO LOBS VALUES(122,1,0,2519)
INSERT INTO LOBS VALUES(123,1,0,2520)
INSERT INTO LOBS VALUES(124,1,0,2521)
INSERT INTO LOBS VALUES(125,1,0,2522)
INSERT INTO LOBS VALUES(126,1,0,2523)
INSERT INTO LOBS VALUES(127,1,0,2524)
INSERT INTO LOBS VALUES(1,1,0,2525)
INSERT INTO LOBS VALUES(2,1,0,2526)
INSERT INTO LOBS VALUES(14,1,0,2527)
INSERT INTO LOBS VALUES(16,1,0,2528)
INSERT INTO LOBS VALUES(19,1,0,2529)
INSERT INTO LOBS VALUES(21,1,0,2530)
INSERT INTO LOBS VALUES(23,1,0,2531)
INSERT INTO LOBS VALUES(24,1,0,2532)
INSERT INTO LOBS VALUES(26,1,0,2533)
INSERT INTO LOBS VALUES(27,1,0,2534)
INSERT INTO LOBS VALUES(30,1,0,2535)
INSERT INTO LOBS VALUES(31,1,0,2536)
INSERT INTO LOBS VALUES(32,1,0,2537)
INSERT INTO LOBS VALUES(33,1,0,2538)
INSERT INTO LOBS VALUES(39,1,0,2539)
INSERT INTO LOBS VALUES(42,1,0,2540)
INSERT INTO LOBS VALUES(48,1,0,2541)
INSERT INTO LOBS VALUES(58,1,0,2543)
INSERT INTO LOBS VALUES(59,1,0,2544)
INSERT INTO LOBS VALUES(60,1,0,2545)
INSERT INTO LOBS VALUES(61,1,0,2546)
INSERT INTO LOBS VALUES(96,1,0,2547)
INSERT INTO LOBS VALUES(97,1,0,2548)
INSERT INTO LOBS VALUES(98,1,0,2549)
INSERT INTO LOBS VALUES(99,1,0,2550)
INSERT INTO LOBS VALUES(105,1,0,2551)
INSERT INTO LOBS VALUES(116,1,0,2554)
INSERT INTO LOBS VALUES(136,1,0,2558)
INSERT INTO LOBS VALUES(144,1,0,2564)
INSERT INTO LOBS VALUES(145,1,0,2565)
INSERT INTO LOBS VALUES(146,1,0,2566)
INSERT INTO LOBS VALUES(148,1,0,2567)
INSERT INTO LOBS VALUES(161,1,0,2570)
INSERT INTO LOBS VALUES(164,1,0,2572)
INSERT INTO LOBS VALUES(173,1,0,2573)
INSERT INTO LOBS VALUES(176,1,0,2576)
INSERT INTO LOBS VALUES(199,1,0,2583)
INSERT INTO LOBS VALUES(200,1,0,2584)
INSERT INTO LOBS VALUES(201,1,0,2585)
INSERT INTO LOBS VALUES(300,1,0,2603)
INSERT INTO LOBS VALUES(315,1,0,2608)
INSERT INTO LOBS VALUES(342,1,0,2618)
INSERT INTO LOBS VALUES(43,1,0,2619)
INSERT INTO LOBS VALUES(49,1,0,2620)
INSERT INTO LOBS VALUES(109,1,0,2621)
INSERT INTO LOBS VALUES(110,1,0,2622)
INSERT INTO LOBS VALUES(119,1,0,2623)
INSERT INTO LOBS VALUES(128,1,0,2624)
INSERT INTO LOBS VALUES(129,1,0,2625)
INSERT INTO LOBS VALUES(130,1,0,2626)
INSERT INTO LOBS VALUES(137,1,0,2627)
INSERT INTO LOBS VALUES(138,1,0,2628)
INSERT INTO LOBS VALUES(141,1,0,2629)
INSERT INTO LOBS VALUES(142,1,0,2630)
INSERT INTO LOBS VALUES(143,1,0,2631)
INSERT INTO LOBS VALUES(150,1,0,2632)
INSERT INTO LOBS VALUES(160,1,0,2633)
INSERT INTO LOBS VALUES(163,1,0,2634)
INSERT INTO LOBS VALUES(174,1,0,2635)
INSERT INTO LOBS VALUES(175,1,0,2636)
INSERT INTO LOBS VALUES(177,1,0,2637)
INSERT INTO LOBS VALUES(179,1,0,2638)
INSERT INTO LOBS VALUES(180,1,0,2639)
INSERT INTO LOBS VALUES(181,1,0,2640)
INSERT INTO LOBS VALUES(191,1,0,2641)
INSERT INTO LOBS VALUES(198,1,0,2642)
INSERT INTO LOBS VALUES(207,1,0,2643)
INSERT INTO LOBS VALUES(208,1,0,2644)
INSERT INTO LOBS VALUES(209,1,0,2645)
INSERT INTO LOBS VALUES(222,1,0,2646)
INSERT INTO LOBS VALUES(223,1,0,2647)
INSERT INTO LOBS VALUES(226,1,0,2648)
INSERT INTO LOBS VALUES(227,1,0,2649)
INSERT INTO LOBS VALUES(228,1,0,2650)
INSERT INTO LOBS VALUES(229,1,0,2651)
INSERT INTO LOBS VALUES(245,1,0,2652)
INSERT INTO LOBS VALUES(258,1,0,2653)
INSERT INTO LOBS VALUES(262,1,0,2654)
INSERT INTO LOBS VALUES(263,1,0,2655)
INSERT INTO LOBS VALUES(279,1,0,2656)
INSERT INTO LOBS VALUES(283,1,0,2657)
INSERT INTO LOBS VALUES(284,1,0,2658)
INSERT INTO LOBS VALUES(286,1,0,2659)
INSERT INTO LOBS VALUES(307,1,0,2660)
INSERT INTO LOBS VALUES(311,1,0,2661)
INSERT INTO LOBS VALUES(312,1,0,2662)
INSERT INTO LOBS VALUES(314,1,0,2663)
INSERT INTO LOBS VALUES(317,1,0,2664)
INSERT INTO LOBS VALUES(318,1,0,2665)
INSERT INTO LOBS VALUES(319,1,0,2666)
INSERT INTO LOBS VALUES(320,1,0,2667)
INSERT INTO LOBS VALUES(321,1,0,2668)
INSERT INTO LOBS VALUES(338,1,0,2669)
INSERT INTO LOBS VALUES(339,1,0,2670)
INSERT INTO LOBS VALUES(340,1,0,2671)
INSERT INTO LOBS VALUES(341,1,0,2672)
INSERT INTO LOBS VALUES(343,1,0,2673)
INSERT INTO LOBS VALUES(344,1,0,2674)
INSERT INTO LOBS VALUES(345,1,0,2675)
INSERT INTO LOBS VALUES(346,1,0,2676)
INSERT INTO LOBS VALUES(347,1,0,2677)
INSERT INTO LOBS VALUES(348,1,0,2678)
INSERT INTO LOBS VALUES(349,1,0,2679)
INSERT INTO LOBS VALUES(350,1,0,2680)
INSERT INTO LOBS VALUES(351,1,0,2681)
INSERT INTO LOBS VALUES(352,1,0,2682)
INSERT INTO LOBS VALUES(353,1,0,2683)
INSERT INTO LOBS VALUES(354,1,0,2684)
INSERT INTO LOBS VALUES(355,1,0,2685)
INSERT INTO LOBS VALUES(356,1,0,2686)
INSERT INTO LOBS VALUES(357,1,0,2687)
INSERT INTO LOBS VALUES(358,1,0,2688)
INSERT INTO LOBS VALUES(359,1,0,2689)
INSERT INTO LOBS VALUES(360,1,0,2690)
INSERT INTO LOBS VALUES(361,1,0,2691)
INSERT INTO LOBS VALUES(362,1,0,2692)
INSERT INTO LOBS VALUES(363,1,0,2693)
INSERT INTO LOBS VALUES(364,1,0,2694)
INSERT INTO LOBS VALUES(365,1,0,2695)
INSERT INTO LOBS VALUES(366,1,0,2696)
INSERT INTO LOBS VALUES(367,1,0,2697)
INSERT INTO LOBS VALUES(368,1,0,2698)
INSERT INTO LOBS VALUES(369,1,0,2699)
INSERT INTO LOBS VALUES(370,1,0,2700)
INSERT INTO LOBS VALUES(371,1,0,2701)
INSERT INTO LOBS VALUES(372,1,0,2702)
INSERT INTO LOBS VALUES(373,1,0,2703)
INSERT INTO LOBS VALUES(374,1,0,2704)
INSERT INTO LOBS VALUES(375,1,0,2705)
INSERT INTO LOBS VALUES(376,1,0,2706)
INSERT INTO LOBS VALUES(377,1,0,2707)
INSERT INTO LOBS VALUES(378,1,0,2708)
INSERT INTO LOBS VALUES(379,1,0,2709)
INSERT INTO LOBS VALUES(380,1,0,2710)
INSERT INTO LOBS VALUES(381,1,0,2711)
INSERT INTO LOBS VALUES(382,1,0,2712)
INSERT INTO LOBS VALUES(383,1,0,2713)
INSERT INTO LOBS VALUES(384,1,0,2714)
INSERT INTO LOBS VALUES(385,1,0,2715)
INSERT INTO LOBS VALUES(386,1,0,2716)
INSERT INTO LOBS VALUES(387,1,0,2717)
INSERT INTO LOBS VALUES(388,1,0,2718)
INSERT INTO LOBS VALUES(389,1,0,2719)
INSERT INTO LOBS VALUES(390,1,0,2720)
INSERT INTO LOBS VALUES(391,1,0,2721)
INSERT INTO LOBS VALUES(392,1,0,2722)
INSERT INTO LOBS VALUES(393,1,0,2723)
INSERT INTO LOBS VALUES(394,1,0,2724)
INSERT INTO LOBS VALUES(395,1,0,2725)
INSERT INTO LOBS VALUES(396,1,0,2726)
INSERT INTO LOBS VALUES(397,1,0,2727)
INSERT INTO LOBS VALUES(398,1,0,2728)
INSERT INTO LOBS VALUES(399,1,0,2729)
INSERT INTO LOBS VALUES(400,1,0,2730)
INSERT INTO LOBS VALUES(401,1,0,2731)
INSERT INTO LOBS VALUES(402,1,0,2732)
INSERT INTO LOBS VALUES(403,1,0,2733)
INSERT INTO LOBS VALUES(404,1,0,2734)
INSERT INTO LOBS VALUES(405,1,0,2735)
INSERT INTO LOBS VALUES(406,1,0,2736)
INSERT INTO LOBS VALUES(407,1,0,2737)
INSERT INTO LOBS VALUES(408,1,0,2738)
INSERT INTO LOBS VALUES(409,1,0,2739)
INSERT INTO LOBS VALUES(410,1,0,2740)
INSERT INTO LOBS VALUES(411,1,0,2741)
INSERT INTO LOBS VALUES(412,1,0,2742)
INSERT INTO LOBS VALUES(413,1,0,2743)
INSERT INTO LOBS VALUES(414,1,0,2744)
INSERT INTO LOBS VALUES(415,1,0,2745)
INSERT INTO LOBS VALUES(416,1,0,2746)
INSERT INTO LOBS VALUES(417,1,0,2747)
INSERT INTO LOBS VALUES(418,1,0,2748)
INSERT INTO LOBS VALUES(419,1,0,2749)
INSERT INTO LOBS VALUES(420,1,0,2750)
INSERT INTO LOBS VALUES(421,1,0,2751)
INSERT INTO LOBS VALUES(422,1,0,2752)
INSERT INTO LOBS VALUES(423,1,0,2753)
INSERT INTO LOBS VALUES(424,1,0,2754)
INSERT INTO LOBS VALUES(425,1,0,2755)
INSERT INTO LOBS VALUES(426,1,0,2756)
INSERT INTO LOBS VALUES(427,1,0,2757)
INSERT INTO LOBS VALUES(428,1,0,2758)
INSERT INTO LOBS VALUES(429,1,0,2759)
INSERT INTO LOBS VALUES(430,1,0,2760)
INSERT INTO LOBS VALUES(431,1,0,2761)
INSERT INTO LOBS VALUES(432,1,0,2762)
INSERT INTO LOBS VALUES(433,1,0,2763)
INSERT INTO LOBS VALUES(434,1,0,2764)
INSERT INTO LOBS VALUES(435,1,0,2765)
INSERT INTO LOBS VALUES(436,1,0,2766)
INSERT INTO LOBS VALUES(437,1,0,2767)
INSERT INTO LOBS VALUES(438,1,0,2768)
INSERT INTO LOBS VALUES(439,1,0,2769)
INSERT INTO LOBS VALUES(440,1,0,2770)
INSERT INTO LOBS VALUES(441,1,0,2771)
INSERT INTO LOBS VALUES(442,1,0,2772)
INSERT INTO LOBS VALUES(450,1,0,2773)
INSERT INTO LOBS VALUES(451,1,0,2774)
INSERT INTO LOBS VALUES(452,1,0,2775)
INSERT INTO LOBS VALUES(453,1,0,2776)
INSERT INTO LOBS VALUES(454,1,0,2777)
INSERT INTO LOBS VALUES(455,1,0,2778)
INSERT INTO LOBS VALUES(456,1,0,2779)
INSERT INTO LOBS VALUES(457,1,0,2780)
INSERT INTO LOBS VALUES(458,1,0,2781)
INSERT INTO LOBS VALUES(459,1,0,2782)
INSERT INTO LOBS VALUES(460,1,0,2783)
INSERT INTO LOBS VALUES(461,1,0,2784)
INSERT INTO LOBS VALUES(462,1,0,2785)
INSERT INTO LOBS VALUES(463,1,0,2786)
INSERT INTO LOBS VALUES(464,1,0,2787)
INSERT INTO LOBS VALUES(465,1,0,2788)
INSERT INTO LOBS VALUES(466,1,0,2789)
INSERT INTO LOBS VALUES(467,1,0,2790)
INSERT INTO LOBS VALUES(468,1,0,2791)
INSERT INTO LOBS VALUES(469,1,0,2792)
INSERT INTO LOBS VALUES(470,1,0,2793)
INSERT INTO LOBS VALUES(471,1,0,2794)
INSERT INTO LOBS VALUES(472,1,0,2795)
INSERT INTO LOBS VALUES(473,1,0,2796)
INSERT INTO LOBS VALUES(474,1,0,2797)
INSERT INTO LOBS VALUES(475,1,0,2798)
INSERT INTO LOBS VALUES(476,1,0,2799)
INSERT INTO LOBS VALUES(477,1,0,2800)
INSERT INTO LOBS VALUES(478,1,0,2801)
INSERT INTO LOBS VALUES(479,1,0,2802)
INSERT INTO LOBS VALUES(480,1,0,2803)
INSERT INTO LOBS VALUES(481,1,0,2804)
INSERT INTO LOBS VALUES(482,1,0,2805)
INSERT INTO LOBS VALUES(483,1,0,2806)
INSERT INTO LOBS VALUES(484,1,0,2807)
INSERT INTO LOBS VALUES(485,1,0,2808)
INSERT INTO LOBS VALUES(486,1,0,2809)
INSERT INTO LOBS VALUES(487,1,0,2810)
INSERT INTO LOBS VALUES(488,1,0,2811)
INSERT INTO LOBS VALUES(489,1,0,2812)
INSERT INTO LOBS VALUES(490,1,0,2813)
INSERT INTO LOBS VALUES(491,1,0,2814)
INSERT INTO LOBS VALUES(492,1,0,2815)
INSERT INTO LOBS VALUES(493,1,0,2816)
INSERT INTO LOBS VALUES(494,1,0,2817)
INSERT INTO LOBS VALUES(495,1,0,2818)
INSERT INTO LOBS VALUES(496,1,0,2819)
INSERT INTO LOBS VALUES(497,1,0,2820)
INSERT INTO LOBS VALUES(498,1,0,2821)
INSERT INTO LOBS VALUES(499,1,0,2822)
INSERT INTO LOBS VALUES(500,1,0,2823)
INSERT INTO LOBS VALUES(501,1,0,2824)
INSERT INTO LOBS VALUES(502,1,0,2825)
INSERT INTO LOBS VALUES(503,1,0,2826)
INSERT INTO LOBS VALUES(504,1,0,2827)
INSERT INTO LOBS VALUES(505,1,0,2828)
INSERT INTO LOBS VALUES(506,1,0,2829)
INSERT INTO LOBS VALUES(507,1,0,2830)
INSERT INTO LOBS VALUES(508,1,0,2831)
INSERT INTO LOBS VALUES(509,1,0,2832)
INSERT INTO LOBS VALUES(510,1,0,2833)
INSERT INTO LOBS VALUES(511,1,0,2834)
INSERT INTO LOBS VALUES(512,1,0,2835)
INSERT INTO LOBS VALUES(513,1,0,2836)
INSERT INTO LOBS VALUES(514,1,0,2837)
INSERT INTO LOBS VALUES(515,1,0,2838)
INSERT INTO LOBS VALUES(516,1,0,2839)
INSERT INTO LOBS VALUES(517,1,0,2840)
INSERT INTO LOBS VALUES(518,1,0,2841)
INSERT INTO LOBS VALUES(519,1,0,2842)
INSERT INTO LOBS VALUES(520,1,0,2843)
INSERT INTO LOBS VALUES(521,1,0,2844)
INSERT INTO LOBS VALUES(522,1,0,2845)
INSERT INTO LOBS VALUES(523,1,0,2846)
INSERT INTO LOBS VALUES(524,1,0,2847)
INSERT INTO LOBS VALUES(525,1,0,2848)
INSERT INTO LOBS VALUES(526,1,0,2849)
INSERT INTO LOBS VALUES(527,1,0,2850)
INSERT INTO LOBS VALUES(528,1,0,2851)
INSERT INTO LOBS VALUES(529,1,0,2852)
INSERT INTO LOBS VALUES(530,1,0,2853)
INSERT INTO LOBS VALUES(531,1,0,2854)
INSERT INTO LOBS VALUES(532,1,0,2855)
INSERT INTO LOBS VALUES(533,1,0,2856)
INSERT INTO LOBS VALUES(534,1,0,2857)
INSERT INTO LOBS VALUES(535,1,0,2858)
INSERT INTO LOBS VALUES(536,1,0,2859)
INSERT INTO LOBS VALUES(537,1,0,2860)
INSERT INTO LOBS VALUES(538,1,0,2861)
INSERT INTO LOBS VALUES(539,1,0,2862)
INSERT INTO LOBS VALUES(540,1,0,2863)
INSERT INTO LOBS VALUES(541,1,0,2864)
INSERT INTO LOBS VALUES(542,1,0,2865)
INSERT INTO LOBS VALUES(543,1,0,2866)
INSERT INTO LOBS VALUES(544,1,0,2867)
INSERT INTO LOBS VALUES(545,1,0,2868)
INSERT INTO LOBS VALUES(546,1,0,2869)
INSERT INTO LOBS VALUES(547,1,0,2870)
INSERT INTO LOBS VALUES(548,1,0,2871)
INSERT INTO LOBS VALUES(549,1,0,2872)
INSERT INTO LOBS VALUES(550,1,0,2873)
INSERT INTO LOBS VALUES(551,1,0,2874)
INSERT INTO LOBS VALUES(552,1,0,2875)
INSERT INTO LOBS VALUES(553,1,0,2876)
INSERT INTO LOBS VALUES(554,1,0,2877)
INSERT INTO LOBS VALUES(555,1,0,2878)
INSERT INTO LOBS VALUES(556,1,0,2879)
INSERT INTO LOBS VALUES(557,1,0,2880)
INSERT INTO LOBS VALUES(558,1,0,2881)
INSERT INTO LOBS VALUES(559,1,0,2882)
INSERT INTO LOBS VALUES(560,1,0,2883)
INSERT INTO LOBS VALUES(561,1,0,2884)
INSERT INTO LOBS VALUES(562,1,0,2885)
INSERT INTO LOBS VALUES(563,1,0,2886)
INSERT INTO LOBS VALUES(564,1,0,2887)
INSERT INTO LOBS VALUES(565,1,0,2888)
INSERT INTO LOBS VALUES(566,1,0,2889)
INSERT INTO LOBS VALUES(567,1,0,2890)
INSERT INTO LOBS VALUES(568,1,0,2891)
INSERT INTO LOBS VALUES(569,1,0,2892)
INSERT INTO LOBS VALUES(570,1,0,2893)
INSERT INTO LOBS VALUES(571,1,0,2894)
INSERT INTO LOBS VALUES(572,1,0,2895)
INSERT INTO LOBS VALUES(573,1,0,2896)
INSERT INTO LOBS VALUES(574,1,0,2897)
INSERT INTO LOBS VALUES(575,1,0,2898)
INSERT INTO LOBS VALUES(576,1,0,2899)
INSERT INTO LOBS VALUES(577,1,0,2900)
INSERT INTO LOBS VALUES(578,1,0,2901)
INSERT INTO LOBS VALUES(579,1,0,2902)
INSERT INTO LOBS VALUES(580,1,0,2903)
INSERT INTO LOBS VALUES(581,1,0,2904)
INSERT INTO LOBS VALUES(582,1,0,2905)
INSERT INTO LOBS VALUES(583,1,0,2906)
INSERT INTO LOBS VALUES(584,1,0,2907)
INSERT INTO LOBS VALUES(585,1,0,2908)
INSERT INTO LOBS VALUES(586,1,0,2909)
INSERT INTO LOBS VALUES(587,1,0,2910)
INSERT INTO LOBS VALUES(588,1,0,2911)
INSERT INTO LOBS VALUES(589,1,0,2912)
INSERT INTO LOBS VALUES(590,1,0,2913)
INSERT INTO LOBS VALUES(591,1,0,2914)
INSERT INTO LOBS VALUES(592,1,0,2915)
INSERT INTO LOBS VALUES(593,1,0,2916)
INSERT INTO LOBS VALUES(594,1,0,2917)
INSERT INTO LOBS VALUES(595,1,0,2918)
INSERT INTO LOBS VALUES(596,1,0,2919)
INSERT INTO LOBS VALUES(597,1,0,2920)
INSERT INTO LOBS VALUES(598,1,0,2921)
INSERT INTO LOBS VALUES(599,1,0,2922)
INSERT INTO LOBS VALUES(600,1,0,2923)
INSERT INTO LOBS VALUES(601,1,0,2924)
INSERT INTO LOBS VALUES(602,1,0,2925)
INSERT INTO LOBS VALUES(603,1,0,2926)
INSERT INTO LOBS VALUES(604,1,0,2927)
INSERT INTO LOBS VALUES(605,1,0,2928)
INSERT INTO LOBS VALUES(606,1,0,2929)
INSERT INTO LOBS VALUES(607,1,0,2930)
INSERT INTO LOBS VALUES(608,1,0,2931)
INSERT INTO LOBS VALUES(609,1,0,2932)
INSERT INTO LOBS VALUES(610,1,0,2933)
INSERT INTO LOBS VALUES(611,1,0,2934)
INSERT INTO LOBS VALUES(612,1,0,2935)
INSERT INTO LOBS VALUES(613,1,0,2936)
INSERT INTO LOBS VALUES(614,1,0,2937)
INSERT INTO LOBS VALUES(615,1,0,2938)
INSERT INTO LOBS VALUES(616,1,0,2939)
INSERT INTO LOBS VALUES(617,1,0,2940)
INSERT INTO LOBS VALUES(618,1,0,2941)
INSERT INTO LOBS VALUES(619,1,0,2942)
INSERT INTO LOBS VALUES(620,1,0,2943)
INSERT INTO LOBS VALUES(621,1,0,2944)
INSERT INTO LOBS VALUES(622,1,0,2945)
INSERT INTO LOBS VALUES(623,1,0,2946)
INSERT INTO LOBS VALUES(624,1,0,2947)
INSERT INTO LOBS VALUES(625,1,0,2948)
INSERT INTO LOBS VALUES(626,1,0,2949)
INSERT INTO LOBS VALUES(627,1,0,2950)
INSERT INTO LOBS VALUES(628,1,0,2951)
INSERT INTO LOBS VALUES(629,1,0,2952)
INSERT INTO LOBS VALUES(630,1,0,2953)
INSERT INTO LOBS VALUES(631,1,0,2954)
INSERT INTO LOBS VALUES(632,1,0,2955)
INSERT INTO LOBS VALUES(633,1,0,2956)
INSERT INTO LOBS VALUES(634,1,0,2957)
INSERT INTO LOBS VALUES(635,1,0,2958)
INSERT INTO LOBS VALUES(636,1,0,2959)
INSERT INTO LOBS VALUES(637,1,0,2960)
INSERT INTO LOBS VALUES(638,1,0,2961)
INSERT INTO LOBS VALUES(639,1,0,2962)
INSERT INTO LOBS VALUES(640,1,0,2963)
INSERT INTO LOBS VALUES(641,1,0,2964)
INSERT INTO LOBS VALUES(642,1,0,2965)
INSERT INTO LOBS VALUES(643,1,0,2966)
INSERT INTO LOBS VALUES(644,1,0,2967)
INSERT INTO LOBS VALUES(645,1,0,2968)
INSERT INTO LOBS VALUES(646,1,0,2969)
INSERT INTO LOBS VALUES(647,1,0,2970)
INSERT INTO LOBS VALUES(648,1,0,2971)
INSERT INTO LOBS VALUES(649,1,0,2972)
INSERT INTO LOBS VALUES(650,1,0,2973)
INSERT INTO LOBS VALUES(651,1,0,2974)
INSERT INTO LOBS VALUES(652,1,0,2975)
INSERT INTO LOBS VALUES(653,1,0,2976)
INSERT INTO LOBS VALUES(654,1,0,2977)
INSERT INTO LOBS VALUES(655,1,0,2978)
INSERT INTO LOBS VALUES(656,1,0,2979)
INSERT INTO LOBS VALUES(657,1,0,2980)
INSERT INTO LOBS VALUES(658,1,0,2981)
INSERT INTO LOBS VALUES(659,1,0,2982)
INSERT INTO LOBS VALUES(660,1,0,2983)
INSERT INTO LOBS VALUES(661,1,0,2984)
INSERT INTO LOBS VALUES(662,1,0,2985)
INSERT INTO LOBS VALUES(663,1,0,2986)
INSERT INTO LOBS VALUES(664,1,0,2987)
INSERT INTO LOBS VALUES(665,1,0,2988)
INSERT INTO LOBS VALUES(666,1,0,2989)
INSERT INTO LOBS VALUES(667,1,0,2990)
INSERT INTO LOBS VALUES(668,1,0,2991)
INSERT INTO LOBS VALUES(669,1,0,2992)
INSERT INTO LOBS VALUES(670,1,0,2993)
INSERT INTO LOBS VALUES(671,1,0,2994)
INSERT INTO LOBS VALUES(672,1,0,2995)
INSERT INTO LOBS VALUES(673,1,0,2996)
INSERT INTO LOBS VALUES(674,1,0,2997)
INSERT INTO LOBS VALUES(675,1,0,2998)
INSERT INTO LOBS VALUES(676,1,0,2999)
INSERT INTO LOBS VALUES(677,1,0,3000)
INSERT INTO LOBS VALUES(678,1,0,3001)
INSERT INTO LOBS VALUES(679,1,0,3002)
INSERT INTO LOBS VALUES(680,1,0,3003)
INSERT INTO LOBS VALUES(681,1,0,3004)
INSERT INTO LOBS VALUES(682,1,0,3005)
INSERT INTO LOBS VALUES(683,1,0,3006)
INSERT INTO LOBS VALUES(684,1,0,3007)
INSERT INTO LOBS VALUES(685,1,0,3008)
INSERT INTO LOBS VALUES(686,1,0,3009)
INSERT INTO LOBS VALUES(687,1,0,3010)
INSERT INTO LOBS VALUES(688,1,0,3011)
INSERT INTO LOBS VALUES(689,1,0,3012)
INSERT INTO LOBS VALUES(690,1,0,3013)
INSERT INTO LOBS VALUES(691,1,0,3014)
INSERT INTO LOBS VALUES(692,1,0,3015)
INSERT INTO LOBS VALUES(693,1,0,3016)
INSERT INTO LOBS VALUES(694,1,0,3017)
INSERT INTO LOBS VALUES(695,1,0,3018)
INSERT INTO LOBS VALUES(696,1,0,3019)
INSERT INTO LOBS VALUES(697,1,0,3020)
INSERT INTO LOBS VALUES(698,1,0,3021)
INSERT INTO LOBS VALUES(699,1,0,3022)
INSERT INTO LOBS VALUES(700,1,0,3023)
INSERT INTO LOBS VALUES(701,1,0,3024)
INSERT INTO LOBS VALUES(702,1,0,3025)
INSERT INTO LOBS VALUES(703,1,0,3026)
INSERT INTO LOBS VALUES(704,1,0,3027)
INSERT INTO LOBS VALUES(705,1,0,3028)
INSERT INTO LOBS VALUES(706,1,0,3029)
INSERT INTO LOBS VALUES(707,1,0,3030)
INSERT INTO LOBS VALUES(708,1,0,3031)
INSERT INTO LOBS VALUES(709,1,0,3032)
INSERT INTO LOBS VALUES(710,1,0,3033)
INSERT INTO LOBS VALUES(711,1,0,3034)
INSERT INTO LOBS VALUES(712,1,0,3035)
INSERT INTO LOBS VALUES(713,1,0,3036)
INSERT INTO LOBS VALUES(714,1,0,3037)
INSERT INTO LOBS VALUES(715,1,0,3038)
INSERT INTO LOBS VALUES(716,1,0,3039)
INSERT INTO LOBS VALUES(717,1,0,3040)
INSERT INTO LOBS VALUES(718,1,0,3041)
INSERT INTO LOBS VALUES(719,1,0,3042)
INSERT INTO LOBS VALUES(720,1,0,3043)
INSERT INTO LOBS VALUES(721,1,0,3044)
INSERT INTO LOBS VALUES(722,1,0,3045)
INSERT INTO LOBS VALUES(723,1,0,3046)
INSERT INTO LOBS VALUES(724,1,0,3047)
INSERT INTO LOBS VALUES(725,1,0,3048)
INSERT INTO LOBS VALUES(726,1,0,3049)
INSERT INTO LOBS VALUES(727,1,0,3050)
INSERT INTO LOBS VALUES(728,1,0,3051)
INSERT INTO LOBS VALUES(729,1,0,3052)
INSERT INTO LOBS VALUES(730,1,0,3053)
INSERT INTO LOBS VALUES(731,1,0,3054)
INSERT INTO LOBS VALUES(732,1,0,3055)
INSERT INTO LOBS VALUES(733,1,0,3056)
INSERT INTO LOBS VALUES(734,1,0,3057)
INSERT INTO LOBS VALUES(735,1,0,3058)
INSERT INTO LOBS VALUES(736,1,0,3059)
INSERT INTO LOBS VALUES(737,1,0,3060)
INSERT INTO LOBS VALUES(738,1,0,3061)
INSERT INTO LOBS VALUES(740,1,0,3062)
INSERT INTO LOBS VALUES(741,1,0,3063)
INSERT INTO LOBS VALUES(742,1,0,3064)
INSERT INTO LOBS VALUES(743,1,0,3065)
INSERT INTO LOBS VALUES(744,1,0,3066)
INSERT INTO LOBS VALUES(745,1,0,3067)
INSERT INTO LOBS VALUES(746,1,0,3068)
INSERT INTO LOBS VALUES(747,1,0,3069)
INSERT INTO LOBS VALUES(748,1,0,3070)
INSERT INTO LOBS VALUES(749,1,0,3071)
INSERT INTO LOBS VALUES(750,1,0,3072)
INSERT INTO LOBS VALUES(751,1,0,3073)
INSERT INTO LOBS VALUES(752,1,0,3074)
INSERT INTO LOBS VALUES(753,1,0,3075)
INSERT INTO LOBS VALUES(754,1,0,3076)
INSERT INTO LOBS VALUES(755,1,0,3077)
INSERT INTO LOBS VALUES(756,1,0,3078)
INSERT INTO LOBS VALUES(757,1,0,3079)
INSERT INTO LOBS VALUES(758,1,0,3080)
INSERT INTO LOBS VALUES(759,1,0,3081)
INSERT INTO LOBS VALUES(760,1,0,3082)
INSERT INTO LOBS VALUES(761,1,0,3083)
INSERT INTO LOBS VALUES(762,1,0,3084)
INSERT INTO LOBS VALUES(763,1,0,3085)
INSERT INTO LOBS VALUES(764,1,0,3086)
INSERT INTO LOBS VALUES(765,1,0,3087)
INSERT INTO LOBS VALUES(766,1,0,3088)
INSERT INTO LOBS VALUES(767,1,0,3089)
INSERT INTO LOBS VALUES(768,1,0,3090)
INSERT INTO LOBS VALUES(769,1,0,3091)
INSERT INTO LOBS VALUES(770,1,0,3092)
INSERT INTO LOBS VALUES(771,1,0,3093)
INSERT INTO LOBS VALUES(772,1,0,3094)
INSERT INTO LOBS VALUES(773,1,0,3095)
INSERT INTO LOBS VALUES(774,1,0,3096)
INSERT INTO LOBS VALUES(775,1,0,3097)
INSERT INTO LOBS VALUES(776,1,0,3098)
INSERT INTO LOBS VALUES(777,1,0,3099)
INSERT INTO LOBS VALUES(778,1,0,3100)
INSERT INTO LOBS VALUES(779,1,0,3101)
INSERT INTO LOBS VALUES(780,1,0,3102)
INSERT INTO LOBS VALUES(781,1,0,3103)
INSERT INTO LOBS VALUES(782,1,0,3104)
INSERT INTO LOBS VALUES(783,1,0,3105)
INSERT INTO LOBS VALUES(784,1,0,3106)
INSERT INTO LOBS VALUES(785,1,0,3107)
INSERT INTO LOBS VALUES(786,1,0,3108)
INSERT INTO LOBS VALUES(787,1,0,3109)
INSERT INTO LOBS VALUES(788,1,0,3110)
INSERT INTO LOBS VALUES(789,1,0,3111)
INSERT INTO LOBS VALUES(790,1,0,3112)
INSERT INTO LOBS VALUES(791,1,0,3113)
INSERT INTO LOBS VALUES(792,1,0,3114)
INSERT INTO LOBS VALUES(793,1,0,3115)
INSERT INTO LOBS VALUES(794,1,0,3116)
INSERT INTO LOBS VALUES(795,1,0,3117)
INSERT INTO LOBS VALUES(796,1,0,3118)
INSERT INTO LOBS VALUES(797,1,0,3119)
INSERT INTO LOBS VALUES(798,1,0,3120)
INSERT INTO LOBS VALUES(799,1,0,3121)
INSERT INTO LOBS VALUES(800,1,0,3122)
INSERT INTO LOBS VALUES(801,1,0,3123)
INSERT INTO LOBS VALUES(802,1,0,3124)
INSERT INTO LOBS VALUES(803,1,0,3125)
INSERT INTO LOBS VALUES(804,1,0,3126)
INSERT INTO LOBS VALUES(805,1,0,3127)
INSERT INTO LOBS VALUES(806,1,0,3128)
INSERT INTO LOBS VALUES(807,1,0,3129)
INSERT INTO LOBS VALUES(808,1,0,3130)
INSERT INTO LOBS VALUES(809,1,0,3131)
INSERT INTO LOBS VALUES(810,1,0,3132)
INSERT INTO LOBS VALUES(811,1,0,3133)
INSERT INTO LOBS VALUES(812,1,0,3134)
INSERT INTO LOBS VALUES(813,1,0,3135)
INSERT INTO LOBS VALUES(814,1,0,3136)
INSERT INTO LOBS VALUES(815,1,0,3137)
INSERT INTO LOBS VALUES(816,1,0,3138)
INSERT INTO LOBS VALUES(817,1,0,3139)
INSERT INTO LOBS VALUES(818,1,0,3140)
INSERT INTO LOBS VALUES(819,1,0,3141)
INSERT INTO LOBS VALUES(820,1,0,3142)
INSERT INTO LOBS VALUES(821,1,0,3143)
INSERT INTO LOBS VALUES(822,1,0,3144)
INSERT INTO LOBS VALUES(823,1,0,3145)
INSERT INTO LOBS VALUES(824,1,0,3146)
INSERT INTO LOBS VALUES(825,1,0,3147)
INSERT INTO LOBS VALUES(826,1,0,3148)
INSERT INTO LOBS VALUES(827,1,0,3149)
INSERT INTO LOBS VALUES(831,1,0,3150)
INSERT INTO LOBS VALUES(841,1,0,3151)
INSERT INTO LOBS VALUES(843,1,0,3152)
INSERT INTO LOBS VALUES(850,1,0,3153)
INSERT INTO LOBS VALUES(858,1,0,3154)
INSERT INTO LOBS VALUES(861,1,0,3155)
INSERT INTO LOBS VALUES(863,1,0,3156)
INSERT INTO LOBS VALUES(864,1,0,3157)
INSERT INTO LOBS VALUES(870,1,0,3158)
INSERT INTO LOBS VALUES(871,1,0,3159)
INSERT INTO LOBS VALUES(872,1,0,3160)
INSERT INTO LOBS VALUES(878,1,0,3161)
INSERT INTO LOBS VALUES(879,1,0,3162)
INSERT INTO LOBS VALUES(880,1,0,3163)
INSERT INTO LOBS VALUES(882,1,0,3164)
INSERT INTO LOBS VALUES(883,1,0,3165)
INSERT INTO LOBS VALUES(896,1,0,3166)
INSERT INTO LOBS VALUES(903,1,0,3167)
INSERT INTO LOBS VALUES(906,1,0,3168)
INSERT INTO LOBS VALUES(907,1,0,3169)
INSERT INTO LOBS VALUES(908,1,0,3170)
INSERT INTO LOBS VALUES(910,1,0,3171)
INSERT INTO LOBS VALUES(911,1,0,3172)
INSERT INTO LOBS VALUES(912,1,0,3173)
INSERT INTO LOBS VALUES(913,1,0,3174)
INSERT INTO LOBS VALUES(914,1,0,3175)
INSERT INTO LOBS VALUES(915,1,0,3176)
INSERT INTO LOBS VALUES(916,1,0,3177)
INSERT INTO LOBS VALUES(917,1,0,3178)
INSERT INTO LOBS VALUES(918,1,0,3179)
INSERT INTO LOBS VALUES(919,1,0,3180)
INSERT INTO LOBS VALUES(920,1,0,3181)
INSERT INTO LOBS VALUES(921,1,0,3182)
INSERT INTO LOBS VALUES(922,1,0,3183)
INSERT INTO LOBS VALUES(923,1,0,3184)
INSERT INTO LOBS VALUES(924,1,0,3185)
INSERT INTO LOBS VALUES(925,1,0,3186)
INSERT INTO LOBS VALUES(926,1,0,3187)
INSERT INTO LOBS VALUES(927,1,0,3188)
INSERT INTO LOBS VALUES(928,1,0,3189)
INSERT INTO LOBS VALUES(929,1,0,3190)
INSERT INTO LOBS VALUES(930,1,0,3191)
INSERT INTO LOBS VALUES(931,1,0,3192)
INSERT INTO LOBS VALUES(932,1,0,3193)
INSERT INTO LOBS VALUES(933,1,0,3194)
INSERT INTO LOBS VALUES(934,1,0,3195)
INSERT INTO LOBS VALUES(935,1,0,3196)
INSERT INTO LOBS VALUES(936,1,0,3197)
INSERT INTO LOBS VALUES(937,1,0,3198)
INSERT INTO LOBS VALUES(938,1,0,3199)
INSERT INTO LOBS VALUES(939,1,0,3200)
INSERT INTO LOBS VALUES(940,1,0,3201)
INSERT INTO LOBS VALUES(941,1,0,3202)
INSERT INTO LOBS VALUES(942,1,0,3203)
INSERT INTO LOBS VALUES(943,1,0,3204)
INSERT INTO LOBS VALUES(944,1,0,3205)
INSERT INTO LOBS VALUES(945,1,0,3206)
INSERT INTO LOBS VALUES(946,1,0,3207)
INSERT INTO LOBS VALUES(947,1,0,3208)
INSERT INTO LOBS VALUES(948,1,0,3209)
INSERT INTO LOBS VALUES(949,1,0,3210)
INSERT INTO LOBS VALUES(950,1,0,3211)
INSERT INTO LOBS VALUES(951,1,0,3212)
INSERT INTO LOBS VALUES(952,1,0,3213)
INSERT INTO LOBS VALUES(953,1,0,3214)
INSERT INTO LOBS VALUES(954,1,0,3215)
INSERT INTO LOBS VALUES(955,1,0,3216)
INSERT INTO LOBS VALUES(956,1,0,3217)
INSERT INTO LOBS VALUES(957,1,0,3218)
INSERT INTO LOBS VALUES(958,1,0,3219)
INSERT INTO LOBS VALUES(959,1,0,3220)
INSERT INTO LOBS VALUES(960,1,0,3221)
INSERT INTO LOBS VALUES(961,1,0,3222)
INSERT INTO LOBS VALUES(962,1,0,3223)
INSERT INTO LOBS VALUES(963,1,0,3224)
INSERT INTO LOBS VALUES(964,1,0,3225)
INSERT INTO LOBS VALUES(965,1,0,3226)
INSERT INTO LOBS VALUES(966,1,0,3227)
INSERT INTO LOBS VALUES(967,1,0,3228)
INSERT INTO LOBS VALUES(968,1,0,3229)
INSERT INTO LOBS VALUES(969,1,0,3230)
INSERT INTO LOBS VALUES(970,1,0,3231)
INSERT INTO LOBS VALUES(971,1,0,3232)
INSERT INTO LOBS VALUES(972,1,0,3233)
INSERT INTO LOBS VALUES(973,1,0,3234)
INSERT INTO LOBS VALUES(974,1,0,3235)
INSERT INTO LOBS VALUES(975,1,0,3236)
INSERT INTO LOBS VALUES(976,1,0,3237)
INSERT INTO LOBS VALUES(977,1,0,3238)
INSERT INTO LOBS VALUES(978,1,0,3239)
INSERT INTO LOBS VALUES(979,1,0,3240)
INSERT INTO LOBS VALUES(980,1,0,3241)
INSERT INTO LOBS VALUES(981,1,0,3242)
INSERT INTO LOBS VALUES(982,1,0,3243)
INSERT INTO LOBS VALUES(983,1,0,3244)
INSERT INTO LOBS VALUES(984,1,0,3245)
INSERT INTO LOBS VALUES(985,1,0,3246)
INSERT INTO LOBS VALUES(986,1,0,3247)
INSERT INTO LOBS VALUES(987,1,0,3248)
INSERT INTO LOBS VALUES(988,1,0,3249)
INSERT INTO LOBS VALUES(989,1,0,3250)
INSERT INTO LOBS VALUES(990,1,0,3251)
INSERT INTO LOBS VALUES(991,1,0,3252)
INSERT INTO LOBS VALUES(992,1,0,3253)
INSERT INTO LOBS VALUES(993,1,0,3254)
INSERT INTO LOBS VALUES(994,1,0,3255)
INSERT INTO LOBS VALUES(995,1,0,3256)
INSERT INTO LOBS VALUES(996,1,0,3257)
INSERT INTO LOBS VALUES(997,1,0,3258)
INSERT INTO LOBS VALUES(998,1,0,3259)
INSERT INTO LOBS VALUES(999,1,0,3260)
INSERT INTO LOBS VALUES(1000,1,0,3261)
INSERT INTO LOBS VALUES(1001,1,0,3262)
INSERT INTO LOBS VALUES(1002,1,0,3263)
INSERT INTO LOBS VALUES(1003,1,0,3264)
INSERT INTO LOBS VALUES(1004,1,0,3265)
INSERT INTO LOBS VALUES(1005,1,0,3266)
INSERT INTO LOBS VALUES(1006,1,0,3267)
INSERT INTO LOBS VALUES(1007,1,0,3268)
INSERT INTO LOBS VALUES(1008,1,0,3269)
INSERT INTO LOBS VALUES(1009,1,0,3270)
INSERT INTO LOBS VALUES(1010,1,0,3271)
INSERT INTO LOBS VALUES(1011,1,0,3272)
INSERT INTO LOBS VALUES(1012,1,0,3273)
INSERT INTO LOBS VALUES(1013,1,0,3274)
INSERT INTO LOBS VALUES(1014,1,0,3275)
INSERT INTO LOBS VALUES(1015,1,0,3276)
INSERT INTO LOBS VALUES(1016,1,0,3277)
INSERT INTO LOBS VALUES(1017,1,0,3278)
INSERT INTO LOBS VALUES(1018,1,0,3279)
INSERT INTO LOBS VALUES(1019,1,0,3280)
INSERT INTO LOBS VALUES(1020,1,0,3281)
INSERT INTO LOBS VALUES(1021,1,0,3282)
INSERT INTO LOBS VALUES(1022,1,0,3283)
INSERT INTO LOBS VALUES(1023,1,0,3284)
INSERT INTO LOBS VALUES(1024,1,0,3285)
INSERT INTO LOBS VALUES(1025,1,0,3286)
INSERT INTO LOBS VALUES(1026,1,0,3287)
INSERT INTO LOBS VALUES(1027,1,0,3288)
INSERT INTO LOBS VALUES(1028,1,0,3289)
INSERT INTO LOBS VALUES(1029,1,0,3290)
INSERT INTO LOBS VALUES(1030,1,0,3291)
INSERT INTO LOBS VALUES(1031,1,0,3292)
INSERT INTO LOB_IDS VALUES(444,486,1,30)
INSERT INTO LOB_IDS VALUES(445,486,1,30)
INSERT INTO LOB_IDS VALUES(446,486,1,30)
INSERT INTO LOB_IDS VALUES(447,493,1,30)
INSERT INTO LOB_IDS VALUES(448,486,1,30)
INSERT INTO LOB_IDS VALUES(449,486,1,30)
INSERT INTO LOB_IDS VALUES(450,486,1,30)
INSERT INTO LOB_IDS VALUES(740,7775,5,30)
INSERT INTO LOB_IDS VALUES(829,740,1,30)
INSERT INTO LOB_IDS VALUES(830,528,1,30)
INSERT INTO LOB_IDS VALUES(831,731,1,30)
INSERT INTO LOB_IDS VALUES(833,1727,1,30)
INSERT INTO LOB_IDS VALUES(834,1409,1,30)
INSERT INTO LOB_IDS VALUES(835,1434,1,30)
INSERT INTO LOB_IDS VALUES(836,853,1,30)
INSERT INTO LOB_IDS VALUES(837,725,1,30)
INSERT INTO LOB_IDS VALUES(838,573,1,30)
INSERT INTO LOB_IDS VALUES(839,2173,1,30)
INSERT INTO LOB_IDS VALUES(840,539,1,30)
INSERT INTO LOB_IDS VALUES(841,3222,0,30)
INSERT INTO LOB_IDS VALUES(843,547,1,30)
INSERT INTO LOB_IDS VALUES(845,1841,1,30)
INSERT INTO LOB_IDS VALUES(846,639,1,30)
INSERT INTO LOB_IDS VALUES(847,623,1,30)
INSERT INTO LOB_IDS VALUES(848,574,1,30)
INSERT INTO LOB_IDS VALUES(849,657,1,30)
INSERT INTO LOB_IDS VALUES(850,799,1,30)
INSERT INTO LOB_IDS VALUES(852,643,1,30)
INSERT INTO LOB_IDS VALUES(853,638,1,30)
INSERT INTO LOB_IDS VALUES(854,644,1,30)
INSERT INTO LOB_IDS VALUES(855,540,1,30)
INSERT INTO LOB_IDS VALUES(856,504,1,30)
INSERT INTO LOB_IDS VALUES(857,504,1,30)
INSERT INTO LOB_IDS VALUES(858,1291,1,30)
INSERT INTO LOB_IDS VALUES(860,2106,1,30)
INSERT INTO LOB_IDS VALUES(861,703,1,30)
INSERT INTO LOB_IDS VALUES(863,1337,1,30)
INSERT INTO LOB_IDS VALUES(866,1171,1,30)
INSERT INTO LOB_IDS VALUES(867,1183,1,30)
INSERT INTO LOB_IDS VALUES(868,1657,1,30)
INSERT INTO LOB_IDS VALUES(869,1098,1,30)
INSERT INTO LOB_IDS VALUES(870,1817,1,30)
INSERT INTO LOB_IDS VALUES(874,960,1,30)
INSERT INTO LOB_IDS VALUES(875,1269,1,30)
INSERT INTO LOB_IDS VALUES(876,1450,1,30)
INSERT INTO LOB_IDS VALUES(877,4922,1,30)
INSERT INTO LOB_IDS VALUES(878,2770,1,30)
INSERT INTO LOB_IDS VALUES(882,1314,1,30)
INSERT INTO LOB_IDS VALUES(885,1238,1,30)
INSERT INTO LOB_IDS VALUES(886,563,1,30)
INSERT INTO LOB_IDS VALUES(887,3684,1,30)
INSERT INTO LOB_IDS VALUES(888,1709,1,30)
INSERT INTO LOB_IDS VALUES(889,654,1,30)
INSERT INTO LOB_IDS VALUES(890,4551,1,30)
INSERT INTO LOB_IDS VALUES(891,984,1,30)
INSERT INTO LOB_IDS VALUES(892,7480,1,30)
INSERT INTO LOB_IDS VALUES(893,5858,1,30)
INSERT INTO LOB_IDS VALUES(894,760,1,30)
INSERT INTO LOB_IDS VALUES(895,1709,1,30)
INSERT INTO LOB_IDS VALUES(896,637,1,30)
INSERT INTO LOB_IDS VALUES(898,2546,1,30)
INSERT INTO LOB_IDS VALUES(899,1096,1,30)
INSERT INTO LOB_IDS VALUES(900,1263,1,30)
INSERT INTO LOB_IDS VALUES(901,1161,1,30)
INSERT INTO LOB_IDS VALUES(902,1120,1,30)
INSERT INTO LOB_IDS VALUES(903,1186,1,30)
INSERT INTO LOB_IDS VALUES(905,677,1,30)
INSERT INTO LOB_IDS VALUES(906,712,1,30)
INSERT INTO LOB_IDS VALUES(910,530,1,30)
INSERT INTO LOB_IDS VALUES(1200,1508,1,30)
INSERT INTO LOB_IDS VALUES(1245,855,1,30)
INSERT INTO LOB_IDS VALUES(1638,673,1,30)
INSERT INTO LOB_IDS VALUES(1721,637,1,30)
INSERT INTO LOB_IDS VALUES(1722,1232,1,30)
INSERT INTO LOB_IDS VALUES(1960,2490,1,30)
INSERT INTO LOB_IDS VALUES(1962,3558,1,30)
INSERT INTO LOB_IDS VALUES(1963,2288,1,30)
INSERT INTO LOB_IDS VALUES(1969,1705,1,30)
INSERT INTO LOB_IDS VALUES(1970,2394,1,30)
INSERT INTO LOB_IDS VALUES(1971,3035,1,30)
INSERT INTO LOB_IDS VALUES(1972,3970,1,30)
INSERT INTO LOB_IDS VALUES(1975,3496,1,30)
INSERT INTO LOB_IDS VALUES(1977,3487,1,30)
INSERT INTO LOB_IDS VALUES(1978,2706,1,30)
INSERT INTO LOB_IDS VALUES(2003,3343,1,30)
INSERT INTO LOB_IDS VALUES(2010,6393,1,30)
INSERT INTO LOB_IDS VALUES(2011,6393,1,30)
INSERT INTO LOB_IDS VALUES(2012,6393,1,30)
INSERT INTO LOB_IDS VALUES(2013,6393,2,30)
INSERT INTO LOB_IDS VALUES(2020,1532,1,30)
INSERT INTO LOB_IDS VALUES(2021,826,1,30)
INSERT INTO LOB_IDS VALUES(2022,3599,2,30)
INSERT INTO LOB_IDS VALUES(2034,1632,0,30)
INSERT INTO LOB_IDS VALUES(2062,2954,2,30)
INSERT INTO LOB_IDS VALUES(2063,2950,2,30)
INSERT INTO LOB_IDS VALUES(2073,3005,1,30)
INSERT INTO LOB_IDS VALUES(2076,2990,1,30)
INSERT INTO LOB_IDS VALUES(2078,2990,2,30)
INSERT INTO LOB_IDS VALUES(2084,3014,2,30)
INSERT INTO LOB_IDS VALUES(2085,3033,2,30)
INSERT INTO LOB_IDS VALUES(2087,2954,2,30)
INSERT INTO LOB_IDS VALUES(2088,2965,2,30)
INSERT INTO LOB_IDS VALUES(2089,3009,2,30)
INSERT INTO LOB_IDS VALUES(2090,2972,2,30)
INSERT INTO LOB_IDS VALUES(2092,3162,2,30)
INSERT INTO LOB_IDS VALUES(2093,3035,2,30)
INSERT INTO LOB_IDS VALUES(2094,3198,1,30)
INSERT INTO LOB_IDS VALUES(2095,3203,2,30)
INSERT INTO LOB_IDS VALUES(2096,3027,1,30)
INSERT INTO LOB_IDS VALUES(2097,3027,2,30)
INSERT INTO LOB_IDS VALUES(2098,3115,2,30)
INSERT INTO LOB_IDS VALUES(2099,2976,2,30)
INSERT INTO LOB_IDS VALUES(2101,3160,2,30)
INSERT INTO LOB_IDS VALUES(2102,3015,2,30)
INSERT INTO LOB_IDS VALUES(2103,3013,2,30)
INSERT INTO LOB_IDS VALUES(2104,3266,0,30)
INSERT INTO LOB_IDS VALUES(2105,3271,0,30)
INSERT INTO LOB_IDS VALUES(2106,3019,2,30)
INSERT INTO LOB_IDS VALUES(2107,3017,1,30)
INSERT INTO LOB_IDS VALUES(2108,3017,2,30)
INSERT INTO LOB_IDS VALUES(2109,938,1,30)
INSERT INTO LOB_IDS VALUES(2110,2904,1,30)
INSERT INTO LOB_IDS VALUES(2111,2961,1,30)
INSERT INTO LOB_IDS VALUES(2112,1166,1,30)
INSERT INTO LOB_IDS VALUES(2114,2546,1,30)
INSERT INTO LOB_IDS VALUES(2116,853,1,30)
INSERT INTO LOB_IDS VALUES(2117,4841,1,30)
INSERT INTO LOB_IDS VALUES(2132,2678,1,30)
INSERT INTO LOB_IDS VALUES(2135,3330,1,30)
INSERT INTO LOB_IDS VALUES(2136,3357,2,30)
INSERT INTO LOB_IDS VALUES(2155,2678,2,30)
INSERT INTO LOB_IDS VALUES(2156,3330,1,30)
INSERT INTO LOB_IDS VALUES(2157,3330,1,30)
INSERT INTO LOB_IDS VALUES(2158,3340,1,30)
INSERT INTO LOB_IDS VALUES(2159,3340,2,30)
INSERT INTO LOB_IDS VALUES(2184,2792,1,30)
INSERT INTO LOB_IDS VALUES(2192,1090,1,30)
INSERT INTO LOB_IDS VALUES(2193,4331,1,30)
INSERT INTO LOB_IDS VALUES(2196,4331,1,30)
INSERT INTO LOB_IDS VALUES(2199,4331,1,30)
INSERT INTO LOB_IDS VALUES(2200,4331,2,30)
INSERT INTO LOB_IDS VALUES(2218,553,1,30)
INSERT INTO LOB_IDS VALUES(2219,984,1,30)
INSERT INTO LOB_IDS VALUES(2220,4380,1,30)
INSERT INTO LOB_IDS VALUES(2221,4380,2,30)
INSERT INTO LOB_IDS VALUES(2248,3411,1,30)
INSERT INTO LOB_IDS VALUES(2255,1545,1,30)
INSERT INTO LOB_IDS VALUES(2259,2765,1,30)
INSERT INTO LOB_IDS VALUES(2266,1549,1,30)
INSERT INTO LOB_IDS VALUES(2267,3009,2,30)
INSERT INTO LOB_IDS VALUES(2268,3015,1,30)
INSERT INTO LOB_IDS VALUES(2269,4343,1,30)
INSERT INTO LOB_IDS VALUES(2270,5389,1,30)
INSERT INTO LOB_IDS VALUES(2272,5389,1,30)
INSERT INTO LOB_IDS VALUES(2273,5387,1,30)
INSERT INTO LOB_IDS VALUES(2274,1524,0,30)
INSERT INTO LOB_IDS VALUES(2275,3039,2,30)
INSERT INTO LOB_IDS VALUES(2276,2977,2,30)
INSERT INTO LOB_IDS VALUES(2277,3006,2,30)
INSERT INTO LOB_IDS VALUES(2278,3190,1,30)
INSERT INTO LOB_IDS VALUES(2279,3190,2,30)
INSERT INTO LOB_IDS VALUES(2280,3027,2,30)
INSERT INTO LOB_IDS VALUES(2281,3007,1,30)
INSERT INTO LOB_IDS VALUES(2282,3007,2,30)
INSERT INTO LOB_IDS VALUES(2283,3189,2,30)
INSERT INTO LOB_IDS VALUES(2284,3272,2,30)
INSERT INTO LOB_IDS VALUES(2285,3290,0,30)
INSERT INTO LOB_IDS VALUES(2286,3238,2,30)
INSERT INTO LOB_IDS VALUES(2287,4279,2,30)
INSERT INTO LOB_IDS VALUES(2288,3422,2,30)
INSERT INTO LOB_IDS VALUES(2289,2971,2,30)
INSERT INTO LOB_IDS VALUES(2290,3007,2,30)
INSERT INTO LOB_IDS VALUES(2291,3011,2,30)
INSERT INTO LOB_IDS VALUES(2292,3131,0,30)
INSERT INTO LOB_IDS VALUES(2293,2983,1,30)
INSERT INTO LOB_IDS VALUES(2294,2983,2,30)
INSERT INTO LOB_IDS VALUES(2295,3154,2,30)
INSERT INTO LOB_IDS VALUES(2296,3020,2,30)
INSERT INTO LOB_IDS VALUES(2297,3012,2,30)
INSERT INTO LOB_IDS VALUES(2298,2952,2,30)
INSERT INTO LOB_IDS VALUES(2299,2955,2,30)
INSERT INTO LOB_IDS VALUES(2300,2971,2,30)
INSERT INTO LOB_IDS VALUES(2301,5387,1,30)
INSERT INTO LOB_IDS VALUES(2302,2973,2,30)
INSERT INTO LOB_IDS VALUES(2303,3028,2,30)
INSERT INTO LOB_IDS VALUES(2304,3010,2,30)
INSERT INTO LOB_IDS VALUES(2305,3002,2,30)
INSERT INTO LOB_IDS VALUES(2306,2988,2,30)
INSERT INTO LOB_IDS VALUES(2307,2975,2,30)
INSERT INTO LOB_IDS VALUES(2308,3121,2,30)
INSERT INTO LOB_IDS VALUES(2309,3196,1,30)
INSERT INTO LOB_IDS VALUES(2310,4341,2,30)
INSERT INTO LOB_IDS VALUES(2311,4340,1,30)
INSERT INTO LOB_IDS VALUES(2312,2996,1,30)
INSERT INTO LOB_IDS VALUES(2313,2996,2,30)
INSERT INTO LOB_IDS VALUES(2314,2968,2,30)
INSERT INTO LOB_IDS VALUES(2315,2972,2,30)
INSERT INTO LOB_IDS VALUES(2316,2993,2,30)
INSERT INTO LOB_IDS VALUES(2317,3405,1,30)
INSERT INTO LOB_IDS VALUES(2318,3405,2,30)
INSERT INTO LOB_IDS VALUES(2319,5079,1,30)
INSERT INTO LOB_IDS VALUES(2321,3565,1,30)
INSERT INTO LOB_IDS VALUES(2322,4738,1,30)
INSERT INTO LOB_IDS VALUES(2323,5387,1,30)
INSERT INTO LOB_IDS VALUES(2324,5041,1,30)
INSERT INTO LOB_IDS VALUES(2325,5041,1,30)
INSERT INTO LOB_IDS VALUES(2326,5041,1,30)
INSERT INTO LOB_IDS VALUES(2327,5370,1,30)
INSERT INTO LOB_IDS VALUES(2328,5370,1,30)
INSERT INTO LOB_IDS VALUES(2329,5370,1,30)
INSERT INTO LOB_IDS VALUES(2330,5387,2,30)
INSERT INTO LOB_IDS VALUES(2342,4340,1,30)
INSERT INTO LOB_IDS VALUES(2343,5370,2,30)
INSERT INTO LOB_IDS VALUES(2348,6442,0,30)
INSERT INTO LOB_IDS VALUES(2349,622,1,30)
INSERT INTO LOB_IDS VALUES(2351,1133,1,30)
INSERT INTO LOB_IDS VALUES(2352,6740,0,30)
INSERT INTO LOB_IDS VALUES(2353,6740,0,30)
INSERT INTO LOB_IDS VALUES(2355,6740,0,30)
INSERT INTO LOB_IDS VALUES(2356,6740,0,30)
INSERT INTO LOB_IDS VALUES(2357,6873,0,30)
INSERT INTO LOB_IDS VALUES(2360,6873,0,30)
INSERT INTO LOB_IDS VALUES(2362,674,1,30)
INSERT INTO LOB_IDS VALUES(2363,7329,0,30)
INSERT INTO LOB_IDS VALUES(2364,7329,0,30)
INSERT INTO LOB_IDS VALUES(2365,7321,0,30)
INSERT INTO LOB_IDS VALUES(2366,7360,0,30)
INSERT INTO LOB_IDS VALUES(2367,7767,0,30)
INSERT INTO LOB_IDS VALUES(2368,7767,0,30)
INSERT INTO LOB_IDS VALUES(2369,7767,0,30)
INSERT INTO LOB_IDS VALUES(2370,1881,1,30)
INSERT INTO LOB_IDS VALUES(2371,4340,2,30)
INSERT INTO LOB_IDS VALUES(2372,7767,0,30)
INSERT INTO LOB_IDS VALUES(2373,7768,0,30)
INSERT INTO LOB_IDS VALUES(2374,7768,0,30)
INSERT INTO LOB_IDS VALUES(2376,539,1,30)
INSERT INTO LOB_IDS VALUES(2377,7729,0,30)
INSERT INTO LOB_IDS VALUES(2378,7977,0,30)
INSERT INTO LOB_IDS VALUES(2379,8016,0,30)
INSERT INTO LOB_IDS VALUES(2380,7951,0,30)
INSERT INTO LOB_IDS VALUES(2381,7948,0,30)
INSERT INTO LOB_IDS VALUES(2383,7983,0,30)
INSERT INTO LOB_IDS VALUES(2384,8183,0,30)
INSERT INTO LOB_IDS VALUES(2385,8180,0,30)
INSERT INTO LOB_IDS VALUES(2388,8180,0,30)
INSERT INTO LOB_IDS VALUES(2391,722,0,30)
INSERT INTO LOB_IDS VALUES(2397,958,1,30)
INSERT INTO LOB_IDS VALUES(2398,5399,1,30)
INSERT INTO LOB_IDS VALUES(2399,5436,1,30)
INSERT INTO LOB_IDS VALUES(2400,572,1,30)
INSERT INTO LOB_IDS VALUES(2401,5473,1,30)
INSERT INTO LOB_IDS VALUES(2402,5473,1,30)
INSERT INTO LOB_IDS VALUES(2403,5473,1,30)
INSERT INTO LOB_IDS VALUES(2404,5491,1,30)
INSERT INTO LOB_IDS VALUES(2405,5491,1,30)
INSERT INTO LOB_IDS VALUES(2406,5479,2,30)
INSERT INTO LOB_IDS VALUES(2407,3470,1,30)
INSERT INTO LOB_IDS VALUES(2408,4679,1,30)
INSERT INTO LOB_IDS VALUES(2409,3196,1,30)
INSERT INTO LOB_IDS VALUES(2410,3202,2,30)
INSERT INTO LOB_IDS VALUES(2411,1400,1,30)
INSERT INTO LOB_IDS VALUES(2412,8180,0,30)
INSERT INTO LOB_IDS VALUES(2413,1338,1,30)
INSERT INTO LOB_IDS VALUES(2414,5706,2,30)
INSERT INTO LOB_IDS VALUES(2415,5710,1,30)
INSERT INTO LOB_IDS VALUES(2416,5710,1,30)
INSERT INTO LOB_IDS VALUES(2417,6119,1,30)
INSERT INTO LOB_IDS VALUES(2418,6119,2,30)
INSERT INTO LOB_IDS VALUES(2420,971,1,30)
INSERT INTO LOB_IDS VALUES(2421,4357,1,30)
INSERT INTO LOB_IDS VALUES(2423,4346,2,30)
INSERT INTO LOB_IDS VALUES(2424,4357,2,30)
INSERT INTO LOB_IDS VALUES(2425,5355,2,30)
INSERT INTO LOB_IDS VALUES(2426,999,1,30)
INSERT INTO LOB_IDS VALUES(2427,959,0,30)
INSERT INTO LOB_IDS VALUES(2428,2532,0,30)
INSERT INTO LOB_IDS VALUES(2429,4291,0,30)
INSERT INTO LOB_IDS VALUES(2430,4291,0,30)
INSERT INTO LOB_IDS VALUES(2431,4334,0,30)
INSERT INTO LOB_IDS VALUES(2432,564,1,30)
INSERT INTO LOB_IDS VALUES(2433,4473,0,30)
INSERT INTO LOB_IDS VALUES(2438,2290,1,30)
INSERT INTO LOB_IDS VALUES(2441,1680,1,30)
INSERT INTO LOB_IDS VALUES(2442,973,1,30)
INSERT INTO LOB_IDS VALUES(2443,4356,2,30)
INSERT INTO LOB_IDS VALUES(2444,966,1,30)
INSERT INTO LOB_IDS VALUES(2445,4374,1,30)
INSERT INTO LOB_IDS VALUES(2446,4392,1,30)
INSERT INTO LOB_IDS VALUES(2447,4436,1,30)
INSERT INTO LOB_IDS VALUES(2448,4475,1,30)
INSERT INTO LOB_IDS VALUES(2450,5456,1,30)
INSERT INTO LOB_IDS VALUES(2452,3737,1,30)
INSERT INTO LOB_IDS VALUES(2454,5460,1,30)
INSERT INTO LOB_IDS VALUES(2456,5460,1,30)
INSERT INTO LOB_IDS VALUES(2459,5467,1,30)
INSERT INTO LOB_IDS VALUES(2462,4124,1,30)
INSERT INTO LOB_IDS VALUES(2463,5325,2,30)
INSERT INTO LOB_IDS VALUES(2468,950,0,30)
INSERT INTO LOB_IDS VALUES(2469,3830,0,30)
INSERT INTO LOB_IDS VALUES(2470,4464,0,30)
INSERT INTO LOB_IDS VALUES(2471,4778,0,30)
INSERT INTO LOB_IDS VALUES(2472,4929,0,30)
INSERT INTO LOB_IDS VALUES(2476,5356,0,30)
INSERT INTO LOB_IDS VALUES(2477,6685,0,30)
INSERT INTO LOB_IDS VALUES(2478,6685,0,30)
INSERT INTO LOB_IDS VALUES(2479,6685,0,30)
INSERT INTO LOB_IDS VALUES(2482,7043,0,30)
INSERT INTO LOB_IDS VALUES(2483,7052,0,30)
INSERT INTO LOB_IDS VALUES(2484,7089,0,30)
INSERT INTO LOB_IDS VALUES(2485,7050,0,30)
INSERT INTO LOB_IDS VALUES(2486,7089,0,30)
INSERT INTO LOB_IDS VALUES(2491,7128,0,30)
INSERT INTO LOB_IDS VALUES(2492,7128,0,30)
INSERT INTO LOB_IDS VALUES(2493,7128,0,30)
INSERT INTO LOB_IDS VALUES(2494,7128,0,30)
INSERT INTO LOB_IDS VALUES(2495,7128,0,30)
INSERT INTO LOB_IDS VALUES(2500,7128,0,30)
INSERT INTO LOB_IDS VALUES(2501,7402,0,30)
INSERT INTO LOB_IDS VALUES(2502,7402,0,30)
INSERT INTO LOB_IDS VALUES(2503,7672,0,30)
INSERT INTO LOB_IDS VALUES(2504,7709,0,30)
INSERT INTO LOB_IDS VALUES(2506,7709,0,30)
INSERT INTO LOB_IDS VALUES(2507,7709,0,30)
INSERT INTO LOB_IDS VALUES(2510,8031,0,30)
INSERT INTO LOB_IDS VALUES(2511,8355,0,30)
INSERT INTO LOB_IDS VALUES(2512,8175,0,30)
INSERT INTO LOB_IDS VALUES(2514,1020,0,30)
INSERT INTO LOB_IDS VALUES(2515,8359,0,30)
INSERT INTO LOB_IDS VALUES(2517,533,1,30)
INSERT INTO LOB_IDS VALUES(2518,8359,0,30)
INSERT INTO LOB_IDS VALUES(2519,8454,0,30)
INSERT INTO LOB_IDS VALUES(2520,8549,0,30)
INSERT INTO LOB_IDS VALUES(2521,8549,0,30)
INSERT INTO LOB_IDS VALUES(2522,856,1,30)
INSERT INTO LOB_IDS VALUES(2523,3639,1,30)
INSERT INTO LOB_IDS VALUES(2524,3639,1,30)
INSERT INTO LOB_IDS VALUES(2525,3650,1,30)
INSERT INTO LOB_IDS VALUES(2526,3397,1,30)
INSERT INTO LOB_IDS VALUES(2527,3650,1,30)
INSERT INTO LOB_IDS VALUES(2528,3643,1,30)
INSERT INTO LOB_IDS VALUES(2529,3650,1,30)
INSERT INTO LOB_IDS VALUES(2530,3069,1,30)
INSERT INTO LOB_IDS VALUES(2531,3069,2,30)
INSERT INTO LOB_IDS VALUES(2532,3359,1,30)
INSERT INTO LOB_IDS VALUES(2533,4280,1,30)
INSERT INTO LOB_IDS VALUES(2534,4280,1,30)
INSERT INTO LOB_IDS VALUES(2535,4280,2,30)
INSERT INTO LOB_IDS VALUES(2536,945,1,30)
INSERT INTO LOB_IDS VALUES(2537,1482,1,30)
INSERT INTO LOB_IDS VALUES(2538,687,1,30)
INSERT INTO LOB_IDS VALUES(2539,1996,1,30)
INSERT INTO LOB_IDS VALUES(2540,3956,1,30)
INSERT INTO LOB_IDS VALUES(2541,3956,1,30)
INSERT INTO LOB_IDS VALUES(2543,8549,1,30)
INSERT INTO LOB_IDS VALUES(2544,8549,0,30)
INSERT INTO LOB_IDS VALUES(2545,3958,2,30)
INSERT INTO LOB_IDS VALUES(2546,8926,0,30)
INSERT INTO LOB_IDS VALUES(2547,8926,0,30)
INSERT INTO LOB_IDS VALUES(2548,8926,0,30)
INSERT INTO LOB_IDS VALUES(2549,7722,0,30)
INSERT INTO LOB_IDS VALUES(2550,8985,0,30)
INSERT INTO LOB_IDS VALUES(2551,9026,0,30)
INSERT INTO LOB_IDS VALUES(2554,9026,0,30)
INSERT INTO LOB_IDS VALUES(2558,1473,0,30)
INSERT INTO LOB_IDS VALUES(2564,9026,0,30)
INSERT INTO LOB_IDS VALUES(2565,949,1,30)
INSERT INTO LOB_IDS VALUES(2566,1701,1,30)
INSERT INTO LOB_IDS VALUES(2567,3989,1,30)
INSERT INTO LOB_IDS VALUES(2570,3993,2,30)
INSERT INTO LOB_IDS VALUES(2572,9026,0,30)
INSERT INTO LOB_IDS VALUES(2573,8298,0,30)
INSERT INTO LOB_IDS VALUES(2576,706,0,30)
INSERT INTO LOB_IDS VALUES(2583,9732,0,30)
INSERT INTO LOB_IDS VALUES(2584,929,0,30)
INSERT INTO LOB_IDS VALUES(2585,9732,0,30)
INSERT INTO LOB_IDS VALUES(2603,1142,0,30)
INSERT INTO LOB_IDS VALUES(2608,4469,0,30)
INSERT INTO LOB_IDS VALUES(2618,1451,0,30)
INSERT INTO LOB_IDS VALUES(2619,1572,1,30)
INSERT INTO LOB_IDS VALUES(2620,808,0,30)
INSERT INTO LOB_IDS VALUES(2621,807,0,30)
INSERT INTO LOB_IDS VALUES(2622,870,0,30)
INSERT INTO LOB_IDS VALUES(2623,1487,0,30)
INSERT INTO LOB_IDS VALUES(2624,1531,1,30)
INSERT INTO LOB_IDS VALUES(2625,652,1,30)
INSERT INTO LOB_IDS VALUES(2626,1926,0,30)
INSERT INTO LOB_IDS VALUES(2627,1936,0,30)
INSERT INTO LOB_IDS VALUES(2628,2140,1,30)
INSERT INTO LOB_IDS VALUES(2629,1033,0,30)
INSERT INTO LOB_IDS VALUES(2630,9732,0,30)
INSERT INTO LOB_IDS VALUES(2631,3290,0,30)
INSERT INTO LOB_IDS VALUES(2632,1524,0,30)
INSERT INTO LOB_IDS VALUES(2633,853,0,30)
INSERT INTO LOB_IDS VALUES(2634,3282,0,30)
INSERT INTO LOB_IDS VALUES(2635,4280,0,30)
INSERT INTO LOB_IDS VALUES(2636,4277,0,30)
INSERT INTO LOB_IDS VALUES(2637,4277,0,30)
INSERT INTO LOB_IDS VALUES(2638,1542,0,30)
INSERT INTO LOB_IDS VALUES(2639,1564,0,30)
INSERT INTO LOB_IDS VALUES(2640,1577,0,30)
INSERT INTO LOB_IDS VALUES(2641,867,0,30)
INSERT INTO LOB_IDS VALUES(2642,878,1,30)
INSERT INTO LOB_IDS VALUES(2643,1602,0,30)
INSERT INTO LOB_IDS VALUES(2644,4017,0,30)
INSERT INTO LOB_IDS VALUES(2645,4634,2,30)
INSERT INTO LOB_IDS VALUES(2646,1516,1,30)
INSERT INTO LOB_IDS VALUES(2647,1594,1,30)
INSERT INTO LOB_IDS VALUES(2648,580,1,30)
INSERT INTO LOB_IDS VALUES(2649,4277,0,30)
INSERT INTO LOB_IDS VALUES(2650,4277,0,30)
INSERT INTO LOB_IDS VALUES(2651,3011,1,30)
INSERT INTO LOB_IDS VALUES(2652,4009,1,30)
INSERT INTO LOB_IDS VALUES(2653,4008,1,30)
INSERT INTO LOB_IDS VALUES(2654,725,0,30)
INSERT INTO LOB_IDS VALUES(2655,573,0,30)
INSERT INTO LOB_IDS VALUES(2656,1116,0,30)
INSERT INTO LOB_IDS VALUES(2657,605,1,30)
INSERT INTO LOB_IDS VALUES(2658,757,0,30)
INSERT INTO LOB_IDS VALUES(2659,798,0,30)
INSERT INTO LOB_IDS VALUES(2660,4277,0,30)
INSERT INTO LOB_IDS VALUES(2661,4008,1,30)
INSERT INTO LOB_IDS VALUES(2662,4008,1,30)
INSERT INTO LOB_IDS VALUES(2663,1129,0,30)
INSERT INTO LOB_IDS VALUES(2664,1175,0,30)
INSERT INTO LOB_IDS VALUES(2665,4008,2,30)
INSERT INTO LOB_IDS VALUES(2666,1175,0,30)
INSERT INTO LOB_IDS VALUES(2667,1175,1,30)
INSERT INTO LOB_IDS VALUES(2668,4278,1,30)
INSERT INTO LOB_IDS VALUES(2669,4271,1,30)
INSERT INTO LOB_IDS VALUES(2670,4263,2,30)
INSERT INTO LOB_IDS VALUES(2671,3996,2,30)
INSERT INTO LOB_IDS VALUES(2672,586,1,30)
INSERT INTO LOB_IDS VALUES(2673,4271,1,30)
INSERT INTO LOB_IDS VALUES(2674,4273,1,30)
INSERT INTO LOB_IDS VALUES(2675,4278,1,30)
INSERT INTO LOB_IDS VALUES(2676,4278,1,30)
INSERT INTO LOB_IDS VALUES(2677,4280,2,30)
INSERT INTO LOB_IDS VALUES(2678,4276,1,30)
INSERT INTO LOB_IDS VALUES(2679,4273,1,30)
INSERT INTO LOB_IDS VALUES(2680,4273,2,30)
INSERT INTO LOB_IDS VALUES(2681,4278,1,30)
INSERT INTO LOB_IDS VALUES(2682,1107,0,30)
INSERT INTO LOB_IDS VALUES(2683,1008,0,30)
INSERT INTO LOB_IDS VALUES(2684,1070,0,30)
INSERT INTO LOB_IDS VALUES(2685,1091,0,30)
INSERT INTO LOB_IDS VALUES(2686,1055,1,30)
INSERT INTO LOB_IDS VALUES(2687,4289,1,30)
INSERT INTO LOB_IDS VALUES(2688,4278,1,30)
INSERT INTO LOB_IDS VALUES(2689,4314,2,30)
INSERT INTO LOB_IDS VALUES(2690,3998,1,30)
INSERT INTO LOB_IDS VALUES(2691,3998,1,30)
INSERT INTO LOB_IDS VALUES(2692,3997,2,30)
INSERT INTO LOB_IDS VALUES(2693,1108,1,30)
INSERT INTO LOB_IDS VALUES(2694,4479,0,30)
INSERT INTO LOB_IDS VALUES(2695,4572,0,30)
INSERT INTO LOB_IDS VALUES(2696,4629,0,30)
INSERT INTO LOB_IDS VALUES(2697,4743,0,30)
INSERT INTO LOB_IDS VALUES(2698,1192,1,30)
INSERT INTO LOB_IDS VALUES(2699,1083,1,30)
INSERT INTO LOB_IDS VALUES(2700,946,0,30)
INSERT INTO LOB_IDS VALUES(2701,4044,0,30)
INSERT INTO LOB_IDS VALUES(2702,4126,0,30)
INSERT INTO LOB_IDS VALUES(2703,883,0,30)
INSERT INTO LOB_IDS VALUES(2704,868,0,30)
INSERT INTO LOB_IDS VALUES(2705,4138,0,30)
INSERT INTO LOB_IDS VALUES(2706,940,0,30)
INSERT INTO LOB_IDS VALUES(2707,932,0,30)
INSERT INTO LOB_IDS VALUES(2708,3908,0,30)
INSERT INTO LOB_IDS VALUES(2709,5578,0,30)
INSERT INTO LOB_IDS VALUES(2710,926,0,30)
INSERT INTO LOB_IDS VALUES(2711,5613,0,30)
INSERT INTO LOB_IDS VALUES(2712,5613,0,30)
INSERT INTO LOB_IDS VALUES(2713,5613,0,30)
INSERT INTO LOB_IDS VALUES(2714,927,0,30)
INSERT INTO LOB_IDS VALUES(2715,934,0,30)
INSERT INTO LOB_IDS VALUES(2716,936,0,30)
INSERT INTO LOB_IDS VALUES(2717,868,0,30)
INSERT INTO LOB_IDS VALUES(2718,866,0,30)
INSERT INTO LOB_IDS VALUES(2719,4139,0,30)
INSERT INTO LOB_IDS VALUES(2720,4138,0,30)
INSERT INTO LOB_IDS VALUES(2721,5613,0,30)
INSERT INTO LOB_IDS VALUES(2722,937,0,30)
INSERT INTO LOB_IDS VALUES(2723,5613,0,30)
INSERT INTO LOB_IDS VALUES(2724,4138,0,30)
INSERT INTO LOB_IDS VALUES(2725,936,0,30)
INSERT INTO LOB_IDS VALUES(2726,903,0,30)
INSERT INTO LOB_IDS VALUES(2727,925,0,30)
INSERT INTO LOB_IDS VALUES(2728,957,0,30)
INSERT INTO LOB_IDS VALUES(2729,905,0,30)
INSERT INTO LOB_IDS VALUES(2730,998,0,30)
INSERT INTO LOB_IDS VALUES(2731,589,1,30)
INSERT INTO LOB_IDS VALUES(2732,5650,0,30)
INSERT INTO LOB_IDS VALUES(2733,4138,0,30)
INSERT INTO LOB_IDS VALUES(2734,5687,0,30)
INSERT INTO LOB_IDS VALUES(2735,786,1,30)
INSERT INTO LOB_IDS VALUES(2736,1436,0,30)
INSERT INTO LOB_IDS VALUES(2737,1436,0,30)
INSERT INTO LOB_IDS VALUES(2738,1083,0,30)
INSERT INTO LOB_IDS VALUES(2739,1082,0,30)
INSERT INTO LOB_IDS VALUES(2740,1060,0,30)
INSERT INTO LOB_IDS VALUES(2741,975,1,30)
INSERT INTO LOB_IDS VALUES(2742,1061,0,30)
INSERT INTO LOB_IDS VALUES(2743,1064,0,30)
INSERT INTO LOB_IDS VALUES(2744,1478,0,30)
INSERT INTO LOB_IDS VALUES(2745,1483,0,30)
INSERT INTO LOB_IDS VALUES(2746,1510,0,30)
INSERT INTO LOB_IDS VALUES(2747,905,0,30)
INSERT INTO LOB_IDS VALUES(2748,7186,0,30)
INSERT INTO LOB_IDS VALUES(2749,7186,0,30)
INSERT INTO LOB_IDS VALUES(2750,7223,0,30)
INSERT INTO LOB_IDS VALUES(2751,578,0,30)
INSERT INTO LOB_IDS VALUES(2752,770,0,30)
INSERT INTO LOB_IDS VALUES(2753,769,0,30)
INSERT INTO LOB_IDS VALUES(2754,806,0,30)
INSERT INTO LOB_IDS VALUES(2755,820,0,30)
INSERT INTO LOB_IDS VALUES(2756,1420,0,30)
INSERT INTO LOB_IDS VALUES(2757,7223,0,30)
INSERT INTO LOB_IDS VALUES(2758,1420,0,30)
INSERT INTO LOB_IDS VALUES(2759,938,0,30)
INSERT INTO LOB_IDS VALUES(2760,1456,0,30)
INSERT INTO LOB_IDS VALUES(2761,1476,0,30)
INSERT INTO LOB_IDS VALUES(2762,1485,0,30)
INSERT INTO LOB_IDS VALUES(2763,1505,0,30)
INSERT INTO LOB_IDS VALUES(2764,7477,0,30)
INSERT INTO LOB_IDS VALUES(2765,7518,0,30)
INSERT INTO LOB_IDS VALUES(2766,843,0,30)
INSERT INTO LOB_IDS VALUES(2767,843,0,30)
INSERT INTO LOB_IDS VALUES(2768,7820,0,30)
INSERT INTO LOB_IDS VALUES(2769,858,0,30)
INSERT INTO LOB_IDS VALUES(2770,7820,0,30)
INSERT INTO LOB_IDS VALUES(2771,905,1,30)
INSERT INTO LOB_IDS VALUES(2772,5567,0,30)
INSERT INTO LOB_IDS VALUES(2773,6054,0,30)
INSERT INTO LOB_IDS VALUES(2774,6054,0,30)
INSERT INTO LOB_IDS VALUES(2775,1727,0,30)
INSERT INTO LOB_IDS VALUES(2776,1727,0,30)
INSERT INTO LOB_IDS VALUES(2777,1734,0,30)
INSERT INTO LOB_IDS VALUES(2778,1829,1,30)
INSERT INTO LOB_IDS VALUES(2779,1829,0,30)
INSERT INTO LOB_IDS VALUES(2780,1623,0,30)
INSERT INTO LOB_IDS VALUES(2781,4138,1,30)
INSERT INTO LOB_IDS VALUES(2782,4138,1,30)
INSERT INTO LOB_IDS VALUES(2783,1560,0,30)
INSERT INTO LOB_IDS VALUES(2784,1780,0,30)
INSERT INTO LOB_IDS VALUES(2785,1792,0,30)
INSERT INTO LOB_IDS VALUES(2786,1653,0,30)
INSERT INTO LOB_IDS VALUES(2787,1777,0,30)
INSERT INTO LOB_IDS VALUES(2788,1750,0,30)
INSERT INTO LOB_IDS VALUES(2789,1875,0,30)
INSERT INTO LOB_IDS VALUES(2790,1983,0,30)
INSERT INTO LOB_IDS VALUES(2791,2686,0,30)
INSERT INTO LOB_IDS VALUES(2792,4284,1,30)
INSERT INTO LOB_IDS VALUES(2793,2688,0,30)
INSERT INTO LOB_IDS VALUES(2794,2688,0,30)
INSERT INTO LOB_IDS VALUES(2795,2612,1,30)
INSERT INTO LOB_IDS VALUES(2796,4284,2,30)
INSERT INTO LOB_IDS VALUES(2797,6052,1,30)
INSERT INTO LOB_IDS VALUES(2798,5775,1,30)
INSERT INTO LOB_IDS VALUES(2799,6242,2,30)
INSERT INTO LOB_IDS VALUES(2800,4788,0,30)
INSERT INTO LOB_IDS VALUES(2801,4833,0,30)
INSERT INTO LOB_IDS VALUES(2802,4878,0,30)
INSERT INTO LOB_IDS VALUES(2803,4475,0,30)
INSERT INTO LOB_IDS VALUES(2804,951,1,30)
INSERT INTO LOB_IDS VALUES(2805,830,0,30)
INSERT INTO LOB_IDS VALUES(2806,4013,1,30)
INSERT INTO LOB_IDS VALUES(2807,875,0,30)
INSERT INTO LOB_IDS VALUES(2808,904,0,30)
INSERT INTO LOB_IDS VALUES(2809,4610,1,30)
INSERT INTO LOB_IDS VALUES(2810,934,0,30)
INSERT INTO LOB_IDS VALUES(2811,5149,0,30)
INSERT INTO LOB_IDS VALUES(2812,5997,0,30)
INSERT INTO LOB_IDS VALUES(2813,6106,0,30)
INSERT INTO LOB_IDS VALUES(2814,738,0,30)
INSERT INTO LOB_IDS VALUES(2815,1071,0,30)
INSERT INTO LOB_IDS VALUES(2816,519,0,30)
INSERT INTO LOB_IDS VALUES(2817,1067,0,30)
INSERT INTO LOB_IDS VALUES(2818,1089,0,30)
INSERT INTO LOB_IDS VALUES(2819,1145,0,30)
INSERT INTO LOB_IDS VALUES(2820,963,0,30)
INSERT INTO LOB_IDS VALUES(2821,2106,0,30)
INSERT INTO LOB_IDS VALUES(2822,4053,0,30)
INSERT INTO LOB_IDS VALUES(2823,4152,0,30)
INSERT INTO LOB_IDS VALUES(2824,562,0,30)
INSERT INTO LOB_IDS VALUES(2825,567,0,30)
INSERT INTO LOB_IDS VALUES(2826,4152,0,30)
INSERT INTO LOB_IDS VALUES(2827,567,1,30)
INSERT INTO LOB_IDS VALUES(2828,4749,1,30)
INSERT INTO LOB_IDS VALUES(2829,4154,0,30)
INSERT INTO LOB_IDS VALUES(2830,4758,2,30)
INSERT INTO LOB_IDS VALUES(2831,1071,0,30)
INSERT INTO LOB_IDS VALUES(2832,6116,0,30)
INSERT INTO LOB_IDS VALUES(2833,1063,0,30)
INSERT INTO LOB_IDS VALUES(2834,6116,0,30)
INSERT INTO LOB_IDS VALUES(2835,1048,0,30)
INSERT INTO LOB_IDS VALUES(2836,954,0,30)
INSERT INTO LOB_IDS VALUES(2837,951,0,30)
INSERT INTO LOB_IDS VALUES(2838,951,0,30)
INSERT INTO LOB_IDS VALUES(2839,2612,0,30)
INSERT INTO LOB_IDS VALUES(2840,4152,1,30)
INSERT INTO LOB_IDS VALUES(2841,1674,1,30)
INSERT INTO LOB_IDS VALUES(2842,952,0,30)
INSERT INTO LOB_IDS VALUES(2843,955,0,30)
INSERT INTO LOB_IDS VALUES(2844,954,0,30)
INSERT INTO LOB_IDS VALUES(2845,955,0,30)
INSERT INTO LOB_IDS VALUES(2846,6116,0,30)
INSERT INTO LOB_IDS VALUES(2847,4337,1,30)
INSERT INTO LOB_IDS VALUES(2848,4634,2,30)
INSERT INTO LOB_IDS VALUES(2849,1339,0,30)
INSERT INTO LOB_IDS VALUES(2850,1349,0,30)
INSERT INTO LOB_IDS VALUES(2851,1366,0,30)
INSERT INTO LOB_IDS VALUES(2852,1365,1,30)
INSERT INTO LOB_IDS VALUES(2853,988,1,30)
INSERT INTO LOB_IDS VALUES(2854,6114,0,30)
INSERT INTO LOB_IDS VALUES(2855,526,1,30)
INSERT INTO LOB_IDS VALUES(2856,1154,0,30)
INSERT INTO LOB_IDS VALUES(2857,1146,0,30)
INSERT INTO LOB_IDS VALUES(2858,1120,0,30)
INSERT INTO LOB_IDS VALUES(2859,4152,2,30)
INSERT INTO LOB_IDS VALUES(2860,1350,0,30)
INSERT INTO LOB_IDS VALUES(2861,3996,1,30)
INSERT INTO LOB_IDS VALUES(2862,544,0,30)
INSERT INTO LOB_IDS VALUES(2863,539,0,30)
INSERT INTO LOB_IDS VALUES(2864,4895,0,30)
INSERT INTO LOB_IDS VALUES(2865,4929,0,30)
INSERT INTO LOB_IDS VALUES(2866,4995,1,30)
INSERT INTO LOB_IDS VALUES(2867,4475,1,30)
INSERT INTO LOB_IDS VALUES(2868,6114,2,30)
INSERT INTO LOB_IDS VALUES(2869,542,0,30)
INSERT INTO LOB_IDS VALUES(2870,9732,1,30)
INSERT INTO LOB_IDS VALUES(2871,847,1,30)
INSERT INTO LOB_IDS VALUES(2872,9824,1,30)
INSERT INTO LOB_IDS VALUES(2873,9924,1,30)
INSERT INTO LOB_IDS VALUES(2874,9924,1,30)
INSERT INTO LOB_IDS VALUES(2875,10523,1,30)
INSERT INTO LOB_IDS VALUES(2876,10968,1,30)
INSERT INTO LOB_IDS VALUES(2877,10968,1,30)
INSERT INTO LOB_IDS VALUES(2878,10968,1,30)
INSERT INTO LOB_IDS VALUES(2879,11142,1,30)
INSERT INTO LOB_IDS VALUES(2880,11018,1,30)
INSERT INTO LOB_IDS VALUES(2881,10829,1,30)
INSERT INTO LOB_IDS VALUES(2882,10992,1,30)
INSERT INTO LOB_IDS VALUES(2883,10992,2,30)
INSERT INTO LOB_IDS VALUES(2884,4475,2,30)
INSERT INTO LOB_IDS VALUES(2885,5568,0,30)
INSERT INTO LOB_IDS VALUES(2886,5640,0,30)
INSERT INTO LOB_IDS VALUES(2887,5677,0,30)
INSERT INTO LOB_IDS VALUES(2888,5892,0,30)
INSERT INTO LOB_IDS VALUES(2889,4637,0,30)
INSERT INTO LOB_IDS VALUES(2890,5335,0,30)
INSERT INTO LOB_IDS VALUES(2891,5335,0,30)
INSERT INTO LOB_IDS VALUES(2892,5344,0,30)
INSERT INTO LOB_IDS VALUES(2893,5379,0,30)
INSERT INTO LOB_IDS VALUES(2894,1108,0,30)
INSERT INTO LOB_IDS VALUES(2895,5379,0,30)
INSERT INTO LOB_IDS VALUES(2896,533,0,30)
INSERT INTO LOB_IDS VALUES(2897,5420,0,30)
INSERT INTO LOB_IDS VALUES(2898,510,0,30)
INSERT INTO LOB_IDS VALUES(2899,521,1,30)
INSERT INTO LOB_IDS VALUES(2900,827,0,30)
INSERT INTO LOB_IDS VALUES(2901,906,0,30)
INSERT INTO LOB_IDS VALUES(2902,900,0,30)
INSERT INTO LOB_IDS VALUES(2903,900,0,30)
INSERT INTO LOB_IDS VALUES(2904,1076,0,30)
INSERT INTO LOB_IDS VALUES(2905,5863,0,30)
INSERT INTO LOB_IDS VALUES(2906,6306,0,30)
INSERT INTO LOB_IDS VALUES(2907,6792,0,30)
INSERT INTO LOB_IDS VALUES(2908,6792,0,30)
INSERT INTO LOB_IDS VALUES(2909,900,0,30)
INSERT INTO LOB_IDS VALUES(2910,901,0,30)
INSERT INTO LOB_IDS VALUES(2911,1077,1,30)
INSERT INTO LOB_IDS VALUES(2912,7174,0,30)
INSERT INTO LOB_IDS VALUES(2913,7213,0,30)
INSERT INTO LOB_IDS VALUES(2914,7183,0,30)
INSERT INTO LOB_IDS VALUES(2915,4471,0,30)
INSERT INTO LOB_IDS VALUES(2916,4330,0,30)
INSERT INTO LOB_IDS VALUES(2917,1073,0,30)
INSERT INTO LOB_IDS VALUES(2918,1089,0,30)
INSERT INTO LOB_IDS VALUES(2919,1087,0,30)
INSERT INTO LOB_IDS VALUES(2920,4339,0,30)
INSERT INTO LOB_IDS VALUES(2921,1621,0,30)
INSERT INTO LOB_IDS VALUES(2922,2025,0,30)
INSERT INTO LOB_IDS VALUES(2923,2030,0,30)
INSERT INTO LOB_IDS VALUES(2924,2208,0,30)
INSERT INTO LOB_IDS VALUES(2925,3973,0,30)
INSERT INTO LOB_IDS VALUES(2926,3953,0,30)
INSERT INTO LOB_IDS VALUES(2927,5054,0,30)
INSERT INTO LOB_IDS VALUES(2928,4936,0,30)
INSERT INTO LOB_IDS VALUES(2929,3973,0,30)
INSERT INTO LOB_IDS VALUES(2930,4936,0,30)
INSERT INTO LOB_IDS VALUES(2931,4009,0,30)
INSERT INTO LOB_IDS VALUES(2932,4034,0,30)
INSERT INTO LOB_IDS VALUES(2933,4058,0,30)
INSERT INTO LOB_IDS VALUES(2934,4920,0,30)
INSERT INTO LOB_IDS VALUES(2935,1057,0,30)
INSERT INTO LOB_IDS VALUES(2936,1082,0,30)
INSERT INTO LOB_IDS VALUES(2937,4348,0,30)
INSERT INTO LOB_IDS VALUES(2938,4494,0,30)
INSERT INTO LOB_IDS VALUES(2939,737,0,30)
INSERT INTO LOB_IDS VALUES(2940,736,0,30)
INSERT INTO LOB_IDS VALUES(2941,736,1,30)
INSERT INTO LOB_IDS VALUES(2942,1113,0,30)
INSERT INTO LOB_IDS VALUES(2943,1114,0,30)
INSERT INTO LOB_IDS VALUES(2944,950,0,30)
INSERT INTO LOB_IDS VALUES(2945,1148,0,30)
INSERT INTO LOB_IDS VALUES(2946,1192,0,30)
INSERT INTO LOB_IDS VALUES(2947,1182,1,30)
INSERT INTO LOB_IDS VALUES(2948,595,1,30)
INSERT INTO LOB_IDS VALUES(2949,3005,2,30)
INSERT INTO LOB_IDS VALUES(2950,7183,0,30)
INSERT INTO LOB_IDS VALUES(2951,520,1,30)
INSERT INTO LOB_IDS VALUES(2952,944,0,30)
INSERT INTO LOB_IDS VALUES(2953,963,1,30)
INSERT INTO LOB_IDS VALUES(2954,789,0,30)
INSERT INTO LOB_IDS VALUES(2955,926,0,30)
INSERT INTO LOB_IDS VALUES(2956,932,1,30)
INSERT INTO LOB_IDS VALUES(2957,7947,1,30)
INSERT INTO LOB_IDS VALUES(2958,8077,1,30)
INSERT INTO LOB_IDS VALUES(2959,3968,1,30)
INSERT INTO LOB_IDS VALUES(2960,3967,2,30)
INSERT INTO LOB_IDS VALUES(2961,554,0,30)
INSERT INTO LOB_IDS VALUES(2962,576,1,30)
INSERT INTO LOB_IDS VALUES(2963,8077,1,30)
INSERT INTO LOB_IDS VALUES(2964,8077,1,30)
INSERT INTO LOB_IDS VALUES(2965,8077,1,30)
INSERT INTO LOB_IDS VALUES(2966,8077,1,30)
INSERT INTO LOB_IDS VALUES(2967,8075,1,30)
INSERT INTO LOB_IDS VALUES(2968,8075,2,30)
INSERT INTO LOB_IDS VALUES(2969,4935,0,30)
INSERT INTO LOB_IDS VALUES(2970,1306,0,30)
INSERT INTO LOB_IDS VALUES(2971,4935,0,30)
INSERT INTO LOB_IDS VALUES(2972,1333,0,30)
INSERT INTO LOB_IDS VALUES(2973,2058,0,30)
INSERT INTO LOB_IDS VALUES(2974,3712,0,30)
INSERT INTO LOB_IDS VALUES(2975,4935,0,30)
INSERT INTO LOB_IDS VALUES(2976,4491,1,30)
INSERT INTO LOB_IDS VALUES(2977,4490,0,30)
INSERT INTO LOB_IDS VALUES(2978,4344,0,30)
INSERT INTO LOB_IDS VALUES(2979,1333,0,30)
INSERT INTO LOB_IDS VALUES(2980,1357,0,30)
INSERT INTO LOB_IDS VALUES(2981,8074,1,30)
INSERT INTO LOB_IDS VALUES(2982,5997,1,30)
INSERT INTO LOB_IDS VALUES(2983,5997,1,30)
INSERT INTO LOB_IDS VALUES(2984,5767,1,30)
INSERT INTO LOB_IDS VALUES(2985,5765,1,30)
INSERT INTO LOB_IDS VALUES(2986,5767,1,30)
INSERT INTO LOB_IDS VALUES(2987,5769,1,30)
INSERT INTO LOB_IDS VALUES(2988,516,0,30)
INSERT INTO LOB_IDS VALUES(2989,554,1,30)
INSERT INTO LOB_IDS VALUES(2990,536,0,30)
INSERT INTO LOB_IDS VALUES(2991,1079,1,30)
INSERT INTO LOB_IDS VALUES(2992,1065,0,30)
INSERT INTO LOB_IDS VALUES(2993,992,1,30)
INSERT INTO LOB_IDS VALUES(2994,4922,0,30)
INSERT INTO LOB_IDS VALUES(2995,4331,0,30)
INSERT INTO LOB_IDS VALUES(2996,5769,2,30)
INSERT INTO LOB_IDS VALUES(2997,4478,2,30)
INSERT INTO LOB_IDS VALUES(2998,4923,2,30)
INSERT INTO LOB_IDS VALUES(2999,1469,0,30)
INSERT INTO LOB_IDS VALUES(3000,1503,0,30)
INSERT INTO LOB_IDS VALUES(3001,3710,0,30)
INSERT INTO LOB_IDS VALUES(3002,3744,0,30)
INSERT INTO LOB_IDS VALUES(3003,1553,0,30)
INSERT INTO LOB_IDS VALUES(3004,1550,0,30)
INSERT INTO LOB_IDS VALUES(3005,1551,0,30)
INSERT INTO LOB_IDS VALUES(3006,1591,0,30)
INSERT INTO LOB_IDS VALUES(3007,1597,0,30)
INSERT INTO LOB_IDS VALUES(3008,3759,0,30)
INSERT INTO LOB_IDS VALUES(3009,1679,0,30)
INSERT INTO LOB_IDS VALUES(3010,1839,0,30)
INSERT INTO LOB_IDS VALUES(3011,4000,0,30)
INSERT INTO LOB_IDS VALUES(3012,4001,0,30)
INSERT INTO LOB_IDS VALUES(3013,4033,0,30)
INSERT INTO LOB_IDS VALUES(3014,1871,0,30)
INSERT INTO LOB_IDS VALUES(3015,4054,0,30)
INSERT INTO LOB_IDS VALUES(3016,1892,0,30)
INSERT INTO LOB_IDS VALUES(3017,1896,0,30)
INSERT INTO LOB_IDS VALUES(3018,4058,0,30)
INSERT INTO LOB_IDS VALUES(3019,4519,0,30)
INSERT INTO LOB_IDS VALUES(3020,2373,0,30)
INSERT INTO LOB_IDS VALUES(3021,4646,0,30)
INSERT INTO LOB_IDS VALUES(3022,2500,0,30)
INSERT INTO LOB_IDS VALUES(3023,2500,0,30)
INSERT INTO LOB_IDS VALUES(3024,4646,0,30)
INSERT INTO LOB_IDS VALUES(3025,4700,0,30)
INSERT INTO LOB_IDS VALUES(3026,2554,0,30)
INSERT INTO LOB_IDS VALUES(3027,2558,0,30)
INSERT INTO LOB_IDS VALUES(3028,2618,0,30)
INSERT INTO LOB_IDS VALUES(3029,2608,0,30)
INSERT INTO LOB_IDS VALUES(3030,4750,0,30)
INSERT INTO LOB_IDS VALUES(3031,4752,0,30)
INSERT INTO LOB_IDS VALUES(3032,2610,0,30)
INSERT INTO LOB_IDS VALUES(3033,2899,0,30)
INSERT INTO LOB_IDS VALUES(3034,2898,0,30)
INSERT INTO LOB_IDS VALUES(3035,5044,0,30)
INSERT INTO LOB_IDS VALUES(3036,5201,0,30)
INSERT INTO LOB_IDS VALUES(3037,5431,0,30)
INSERT INTO LOB_IDS VALUES(3038,3055,0,30)
INSERT INTO LOB_IDS VALUES(3039,5201,0,30)
INSERT INTO LOB_IDS VALUES(3040,4932,1,30)
INSERT INTO LOB_IDS VALUES(3041,4932,1,30)
INSERT INTO LOB_IDS VALUES(3042,4948,2,30)
INSERT INTO LOB_IDS VALUES(3043,1252,0,30)
INSERT INTO LOB_IDS VALUES(3044,1320,0,30)
INSERT INTO LOB_IDS VALUES(3045,1362,0,30)
INSERT INTO LOB_IDS VALUES(3046,1403,0,30)
INSERT INTO LOB_IDS VALUES(3047,1448,0,30)
INSERT INTO LOB_IDS VALUES(3048,1878,0,30)
INSERT INTO LOB_IDS VALUES(3049,2823,0,30)
INSERT INTO LOB_IDS VALUES(3050,3010,0,30)
INSERT INTO LOB_IDS VALUES(3051,3571,0,30)
INSERT INTO LOB_IDS VALUES(3052,3567,0,30)
INSERT INTO LOB_IDS VALUES(3053,4057,0,30)
INSERT INTO LOB_IDS VALUES(3054,4066,0,30)
INSERT INTO LOB_IDS VALUES(3055,4712,0,30)
INSERT INTO LOB_IDS VALUES(3056,8084,0,30)
INSERT INTO LOB_IDS VALUES(3057,8084,0,30)
INSERT INTO LOB_IDS VALUES(3058,516,1,30)
INSERT INTO LOB_IDS VALUES(3059,1077,0,30)
INSERT INTO LOB_IDS VALUES(3060,963,0,30)
INSERT INTO LOB_IDS VALUES(3061,1075,0,30)
INSERT INTO LOB_IDS VALUES(3062,1104,0,30)
INSERT INTO LOB_IDS VALUES(3063,1092,0,30)
INSERT INTO LOB_IDS VALUES(3064,991,0,30)
INSERT INTO LOB_IDS VALUES(3065,927,0,30)
INSERT INTO LOB_IDS VALUES(3066,933,0,30)
INSERT INTO LOB_IDS VALUES(3067,981,0,30)
INSERT INTO LOB_IDS VALUES(3068,990,0,30)
INSERT INTO LOB_IDS VALUES(3069,981,0,30)
INSERT INTO LOB_IDS VALUES(3070,958,0,30)
INSERT INTO LOB_IDS VALUES(3071,8377,0,30)
INSERT INTO LOB_IDS VALUES(3072,8451,0,30)
INSERT INTO LOB_IDS VALUES(3073,8451,0,30)
INSERT INTO LOB_IDS VALUES(3074,8451,0,30)
INSERT INTO LOB_IDS VALUES(3075,8454,0,30)
INSERT INTO LOB_IDS VALUES(3076,958,0,30)
INSERT INTO LOB_IDS VALUES(3077,958,0,30)
INSERT INTO LOB_IDS VALUES(3078,954,0,30)
INSERT INTO LOB_IDS VALUES(3079,958,0,30)
INSERT INTO LOB_IDS VALUES(3080,920,0,30)
INSERT INTO LOB_IDS VALUES(3081,1018,0,30)
INSERT INTO LOB_IDS VALUES(3082,920,0,30)
INSERT INTO LOB_IDS VALUES(3083,956,0,30)
INSERT INTO LOB_IDS VALUES(3084,934,0,30)
INSERT INTO LOB_IDS VALUES(3085,954,0,30)
INSERT INTO LOB_IDS VALUES(3086,934,0,30)
INSERT INTO LOB_IDS VALUES(3087,964,0,30)
INSERT INTO LOB_IDS VALUES(3088,965,0,30)
INSERT INTO LOB_IDS VALUES(3089,964,0,30)
INSERT INTO LOB_IDS VALUES(3090,8454,0,30)
INSERT INTO LOB_IDS VALUES(3091,8461,0,30)
INSERT INTO LOB_IDS VALUES(3092,8461,0,30)
INSERT INTO LOB_IDS VALUES(3093,8348,0,30)
INSERT INTO LOB_IDS VALUES(3094,920,0,30)
INSERT INTO LOB_IDS VALUES(3095,1075,1,30)
INSERT INTO LOB_IDS VALUES(3096,4712,0,30)
INSERT INTO LOB_IDS VALUES(3097,4710,0,30)
INSERT INTO LOB_IDS VALUES(3098,4710,0,30)
INSERT INTO LOB_IDS VALUES(3099,4735,0,30)
INSERT INTO LOB_IDS VALUES(3100,4487,0,30)
INSERT INTO LOB_IDS VALUES(3101,740,0,30)
INSERT INTO LOB_IDS VALUES(3102,1405,0,30)
INSERT INTO LOB_IDS VALUES(3103,1478,0,30)
INSERT INTO LOB_IDS VALUES(3104,4487,0,30)
INSERT INTO LOB_IDS VALUES(3105,1481,0,30)
INSERT INTO LOB_IDS VALUES(3106,1502,0,30)
INSERT INTO LOB_IDS VALUES(3107,1511,0,30)
INSERT INTO LOB_IDS VALUES(3108,1511,0,30)
INSERT INTO LOB_IDS VALUES(3109,3004,1,30)
INSERT INTO LOB_IDS VALUES(3110,3004,1,30)
INSERT INTO LOB_IDS VALUES(3111,3004,1,30)
INSERT INTO LOB_IDS VALUES(3112,3004,1,30)
INSERT INTO LOB_IDS VALUES(3113,3004,1,30)
INSERT INTO LOB_IDS VALUES(3114,757,0,30)
INSERT INTO LOB_IDS VALUES(3115,740,1,30)
INSERT INTO LOB_IDS VALUES(3116,605,1,30)
INSERT INTO LOB_IDS VALUES(3117,3004,2,30)
INSERT INTO LOB_IDS VALUES(3118,586,1,30)
INSERT INTO LOB_IDS VALUES(3119,3966,1,30)
INSERT INTO LOB_IDS VALUES(3120,1539,0,30)
INSERT INTO LOB_IDS VALUES(3121,1557,0,30)
INSERT INTO LOB_IDS VALUES(3122,1563,0,30)
INSERT INTO LOB_IDS VALUES(3123,1596,0,30)
INSERT INTO LOB_IDS VALUES(3124,1670,0,30)
INSERT INTO LOB_IDS VALUES(3125,1704,0,30)
INSERT INTO LOB_IDS VALUES(3126,1710,0,30)
INSERT INTO LOB_IDS VALUES(3127,1704,0,30)
INSERT INTO LOB_IDS VALUES(3128,3966,2,30)
INSERT INTO LOB_IDS VALUES(3129,8348,0,30)
INSERT INTO LOB_IDS VALUES(3130,8348,0,30)
INSERT INTO LOB_IDS VALUES(3131,770,0,30)
INSERT INTO LOB_IDS VALUES(3132,785,0,30)
INSERT INTO LOB_IDS VALUES(3133,784,1,30)
INSERT INTO LOB_IDS VALUES(3134,8348,0,30)
INSERT INTO LOB_IDS VALUES(3135,920,0,30)
INSERT INTO LOB_IDS VALUES(3136,954,0,30)
INSERT INTO LOB_IDS VALUES(3137,982,1,30)
INSERT INTO LOB_IDS VALUES(3138,1350,0,30)
INSERT INTO LOB_IDS VALUES(3139,1352,0,30)
INSERT INTO LOB_IDS VALUES(3140,1352,1,30)
INSERT INTO LOB_IDS VALUES(3141,1648,0,30)
INSERT INTO LOB_IDS VALUES(3142,8348,1,30)
INSERT INTO LOB_IDS VALUES(3143,8355,0,30)
INSERT INTO LOB_IDS VALUES(3144,5342,0,30)
INSERT INTO LOB_IDS VALUES(3145,5676,0,30)
INSERT INTO LOB_IDS VALUES(3146,6225,0,30)
INSERT INTO LOB_IDS VALUES(3147,6342,0,30)
INSERT INTO LOB_IDS VALUES(3148,6385,0,30)
INSERT INTO LOB_IDS VALUES(3149,8348,2,30)
INSERT INTO LOB_IDS VALUES(3150,6422,0,30)
INSERT INTO LOB_IDS VALUES(3151,6426,0,30)
INSERT INTO LOB_IDS VALUES(3152,4735,0,30)
INSERT INTO LOB_IDS VALUES(3153,1352,0,30)
INSERT INTO LOB_IDS VALUES(3154,6426,0,30)
INSERT INTO LOB_IDS VALUES(3155,6426,0,30)
INSERT INTO LOB_IDS VALUES(3156,993,0,30)
INSERT INTO LOB_IDS VALUES(3157,6524,0,30)
INSERT INTO LOB_IDS VALUES(3158,6532,0,30)
INSERT INTO LOB_IDS VALUES(3159,6565,0,30)
INSERT INTO LOB_IDS VALUES(3160,6565,0,30)
INSERT INTO LOB_IDS VALUES(3161,6522,0,30)
INSERT INTO LOB_IDS VALUES(3162,536,1,30)
INSERT INTO LOB_IDS VALUES(3163,6522,0,30)
INSERT INTO LOB_IDS VALUES(3164,942,1,30)
INSERT INTO LOB_IDS VALUES(3165,652,0,30)
INSERT INTO LOB_IDS VALUES(3166,656,0,30)
INSERT INTO LOB_IDS VALUES(3167,6522,0,30)
INSERT INTO LOB_IDS VALUES(3168,994,0,30)
INSERT INTO LOB_IDS VALUES(3169,1039,1,30)
INSERT INTO LOB_IDS VALUES(3170,6579,0,30)
INSERT INTO LOB_IDS VALUES(3171,6616,0,30)
INSERT INTO LOB_IDS VALUES(3172,6616,0,30)
INSERT INTO LOB_IDS VALUES(3173,657,0,30)
INSERT INTO LOB_IDS VALUES(3174,737,0,30)
INSERT INTO LOB_IDS VALUES(3175,779,0,30)
INSERT INTO LOB_IDS VALUES(3176,811,0,30)
INSERT INTO LOB_IDS VALUES(3177,665,0,30)
INSERT INTO LOB_IDS VALUES(3178,6299,1,30)
INSERT INTO LOB_IDS VALUES(3179,655,0,30)
INSERT INTO LOB_IDS VALUES(3180,652,0,30)
INSERT INTO LOB_IDS VALUES(3181,4757,0,30)
INSERT INTO LOB_IDS VALUES(3182,4763,0,30)
INSERT INTO LOB_IDS VALUES(3183,4585,1,30)
INSERT INTO LOB_IDS VALUES(3184,905,0,30)
INSERT INTO LOB_IDS VALUES(3185,1678,1,30)
INSERT INTO LOB_IDS VALUES(3186,4634,2,30)
INSERT INTO LOB_IDS VALUES(3187,932,0,30)
INSERT INTO LOB_IDS VALUES(3188,1216,0,30)
INSERT INTO LOB_IDS VALUES(3189,1228,0,30)
INSERT INTO LOB_IDS VALUES(3190,1283,0,30)
INSERT INTO LOB_IDS VALUES(3191,1281,0,30)
INSERT INTO LOB_IDS VALUES(3192,1286,0,30)
INSERT INTO LOB_IDS VALUES(3193,1285,0,30)
INSERT INTO LOB_IDS VALUES(3194,1286,0,30)
INSERT INTO LOB_IDS VALUES(3195,1283,1,30)
INSERT INTO LOB_IDS VALUES(3196,6413,1,30)
INSERT INTO LOB_IDS VALUES(3197,875,0,30)
INSERT INTO LOB_IDS VALUES(3198,873,1,30)
INSERT INTO LOB_IDS VALUES(3199,681,0,30)
INSERT INTO LOB_IDS VALUES(3200,6413,2,30)
INSERT INTO LOB_IDS VALUES(3201,682,1,30)
INSERT INTO LOB_IDS VALUES(3202,3052,1,30)
INSERT INTO LOB_IDS VALUES(3203,4331,2,30)
INSERT INTO LOB_IDS VALUES(3204,2423,1,30)
INSERT INTO LOB_IDS VALUES(3205,3005,2,30)
INSERT INTO LOB_IDS VALUES(3206,5273,0,30)
INSERT INTO LOB_IDS VALUES(3207,4922,2,30)
INSERT INTO LOB_IDS VALUES(3208,4796,0,30)
INSERT INTO LOB_IDS VALUES(3209,1734,1,30)
INSERT INTO LOB_IDS VALUES(3210,2614,1,30)
INSERT INTO LOB_IDS VALUES(3211,4056,1,30)
INSERT INTO LOB_IDS VALUES(3212,4102,1,30)
INSERT INTO LOB_IDS VALUES(3213,498,0,30)
INSERT INTO LOB_IDS VALUES(3214,515,0,30)
INSERT INTO LOB_IDS VALUES(3215,585,0,30)
INSERT INTO LOB_IDS VALUES(3216,4150,1,30)
INSERT INTO LOB_IDS VALUES(3217,750,0,30)
INSERT INTO LOB_IDS VALUES(3218,758,1,30)
INSERT INTO LOB_IDS VALUES(3219,4150,1,30)
INSERT INTO LOB_IDS VALUES(3220,4148,1,30)
INSERT INTO LOB_IDS VALUES(3221,621,0,30)
INSERT INTO LOB_IDS VALUES(3222,640,1,30)
INSERT INTO LOB_IDS VALUES(3223,4298,1,30)
INSERT INTO LOB_IDS VALUES(3224,642,0,30)
INSERT INTO LOB_IDS VALUES(3225,670,1,30)
INSERT INTO LOB_IDS VALUES(3226,579,0,30)
INSERT INTO LOB_IDS VALUES(3227,4298,2,30)
INSERT INTO LOB_IDS VALUES(3228,957,1,30)
INSERT INTO LOB_IDS VALUES(3229,1981,1,30)
INSERT INTO LOB_IDS VALUES(3230,2020,1,30)
INSERT INTO LOB_IDS VALUES(3231,2020,1,30)
INSERT INTO LOB_IDS VALUES(3232,2022,1,30)
INSERT INTO LOB_IDS VALUES(3233,4902,1,30)
INSERT INTO LOB_IDS VALUES(3234,5080,1,30)
INSERT INTO LOB_IDS VALUES(3235,5113,1,30)
INSERT INTO LOB_IDS VALUES(3236,5247,1,30)
INSERT INTO LOB_IDS VALUES(3237,5247,2,30)
INSERT INTO LOB_IDS VALUES(3238,608,1,30)
INSERT INTO LOB_IDS VALUES(3239,935,1,30)
INSERT INTO LOB_IDS VALUES(3240,3832,1,30)
INSERT INTO LOB_IDS VALUES(3241,3974,1,30)
INSERT INTO LOB_IDS VALUES(3242,601,0,30)
INSERT INTO LOB_IDS VALUES(3243,4880,0,30)
INSERT INTO LOB_IDS VALUES(3244,1654,1,30)
INSERT INTO LOB_IDS VALUES(3245,4101,1,30)
INSERT INTO LOB_IDS VALUES(3246,5347,0,30)
INSERT INTO LOB_IDS VALUES(3247,1278,0,30)
INSERT INTO LOB_IDS VALUES(3248,1352,0,30)
INSERT INTO LOB_IDS VALUES(3249,1280,0,30)
INSERT INTO LOB_IDS VALUES(3250,1048,1,30)
INSERT INTO LOB_IDS VALUES(3251,1350,1,30)
INSERT INTO LOB_IDS VALUES(3252,8292,1,30)
INSERT INTO LOB_IDS VALUES(3253,8292,2,30)
INSERT INTO LOB_IDS VALUES(3254,5049,0,30)
INSERT INTO LOB_IDS VALUES(3255,5265,0,30)
INSERT INTO LOB_IDS VALUES(3256,5259,0,30)
INSERT INTO LOB_IDS VALUES(3257,5507,0,30)
INSERT INTO LOB_IDS VALUES(3258,5536,0,30)
INSERT INTO LOB_IDS VALUES(3259,5565,1,30)
INSERT INTO LOB_IDS VALUES(3260,5469,0,30)
INSERT INTO LOB_IDS VALUES(3261,5347,0,30)
INSERT INTO LOB_IDS VALUES(3262,5108,0,30)
INSERT INTO LOB_IDS VALUES(3263,5222,0,30)
INSERT INTO LOB_IDS VALUES(3264,5389,0,30)
INSERT INTO LOB_IDS VALUES(3265,5390,0,30)
INSERT INTO LOB_IDS VALUES(3266,5559,0,30)
INSERT INTO LOB_IDS VALUES(3267,5627,0,30)
INSERT INTO LOB_IDS VALUES(3268,5838,0,30)
INSERT INTO LOB_IDS VALUES(3269,5986,0,30)
INSERT INTO LOB_IDS VALUES(3270,6017,0,30)
INSERT INTO LOB_IDS VALUES(3271,6222,0,30)
INSERT INTO LOB_IDS VALUES(3272,6253,0,30)
INSERT INTO LOB_IDS VALUES(3273,6254,0,30)
INSERT INTO LOB_IDS VALUES(3274,6565,0,30)
INSERT INTO LOB_IDS VALUES(3275,6565,0,30)
INSERT INTO LOB_IDS VALUES(3276,6652,0,30)
INSERT INTO LOB_IDS VALUES(3277,6733,0,30)
INSERT INTO LOB_IDS VALUES(3278,6855,0,30)
INSERT INTO LOB_IDS VALUES(3279,6855,0,30)
INSERT INTO LOB_IDS VALUES(3280,6944,0,30)
INSERT INTO LOB_IDS VALUES(3281,6911,0,30)
INSERT INTO LOB_IDS VALUES(3282,6915,1,30)
INSERT INTO LOB_IDS VALUES(3283,637,0,30)
INSERT INTO LOB_IDS VALUES(3284,4938,1,30)
INSERT INTO LOB_IDS VALUES(3285,4938,1,30)
INSERT INTO LOB_IDS VALUES(3286,4938,2,30)
INSERT INTO LOB_IDS VALUES(3287,1037,0,30)
INSERT INTO LOB_IDS VALUES(3288,1042,0,30)
INSERT INTO LOB_IDS VALUES(3289,1109,0,30)
INSERT INTO LOB_IDS VALUES(3290,2786,0,30)
INSERT INTO LOB_IDS VALUES(3291,2788,0,30)
INSERT INTO LOB_IDS VALUES(3292,2828,1,30)
SET SCHEMA PUBLIC
INSERT INTO INSTANCE VALUES('FlexibleTest','SYS_HDR','false','false','false','false',6003,4096,65,10,'UTF-8','','$JAVA_HOME\lib;lib\ojdbc14.jar;biz','$JAVA_HOME','$JAVA_HOME\bin','EUC-KR','EUC-KR','config\FlexibleTest_log4j.xml','true ','','RSV_LENGTH','RSV_SERVICE_ID')
INSERT INTO INSTANCE VALUES('PMS','PMS_SYS_HDR','false','false','false','false',6004,4096,0,10,'UTF-8','','$JAVA_HOME\lib;lib\mysql-connector-java-5.1.22-bin.jar;pms','$JAVA_HOME','$JAVA_HOME\bin','UTF-8','UTF-8','config/PMS_log4j.xml','true ','','RSV_LENGTH','RSV_SERVICE_ID')
INSERT INTO INSTANCE VALUES('ReadByLengthField','SYS_HDR','false','true ','false','false',6001,4096,0,20,'UTF-8','','$JAVA_HOME\lib;lib\mysql-connector-java-5.1.22-bin.jar;biz','$JAVA_HOME','$JAVA_HOME\bin','EUC-KR','EUC-KR','config\ReadByLengthField_log4j.xml','true ','-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=8086 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Djava.rmi.server.hostname=localhost','LENGTH','SERVICE_ID')
INSERT INTO USER VALUES('Admin','Admin','8F10A6DF7E380E91956D61A64843CA','Admin','','true ')
INSERT INTO USER VALUES('FlexibleTest','FlexibleTest','93E3B9E4B23388C1B6C57B61D9106955','Instance','','true ')
INSERT INTO USER VALUES('PMS','PMS','9E1ECE436116587D94D355D866EDAB','Instance','','true ')
INSERT INTO USER VALUES('ReadByLengthField','ReadByLengthField','D4F7F2A1528C2B89ECD775921D8114','Instance','','true ')
INSERT INTO USER VALUES('dou','','4919DF6583ACD48A974D39E996EE1AC','Operator','','true ')
INSERT INTO USER VALUES('google','Google','228444B6101FCAAC344EA713A3C6428E','Developer','','true ')
INSERT INTO USER VALUES('kykim','\uae40\uae30\uc601','683F7D7C269FA58699CC89F7DCD31EA','Developer','010-5407-4417','true ')
INSERT INTO TELEGRAM VALUES('FlexibleTest','SYS_HDR','System Header','','N','')
INSERT INTO TELEGRAM VALUES('NIST','NISM_SYS_HDR','NPMS System Header','','A','NPMS System Header')
INSERT INTO TELEGRAM VALUES('PMS','PMS_SYS_HDR','PMS System Header','','A','PMS System Header')
INSERT INTO TELEGRAM VALUES('ReadByLengthField','BIZ_HEADER','Business Header','SYS_HDR','N','')
INSERT INTO TELEGRAM VALUES('ReadByLengthField','BasicNetTest','Basic Net Test','BIZ_HEADER','N','')
INSERT INTO TELEGRAM VALUES('ReadByLengthField','FILE_WRITE_TEST','File Write Test','SYS_HDR','A','')
INSERT INTO TELEGRAM VALUES('ReadByLengthField','LoopFieldTest','Loop Field Test','BIZ_HEADER','N','')
INSERT INTO TELEGRAM VALUES('ReadByLengthField','MEMBER_LOGIN','Login Performance Test','SYS_HDR','A','\ub85c\uadf8\uc778 \uc131\ub2a5 \ud14c\uc2a4\ud2b8')
INSERT INTO TELEGRAM VALUES('ReadByLengthField','MappingTest','Mapping Test','BIZ_HEADER','N','')
INSERT INTO TELEGRAM VALUES('ReadByLengthField','SYS_HDR','System Header','','N','')
INSERT INTO TELEGRAM_FIELDS VALUES('FlexibleTest','SYS_HDR','RSV_LENGTH','Length',0,4,'true ',' ','L','N','')
INSERT INTO TELEGRAM_FIELDS VALUES('FlexibleTest','SYS_HDR','RSV_REP_YN','',3,4,'true ',' ','L','C','\uc751\ub2f5\uc694\uad6c=0, \uc751\ub2f5 \ubd88\ud544\uc694=1')
INSERT INTO TELEGRAM_FIELDS VALUES('FlexibleTest','SYS_HDR','RSV_RETURN','Return Value',2,4,'true ',' ','L','N','\uc131\uacf5=0, \uc2e4\ud328=1')
INSERT INTO TELEGRAM_FIELDS VALUES('FlexibleTest','SYS_HDR','RSV_SERVICE_ID','Service ID',1,20,'true ',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS VALUES('PMS','PMS_SYS_HDR','RSV_LENGTH','Length',0,4,'true ',' ','L','N','')
INSERT INTO TELEGRAM_FIELDS VALUES('PMS','PMS_SYS_HDR','RSV_REP_YN','Reply YN',2,4,'true ',' ','L','C','\uc751\ub2f5\uc694\uad6c=0, \uc751\ub2f5 \ubd88\ud544\uc694=1')
INSERT INTO TELEGRAM_FIELDS VALUES('PMS','PMS_SYS_HDR','RSV_RETURN','Return Value',3,4,'true ',' ','L','N','\uc131\uacf5=0, \uc2e4\ud328=1')
INSERT INTO TELEGRAM_FIELDS VALUES('PMS','PMS_SYS_HDR','RSV_SERVICE_ID','Service ID',1,20,'true ',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS VALUES('ReadByLengthField','BIZ_HEADER','SEQ','Sequence',0,4,'true ','0','R','N','')
INSERT INTO TELEGRAM_FIELDS VALUES('ReadByLengthField','BasicNetTest','DATA','DATA',0,4,'true ',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS VALUES('ReadByLengthField','FILE_WRITE_TEST','AGE','',1,3,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS VALUES('ReadByLengthField','FILE_WRITE_TEST','GENDER','',2,1,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS VALUES('ReadByLengthField','FILE_WRITE_TEST','NAME','',0,10,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS VALUES('ReadByLengthField','LoopFieldTest','FIELD1','Field 1',0,5,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS VALUES('ReadByLengthField','LoopFieldTest','FIELD2','Field 2',1,5,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS VALUES('ReadByLengthField','LoopFieldTest','LOOP_FIELD1','Loop Field 1',3,5,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS VALUES('ReadByLengthField','LoopFieldTest','LOOP_FIELD2','Loop Field 2',4,5,'false','0','L','N','')
INSERT INTO TELEGRAM_FIELDS VALUES('ReadByLengthField','LoopFieldTest','_endLOOP','',5,0,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS VALUES('ReadByLengthField','LoopFieldTest','_startLOOP','',2,0,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS VALUES('ReadByLengthField','MEMBER_LOGIN','ACCESS_YN','',3,1,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS VALUES('ReadByLengthField','MEMBER_LOGIN','ID','ID',0,10,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS VALUES('ReadByLengthField','MEMBER_LOGIN','MEMBER_TYPE','\uba64\ubc84 \ud0c0\uc785',2,10,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS VALUES('ReadByLengthField','MEMBER_LOGIN','PWD','\ud328\uc2a4\uc6cc\ub4dc',1,10,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS VALUES('ReadByLengthField','MappingTest','FIELD1','Mapping Field 1',0,5,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS VALUES('ReadByLengthField','MappingTest','FIELD2','Mapping Field 2',1,10,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS VALUES('ReadByLengthField','SYS_HDR','LENGTH','Length',0,4,'true ','0','R','N','')
INSERT INTO TELEGRAM_FIELDS VALUES('ReadByLengthField','SYS_HDR','SERVICE_ID','Service ID',1,15,'true ',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS VALUES('ReadByLengthField','SYS_HDR','SPACE','Space Reserved',2,21,'false',' ','L','C','')
INSERT INTO TELEGRAM_H VALUES('FlexibleTest','SYS_HDR','2013-04-05 11:23:30.328000','System Header','','N','')
INSERT INTO TELEGRAM_H VALUES('NIST','NISM_SYS_HDR','2013-07-22 14:52:59.486000','NPMS System Header','','A','NPMS System Header')
INSERT INTO TELEGRAM_H VALUES('NIST','a','2013-03-18 10:38:28.468000','a','','A','aaa')
INSERT INTO TELEGRAM_H VALUES('NIST','a','2013-03-18 10:39:13.453000','a','','A','aaa')
INSERT INTO TELEGRAM_H VALUES('ReadByLengthField','BIZ_HEADER','2013-03-15 15:54:20.875000','Business Header','SYS_HDR','N','')
INSERT INTO TELEGRAM_H VALUES('ReadByLengthField','BasicNetTest','2013-03-15 15:54:20.875000','Basic Net Test','BIZ_HEADER','N','')
INSERT INTO TELEGRAM_H VALUES('ReadByLengthField','FILE_WRITE_TEST','2013-04-22 15:13:24.578000','File Write Test','SYS_HDR','A','')
INSERT INTO TELEGRAM_H VALUES('ReadByLengthField','LoopFieldTest','2013-03-15 15:54:20.875000','Loop Field Test','BIZ_HEADER','N','')
INSERT INTO TELEGRAM_H VALUES('ReadByLengthField','MEMBER_LOGIN','2013-07-05 11:39:06.235000','Login Performance Test','SYS_HDR','A','\ub85c\uadf8\uc778 \uc131\ub2a5 \ud14c\uc2a4\ud2b8')
INSERT INTO TELEGRAM_H VALUES('ReadByLengthField','MEMBER_LOGIN','2013-07-05 12:07:15.224000','Login Performance Test','SYS_HDR','A','\ub85c\uadf8\uc778 \uc131\ub2a5 \ud14c\uc2a4\ud2b8')
INSERT INTO TELEGRAM_H VALUES('ReadByLengthField','MappingTest','2013-03-15 15:54:20.859000','Mapping Test','BIZ_HEADER','N','')
INSERT INTO TELEGRAM_H VALUES('ReadByLengthField','SYS_HDR','2013-04-05 11:22:05.843000','System Header','','N','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('FlexibleTest','SYS_HDR','RSV_LENGTH','2013-04-05 11:23:30.328000','Length',0,4,'true ',' ','L','N','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('FlexibleTest','SYS_HDR','RSV_REP_YN','2013-04-05 11:23:30.328000','',3,4,'true ',' ','L','C','\uc751\ub2f5\uc694\uad6c=0, \uc751\ub2f5 \ubd88\ud544\uc694=1')
INSERT INTO TELEGRAM_FIELDS_H VALUES('FlexibleTest','SYS_HDR','RSV_RETURN','2013-04-05 11:23:30.328000','Return Value',2,4,'true ',' ','L','N','\uc131\uacf5=0, \uc2e4\ud328=1')
INSERT INTO TELEGRAM_FIELDS_H VALUES('FlexibleTest','SYS_HDR','RSV_SERVICE_ID','2013-04-05 11:23:30.328000','Service ID',1,20,'true ',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('NIST','NISM_SYS_HDR','RSV_LENGTH','2013-07-22 14:52:59.486000','Length',0,4,'true ',' ','L','N','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('NIST','NISM_SYS_HDR','RSV_REP_YN','2013-07-22 14:52:59.486000','Reply YN',2,4,'true ',' ','L','C','\uc751\ub2f5\uc694\uad6c=0, \uc751\ub2f5 \ubd88\ud544\uc694=1')
INSERT INTO TELEGRAM_FIELDS_H VALUES('NIST','NISM_SYS_HDR','RSV_RETURN','2013-07-22 14:52:59.486000','Return Value',3,4,'true ',' ','L','N','\uc131\uacf5=0, \uc2e4\ud328=1')
INSERT INTO TELEGRAM_FIELDS_H VALUES('NIST','NISM_SYS_HDR','RSV_SERVICE_ID','2013-07-22 14:52:59.486000','Service ID',1,20,'true ',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('NIST','a','aaa','2013-03-18 10:38:28.468000','aaa',0,222,'true ',' ','R','C','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('NIST','a','aaa','2013-03-18 10:39:13.453000','aaa',0,222,'true ',' ','R','C','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('ReadByLengthField','BIZ_HEADER','SEQ','2013-03-15 15:54:20.875000','Sequence',0,4,'true ','0','R','N','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('ReadByLengthField','BasicNetTest','DATA','2013-03-15 15:54:20.875000','DATA',0,4,'true ',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('ReadByLengthField','FILE_WRITE_TEST','AGE','2013-04-22 15:13:24.578000','',1,3,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('ReadByLengthField','FILE_WRITE_TEST','GENDER','2013-04-22 15:13:24.578000','',2,1,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('ReadByLengthField','FILE_WRITE_TEST','NAME','2013-04-22 15:13:24.578000','',0,10,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('ReadByLengthField','LoopFieldTest','FIELD1','2013-03-15 15:54:20.875000','Field 1',0,5,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('ReadByLengthField','LoopFieldTest','FIELD2','2013-03-15 15:54:20.875000','Field 2',1,5,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('ReadByLengthField','LoopFieldTest','LOOP_FIELD1','2013-03-15 15:54:20.875000','Loop Field 1',3,5,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('ReadByLengthField','LoopFieldTest','LOOP_FIELD2','2013-03-15 15:54:20.875000','Loop Field 2',4,5,'false','0','L','N','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('ReadByLengthField','LoopFieldTest','_endLOOP','2013-03-15 15:54:20.875000','',5,0,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('ReadByLengthField','LoopFieldTest','_startLOOP','2013-03-15 15:54:20.875000','',2,0,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('ReadByLengthField','MEMBER_LOGIN','EXC_ORDER','2013-07-05 11:39:06.235000','',3,1,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('ReadByLengthField','MEMBER_LOGIN','ID','2013-07-05 11:39:06.235000','ID',0,10,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('ReadByLengthField','MEMBER_LOGIN','MEMBER_TYPE','2013-07-05 11:39:06.235000','\uba64\ubc84 \ud0c0\uc785',2,10,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('ReadByLengthField','MEMBER_LOGIN','PWD','2013-07-05 11:39:06.235000','\ud328\uc2a4\uc6cc\ub4dc',1,10,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('ReadByLengthField','MEMBER_LOGIN','ACCESS_YN','2013-07-05 12:07:15.224000','',3,1,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('ReadByLengthField','MEMBER_LOGIN','ID','2013-07-05 12:07:15.224000','ID',0,10,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('ReadByLengthField','MEMBER_LOGIN','MEMBER_TYPE','2013-07-05 12:07:15.224000','\uba64\ubc84 \ud0c0\uc785',2,10,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('ReadByLengthField','MEMBER_LOGIN','PWD','2013-07-05 12:07:15.224000','\ud328\uc2a4\uc6cc\ub4dc',1,10,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('ReadByLengthField','MappingTest','FIELD1','2013-03-15 15:54:20.859000','Mapping Field 1',0,5,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('ReadByLengthField','MappingTest','FIELD2','2013-03-15 15:54:20.859000','Mapping Field 2',1,10,'false',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('ReadByLengthField','SYS_HDR','LENGTH','2013-04-05 11:22:05.843000','Length',0,4,'true ','0','R','N','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('ReadByLengthField','SYS_HDR','SERVICE_ID','2013-04-05 11:22:05.843000','Service ID',1,15,'true ',' ','L','C','')
INSERT INTO TELEGRAM_FIELDS_H VALUES('ReadByLengthField','SYS_HDR','SPACE','2013-04-05 11:22:05.843000','Space Reserved',2,21,'false',' ','L','C','')
INSERT INTO COMPONENT VALUES('FlexibleTest','ChartCallTest','ChartCallTest','component.webtest.ChartCallTest','biz/component/webtest/ChartCallTest.class','false')
INSERT INTO COMPONENT VALUES('FlexibleTest','FileUploadTest','FileUploadTest','component.webtest.FileUploadTest','biz/component/webtest/FileUploadTest.class','false')
INSERT INTO COMPONENT VALUES('FlexibleTest','IndexTest','IndexTest','component.webtest.IndexTest','biz/component/webtest/IndexTest.class','false')
INSERT INTO COMPONENT VALUES('FlexibleTest','WebArrayReturnTest','WebArrayReturnTest','component.webtest.WebArrayReturnTest','biz/component/webtest/WebArrayReturnTest.class','false')
INSERT INTO COMPONENT VALUES('PMS','CommonUtility','CommonUtility','component.common.CommonUtility','pms/component/common/CommonUtility.class','false')
INSERT INTO COMPONENT VALUES('PMS','MemberComponent','MemberComponent','component.portal.member.MemberComponent','pms/component/portal/member/MemberComponent.class','false')
INSERT INTO COMPONENT VALUES('PMS','MenuComponent','MenuComponent','component.portal.menu.MenuComponent','pms/component/portal/menu/MenuComponent.class','false')
INSERT INTO COMPONENT VALUES('ReadByLengthField','MessageQueueTest','MessageQueueTest','component.MessageQueueTest','biz/component/MessageQueueTest.class','false')
INSERT INTO COMPONENT VALUES('ReadByLengthField','NetTest','NetTest','component.NetTest','biz/component/NetTest.class','false')
INSERT INTO COMPONENT_H VALUES('FlexibleTest','ChartCallTest','2013-07-16 15:11:13.348000','ChartCallTest','component.webtest.ChartCallTest','biz/component/webtest/ChartCallTest.class','false')
INSERT INTO COMPONENT_H VALUES('FlexibleTest','FileUploadTest','2013-07-16 15:11:06.181000','FileUploadTest','component.webtest.FileUploadTest','biz/component/webtest/FileUploadTest.class','false')
INSERT INTO COMPONENT_H VALUES('FlexibleTest','IndexTest','2013-07-16 15:10:56.819000','IndexTest','component.webtest.IndexTest','biz/component/webtest/IndexTest.class','false')
INSERT INTO COMPONENT_H VALUES('FlexibleTest','SimpleQuery','2013-03-15 15:54:21.734000','SimpleQuery','com.nabsys.database.SimpleQuery','com/nabsys/database/SimpleQuery.class','false')
INSERT INTO COMPONENT_H VALUES('FlexibleTest','WebArrayReturnTest','2013-07-16 15:10:48.441000','WebArrayReturnTest','component.webtest.WebArrayReturnTest','biz/component/webtest/WebArrayReturnTest.class','false')
INSERT INTO COMPONENT_H VALUES('PMS','ChartCallTest','2013-03-18 12:10:07.312000','ChartCallTest','component.webtest.ChartCallTest','F:\Nabeepathway\NabeeSAC\biz/component/webtest/ChartCallTest.class','true ')
INSERT INTO COMPONENT_H VALUES('PMS','CommonUtility','2013-07-23 09:49:06.879000','CommonUtility','component.common.CommonUtility','pms/component/common/CommonUtility.class','false')
INSERT INTO COMPONENT_H VALUES('PMS','CommonUtility','2013-07-23 10:28:29.484000','CommonUtility','component.common.CommonUtility','pms/component/common/CommonUtility.class','false')
INSERT INTO COMPONENT_H VALUES('PMS','CommonUtility','2013-07-23 12:44:10.356000','CommonUtility','component.common.CommonUtility','pms/component/common/CommonUtility.class','false')
INSERT INTO COMPONENT_H VALUES('PMS','MemberComponent','2013-07-23 09:43:24.837000','MemberComponent','component.portal.member.MemberComponent','pms/component/portal/member/MemberComponent.class','false')
INSERT INTO COMPONENT_H VALUES('PMS','MenuComponent','2013-07-23 09:53:13.702000','MenuComponent','component.portal.menu.MenuComponent','pms/component/portal/menu/MenuComponent.class','false')
INSERT INTO COMPONENT_H VALUES('PMS','ResultSetter','2013-04-09 12:47:47.828000','ResultSetter','component.common.ResultSetter','nist/component/common/ResultSetter.class','false')
INSERT INTO COMPONENT_H VALUES('PMS','ResultSetter','2013-04-09 13:30:19.859000','ResultSetter','component.common.ResultSetter','nist/component/common/ResultSetter.class','false')
INSERT INTO COMPONENT_H VALUES('PMS','SimpleQuery','2013-03-15 15:54:21.265000','SimpleQuery','com.nabsys.database.SimpleQuery','com/nabsys/database/SimpleQuery.class','false')
INSERT INTO COMPONENT_H VALUES('PMS','a','2013-03-18 11:52:20.250000','a','component.common.ResultSetter','nist/component/common/ResultSetter.class','false')
INSERT INTO COMPONENT_H VALUES('PMS','a','2013-03-18 11:54:28.671000','a','component.common.ResultSetter','nist/component/common/ResultSetter.class','false')
INSERT INTO COMPONENT_H VALUES('PMS','a','2013-03-18 12:07:39.609000','a','component.common.ResultSetter','nist/component/common/ResultSetter.class','false')
INSERT INTO COMPONENT_H VALUES('PMS','aa','2013-03-18 11:10:08.843000','aa','component.common.ResultSetter','nist/component/common/ResultSetter.class','false')
INSERT INTO COMPONENT_H VALUES('PMS','aa','2013-03-18 11:52:08.671000','aa','component.common.ResultSetter','nist/component/common/ResultSetter.class','false')
INSERT INTO COMPONENT_H VALUES('PMS','aa','2013-03-18 11:54:35.593000','aa','component.common.ResultSetter','nist/component/common/ResultSetter.class','false')
INSERT INTO COMPONENT_H VALUES('PMS','aaa','2013-03-18 11:12:04.171000','aaa','component.common.ResultSetter','nist/component/common/ResultSetter.class','false')
INSERT INTO COMPONENT_H VALUES('PMS','aaa','2013-03-18 11:58:34.593000','aaa','component.common.ResultSetter','nist/component/common/ResultSetter.class','false')
INSERT INTO COMPONENT_H VALUES('PMS','aaaa','2013-03-18 11:35:47.046000','aaaa','component.common.ResultSetter','nist/component/common/ResultSetter.class','false')
INSERT INTO COMPONENT_H VALUES('PMS','aaaa','2013-03-18 12:00:50.250000','aaaa','component.common.ResultSetter','nist/component/common/ResultSetter.class','false')
INSERT INTO COMPONENT_H VALUES('PMS','aaaaa','2013-03-18 12:02:33.671000','aaaaa','component.common.ResultSetter','nist/component/common/ResultSetter.class','false')
INSERT INTO COMPONENT_H VALUES('ReadByLengthField','MessageQueueTest','2013-07-16 15:09:52.586000','MessageQueueTest','component.MessageQueueTest','biz/component/MessageQueueTest.class','false')
INSERT INTO COMPONENT_H VALUES('ReadByLengthField','NetTest','2013-07-16 15:09:38.775000','NetTest','component.NetTest','biz/component/NetTest.class','false')
INSERT INTO COMPONENT_H VALUES('ReadByLengthField','SimpleQuery','2013-03-15 15:54:21.359000','SimpleQuery','com.nabsys.database.SimpleQuery','com/nabsys/database/SimpleQuery.class','false')
INSERT INTO SERVICE VALUES('FlexibleTest','ARRAY_RTN_TEST','Array Return From Server Test','Online','',740,'true ')
INSERT INTO SERVICE VALUES('FlexibleTest','CHART_CALL','Chart Call Test','Online','',740,'true ')
INSERT INTO SERVICE VALUES('FlexibleTest','FILE_UPLOAD_TEST','File Upload Test','Online','',740,'true ')
INSERT INTO SERVICE VALUES('FlexibleTest','INDEX_TEST','Web Index Page Test','Online','',740,'true ')
INSERT INTO SERVICE VALUES('FlexibleTest','RSV_KEEP_ALIVE_SVC','Keep Alive Message','Online','',740,'true ')
INSERT INTO SERVICE VALUES('PMS','ACCE_LEVEL_CODE_LIST','Access level code list','Online','\uc811\uadfc\ub808\ubca8 \ucf54\ub4dc\ub9ac\uc2a4\ud2b8 \uc870\ud68c',2275,'true ')
INSERT INTO SERVICE VALUES('PMS','ACC_LIST_DELETE','Delete an access list','Online','',2276,'true ')
INSERT INTO SERVICE VALUES('PMS','ACC_LIST_MODIFY','Modify access level information','Online','\uc811\uadfc\uad8c\ud55c \ubcc0\uacbd',2277,'true ')
INSERT INTO SERVICE VALUES('PMS','ACC_LIST_SAVE','Add new access list','Online','\uc0c8\ub85c\uc6b4 \uc811\uadfc\uad8c\ud55c \ub9ac\uc2a4\ud2b8 \ub4f1\ub85d',2318,'true ')
INSERT INTO SERVICE VALUES('PMS','ACC_LIST_SEARCH','Search access member list','Online','Search access member list of a menu',2279,'true ')
INSERT INTO SERVICE VALUES('PMS','ACC_MBR_MODIFY','Modifying access member information','Online','Modifying access member information',2280,'true ')
INSERT INTO SERVICE VALUES('PMS','ACC_MBR_SAVE','\uc2e0\uaddc\uc811\uc18d\ub9ac\uc2a4\ud2b8\ub4f1\ub85d','Online','\uc2e0\uaddc\uc811\uc18d\ub9ac\uc2a4\ud2b8\ub4f1\ub85d',2282,'true ')
INSERT INTO SERVICE VALUES('PMS','ACC_MBR_SEARCH','\uc2dc\uc2a4\ud15c\uc811\uc18d\ub9ac\uc2a4\ud2b8\uc870\ud68c','Online','\uc2dc\uc2a4\ud15c\uc811\uc18d\ub9ac\uc2a4\ud2b8\uc870\ud68c',2283,'true ')
INSERT INTO SERVICE VALUES('PMS','ARTCL_CMT_DELETE','Remove board comment','Online','',2284,'true ')
INSERT INTO SERVICE VALUES('PMS','ARTCL_CMT_SAVE','Save board comment and retrieve the data','Online','',2645,'true ')
INSERT INTO SERVICE VALUES('PMS','BDG_LIST_SEARCH','Budget List Search','Online','',2796,'true ')
INSERT INTO SERVICE VALUES('PMS','BDG_SAVE','Save Budget','Online','',2799,'true ')
INSERT INTO SERVICE VALUES('PMS','BOARD_ARTCL_DELETE','Remove a board article','Online','',2286,'true ')
INSERT INTO SERVICE VALUES('PMS','BOARD_ARTCL_SAVE','Save board article','Online','',2287,'true ')
INSERT INTO SERVICE VALUES('PMS','BOARD_ARTCL_SEARCH','Get an article from board','Online','\uac8c\uc2dc\uae00 \uc870\ud68c',2288,'true ')
INSERT INTO SERVICE VALUES('PMS','BOARD_ATTFILE_DELETE','Remove attached file','Online','',2289,'true ')
INSERT INTO SERVICE VALUES('PMS','BOARD_FILE_DOWNLOAD','Download attatched file','Online','',2290,'true ')
INSERT INTO SERVICE VALUES('PMS','BOARD_FILE_LST_SCH','Search attatched file list','Online','',2291,'true ')
INSERT INTO SERVICE VALUES('PMS','BOARD_LIST_SEARCH','Search Board List','Online','',3205,'true ')
INSERT INTO SERVICE VALUES('PMS','BOARD_MASTER_SAVE','Add new board master information','Online','',2294,'true ')
INSERT INTO SERVICE VALUES('PMS','BOARD_MASTER_SEARCH','Board Master list search','Online','',2295,'true ')
INSERT INTO SERVICE VALUES('PMS','BOARD_MASTER_UPDATE','Update board master information','Online','\ubcf4\ub4dc \ub9c8\uc2a4\ud130 \uc815\ubcf4 \uc5c5\ub370\uc774\ud2b8',2296,'true ')
INSERT INTO SERVICE VALUES('PMS','BOARD_MODIFY_SEARCH','Search article for modification','Online','',2297,'true ')
INSERT INTO SERVICE VALUES('PMS','BOARD_SAVE','Add new article','Online','',2298,'true ')
INSERT INTO SERVICE VALUES('PMS','BTCH_RMV_LOG','Log file management','Batch','',2155,'true ')
INSERT INTO SERVICE VALUES('PMS','BTCH_RMV_TMP_UP_FILE','Clear temporary upload files','Batch','3\uc2dc\uac04 \uc804\uc758 \uc784\uc2dc\uc5c5\ub85c\ub4dc \ud30c\uc77c \uc0ad\uc81c',2299,'true ')
INSERT INTO SERVICE VALUES('PMS','CHANGE_PASSWORD','\uc0ac\uc6a9\uc790 \ube44\ubc00\ubc88\ud638 \ubcc0\uacbd','Online','',3237,'true ')
INSERT INTO SERVICE VALUES('PMS','CNFS_ATTFILE_DELETE','Remove attached file','Online','',2960,'true ')
INSERT INTO SERVICE VALUES('PMS','CNFS_FILE_DOWNLOAD','Download attatched file','Online','',2949,'true ')
INSERT INTO SERVICE VALUES('PMS','CNFS_LIST_SEARCH','\ud68c\uc758\ub85d \ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',2998,'true ')
INSERT INTO SERVICE VALUES('PMS','CNFS_SAVE','\ud68c\uc758\ub85d \uc800\uc7a5','Online','',2968,'true ')
INSERT INTO SERVICE VALUES('PMS','CNFS_SEARCH','\ud68c\uc758\ub85d \ub0b4\uc6a9 \uc870\ud68c','Online','',2997,'true ')
INSERT INTO SERVICE VALUES('PMS','CODE_GROUP_MODIFY','Code Group Modify','Online','',2300,'true ')
INSERT INTO SERVICE VALUES('PMS','CODE_GROUP_SAVE','Create New Code Group','Online','',2302,'true ')
INSERT INTO SERVICE VALUES('PMS','CODE_GROUP_SEARCH','Code group search','Online','',2330,'true ')
INSERT INTO SERVICE VALUES('PMS','CODE_LIST_BY_GROUP','\ucf54\ub4dc \uadf8\ub8f9\uc73c\ub85c \ucf54\ub4dc\ub9ac\uc2a4\ud2b8 \uac80\uc0c9','Online','',2443,'true ')
INSERT INTO SERVICE VALUES('PMS','CODE_MODIFY','Code Modify','Online','',2062,'true ')
INSERT INTO SERVICE VALUES('PMS','CODE_SAVE','Code Save','Online','',2063,'true ')
INSERT INTO SERVICE VALUES('PMS','CODE_SEARCH','Code search','Online','',2343,'true ')
INSERT INTO SERVICE VALUES('PMS','COST_LIST_SEARCH','\ube44\uc6a9\ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',2830,'true ')
INSERT INTO SERVICE VALUES('PMS','COST_REMAIN_SEARCH','\ube44\uc6a9\uc794\uc561,\uc9c0\ubd88\ubc29\uc2dd \uc870\ud68c','Online','',2859,'true ')
INSERT INTO SERVICE VALUES('PMS','COST_SAVE','\ube44\uc6a9\ub4f1\ub85d','Online','',2868,'true ')
INSERT INTO SERVICE VALUES('PMS','COST_SEARCH','\ube44\uc6a9\uc0c1\uc138\uc815\ubcf4\uc870\ud68c','Online','',2848,'true ')
INSERT INTO SERVICE VALUES('PMS','DCS_ATTFILE_DELETE','Remove attached file','Online','',3128,'true ')
INSERT INTO SERVICE VALUES('PMS','DCS_FILE_DOWNLOAD','Download attatched file','Online','',3117,'true ')
INSERT INTO SERVICE VALUES('PMS','DCS_LIST_SEARCH','\uc758\uc0ac\uacb0\uc815 \uc694\uccad \ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',3042,'true ')
INSERT INTO SERVICE VALUES('PMS','DCS_SAVE','\uc758\uc0ac\uacb0\uc815 \uc694\uccad \uc800\uc7a5','Online','',3149,'true ')
INSERT INTO SERVICE VALUES('PMS','DCS_SEARCH','\uc758\uc0ac\uacb0\uc815 \uc694\uccad \ub0b4\uc6a9 \uc870\ud68c','Online','',3186,'true ')
INSERT INTO SERVICE VALUES('PMS','DCS_STATUS_SAVE','\uc758\uc0ac\uacb0\uc815 \uc0c1\ud0dc \ubcc0\uacbd','Online','',3200,'true ')
INSERT INTO SERVICE VALUES('PMS','DGRE_CODE_LIST','Degree code list search','Online','\ud559\uc704\ucf54\ub4dc \ub9ac\uc2a4\ud2b8 \uc870\ud68c',2303,'true ')
INSERT INTO SERVICE VALUES('PMS','GET_BOARD_MASTER','Get Board Master Information','Online','',2304,'true ')
INSERT INTO SERVICE VALUES('PMS','HYC_MENU_SCH','\uacc4\uce35\uc801 \uba54\ub274 \ub9ac\uc2a4\ud2b8','Online','',2305,'true ')
INSERT INTO SERVICE VALUES('PMS','HYC_MENU_SCH_ALL','\uacc4\uce35\uc801 \uba54\ub274 \ub9ac\uc2a4\ud2b8','Online','',2267,'true ')
INSERT INTO SERVICE VALUES('PMS','IMAGE_CALL','Image Call Service','Online','',2306,'true ')
INSERT INTO SERVICE VALUES('PMS','INIT_PASSWORD','Initialize password','Online','',2307,'true ')
INSERT INTO SERVICE VALUES('PMS','LOGIN','\uc2dc\uc2a4\ud15c \ub85c\uadf8\uc778','Online','',2308,'true ')
INSERT INTO SERVICE VALUES('PMS','MBR_LIST_SEARCH','\uacf5\ud1b5 \uba64\ubc84\uc870\ud68c','Online','by ID,NAME => XML',2463,'true ')
INSERT INTO SERVICE VALUES('PMS','MBR_MODIFY','Update member information','Online','\uc9c1\uc6d0\uc815\ubcf4 \ubcc0\uacbd',2078,'true ')
INSERT INTO SERVICE VALUES('PMS','MBR_ORG_SEARCH','\uba64\ubc84\uc9c1\ucc45\ubd80\uc11c \uc870\ud68c','Online','',2371,'true ')
INSERT INTO SERVICE VALUES('PMS','MBR_POP_SEARCH','Search member for popup info','Online','',2310,'true ')
INSERT INTO SERVICE VALUES('PMS','MBR_PROFILE','\uba64\ubc84 \ud504\ub85c\ud30c\uc77c','Online','',3227,'true ')
INSERT INTO SERVICE VALUES('PMS','MBR_ROLE_SEARCH','Member search for role registration','Online','\uc5ed\ud560 \ub4f1\ub85d\uc744 \uc704\ud55c \uba64\ubc84 \uc870\ud68c',2410,'true ')
INSERT INTO SERVICE VALUES('PMS','MBR_SAVE','Add new member information','Online','\uc9c1\uc6d0\uc815\ubcf4 \ucd94\uac00 \ub4f1\ub85d',2313,'true ')
INSERT INTO SERVICE VALUES('PMS','MBR_SEARCH','Member Search','Online','Access Member Search',2084,'true ')
INSERT INTO SERVICE VALUES('PMS','MBR_SEARCH_CMB','JSON\uc6a9 \uba64\ubc84 \uc870\ud68c','Online','',2200,'true ')
INSERT INTO SERVICE VALUES('PMS','MBR_TYPE_LIST','Member Type Code List','Online','\uba64\ubc84 \ud0c0\uc785 \ucf54\ub4dc \ub9ac\uc2a4\ud2b8 \uc870\ud68c',2085,'true ')
INSERT INTO SERVICE VALUES('PMS','MENU_COUNT','Total Menu Count','Online','',2316,'true ')
INSERT INTO SERVICE VALUES('PMS','MENU_DELETE','Delete Menu','Online','',2159,'true ')
INSERT INTO SERVICE VALUES('PMS','MENU_MODIFY','Modify menu','Online','',2087,'true ')
INSERT INTO SERVICE VALUES('PMS','MENU_ORDER_CHANGE','Menu order change','Online','',2136,'true ')
INSERT INTO SERVICE VALUES('PMS','MENU_SAVE','Add new menu','Online','Add new menu',2088,'true ')
INSERT INTO SERVICE VALUES('PMS','ORGN_DELETE','Delete organization','Online','It''s not real deletion but disabling.',2089,'true ')
INSERT INTO SERVICE VALUES('PMS','ORGN_MODIFY','Organization Modify','Online','',2090,'true ')
INSERT INTO SERVICE VALUES('PMS','ORGN_SAVE','Organization Save','Online','',2314,'true ')
INSERT INTO SERVICE VALUES('PMS','ORGN_SEARCH','Organization List Search','Online','',2092,'true ')
INSERT INTO SERVICE VALUES('PMS','ORGN_SEARCH_LIST','Searching organization list for select box','Online','',2093,'true ')
INSERT INTO SERVICE VALUES('PMS','PRJ_BOARD_SEARCH','\ud504\ub85c\uc81d\ud2b8 \uac8c\uc2dc\ud310 \ub9c8\uc2a4\ud130 ID \uc870\ud68c','Online','',2424,'true ')
INSERT INTO SERVICE VALUES('PMS','PRJ_DUP_CHK','\ud504\ub85c\uc81d\ud2b8 ID \uc911\ubcf5 \uccb4\ud06c','Online','\ud504\ub85c\uc81d\ud2b8 ID \uc911\ubcf5 \uccb4\ud06c',2221,'true ')
INSERT INTO SERVICE VALUES('PMS','PRJ_LIST_SEARCH','\ud504\ub85c\uc81d\ud2b8 \ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',2414,'true ')
INSERT INTO SERVICE VALUES('PMS','PRJ_LIST_SEARCH_POP','\ud504\ub85c\uc81d\ud2b8 \ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',2418,'true ')
INSERT INTO SERVICE VALUES('PMS','PRJ_MBR_LST_SCH','\ud504\ub85c\uc81d\ud2b8 \uba64\ubc84 \ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',2425,'true ')
INSERT INTO SERVICE VALUES('PMS','PRJ_MBR_SAVE','\ud504\ub85c\uc81d\ud2b8 \uba64\ubc84 \ub4f1\ub85d,\uc0ad\uc81c','Online','',2406,'true ')
INSERT INTO SERVICE VALUES('PMS','PRJ_SAVE','\ud504\ub85c\uc81d\ud2b8 \uc800\uc7a5','Online','\uc800\uc7a5,\uc218\uc815,\uc0ad\uc81c \uc77c\uad04 \ucc98\ub9ac',3253,'true ')
INSERT INTO SERVICE VALUES('PMS','PRJ_SEARCH','\ud504\ub85c\uc81d\ud2b8 \uc0c1\uc138\uc815\ubcf4 \uc870\ud68c','Online','',2423,'true ')
INSERT INTO SERVICE VALUES('PMS','ROLE_ACC_LIST_SEARCH','Search role to regist on access list','Online','Search role to regist on access list',2095,'true ')
INSERT INTO SERVICE VALUES('PMS','ROLE_CODE_LIST','Getting Role Code List','Online','\uc5ed\ud560\ucf54\ub4dc \ub9ac\uc2a4\ud2b8 \uc870\ud68c',2097,'true ')
INSERT INTO SERVICE VALUES('PMS','ROLE_DELETE','Remove Role and Access List','Online','',2098,'true ')
INSERT INTO SERVICE VALUES('PMS','ROLE_MODIFY','Modify Role','Online','\uc5ed\ud560 \uc815\ubcf4 \uc218\uc815',2099,'true ')
INSERT INTO SERVICE VALUES('PMS','ROLE_SAVE','Role save','Online','\uc5ed\ud560 \uc2e0\uaddc \ub4f1\ub85d',2315,'true ')
INSERT INTO SERVICE VALUES('PMS','ROLE_SEARCH','Role Search','Online','\ubd80\uc11c \ud558\uc704 \uc5ed\ud560 \uac80\uc0c9',2101,'true ')
INSERT INTO SERVICE VALUES('PMS','RPT_LIST_SEARCH','\ubcf4\uace0\uc11c \ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',3207,'true ')
INSERT INTO SERVICE VALUES('PMS','RPT_SAVE','\ubcf4\uace0\uc11c \uc800\uc7a5','Online','',2996,'true ')
INSERT INTO SERVICE VALUES('PMS','RPT_SEARCH','\ubcf4\uace0\uc11c \ub0b4\uc6a9 \uc870\ud68c','Online','',3203,'true ')
INSERT INTO SERVICE VALUES('PMS','RSV_KEEP_ALIVE_SVC','Keep Alive Message','Online','',1200,'true ')
INSERT INTO SERVICE VALUES('PMS','SCHDL_CMT_REMOVE','Remove comment of schedule','Online','',2670,'true ')
INSERT INTO SERVICE VALUES('PMS','SCHDL_CMT_SAVE','Save schedule comment and retrieve the data','Online','',2677,'true ')
INSERT INTO SERVICE VALUES('PMS','SCHDL_CMT_SEARCH','Search comment list','Online','',2671,'true ')
INSERT INTO SERVICE VALUES('PMS','SCHDL_DTL_SEARCH','\uc77c\uc815 \uc0c1\uc138 \uc870\ud68c','Online','',2570,'true ')
INSERT INTO SERVICE VALUES('PMS','SCHDL_FILE_DOWNLOAD','\ud30c\uc77c \ub2e4\uc6b4\ub85c\ub4dc','Online','',2692,'true ')
INSERT INTO SERVICE VALUES('PMS','SCHDL_FILE_LST_SCH','Search attatched file list','Online','',2665,'true ')
INSERT INTO SERVICE VALUES('PMS','SCHDL_FILE_REMOVE','Remove attatched file of schedule','Online','',2680,'true ')
INSERT INTO SERVICE VALUES('PMS','SCHDL_FILE_SAVE','Save schedule file and retrieve the data','Online','',2689,'true ')
INSERT INTO SERVICE VALUES('PMS','SCHDL_LIST_SEARCH','\uc0ac\uc6a9\uc790 \uac1c\uc778 \uc77c\uc815 \ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',3286,'true ')
INSERT INTO SERVICE VALUES('PMS','SUB_MENU_SCH','\ub85c\uadf8\uc778 \uc720\uc800 \ud558\uc704\uba54\ub274 \uc870\ud68c','Online','',2102,'true ')
INSERT INTO SERVICE VALUES('PMS','SUB_MENU_SCH_M','\uba54\ub274\uad00\ub9ac \ud558\uc704\uba54\ub274 \uc870\ud68c','Online','',2103,'true ')
INSERT INTO SERVICE VALUES('PMS','TMP_FILE_UPLOAD','Temp file upload','Online','',2535,'true ')
INSERT INTO SERVICE VALUES('PMS','TOP_MENU_SCH','\ub85c\uadf8\uc778 \uc720\uc800 \ucd5c\uc0c1\uc704 \uba54\ub274 \uc870\ud68c','Online','',2106,'true ')
INSERT INTO SERVICE VALUES('PMS','TOP_MENU_SCH_M','\uba54\ub274\uad00\ub9ac \ucd5c\uc0c1\uc704 \uba54\ub274 \uc870\ud68c','Online','',2108,'true ')
INSERT INTO SERVICE VALUES('PMS','USR_SCHDL_REMOVE','\uc2a4\ucf00\uc974 \uc0ad\uc81c','Online','',2545,'true ')
INSERT INTO SERVICE VALUES('PMS','USR_SCHDL_SAVE','\uc2a4\ucf00\uc974 \ub4f1\ub85d,\uc218\uc815','Online','',2883,'true ')
INSERT INTO SERVICE VALUES('PMS','USR_SCHDL_SEARCH','\uc0ac\uc6a9\uc790 \ubcc4 \uc2a4\ucf00\uc974 \uc870\ud68c','Online','',2884,'true ')
INSERT INTO SERVICE VALUES('ReadByLengthField','BASIC_NET_TEST','Basic Net Test','Online','',2003,'true ')
INSERT INTO SERVICE VALUES('ReadByLengthField','COMPARISON_TEST','','General','',2531,'true ')
INSERT INTO SERVICE VALUES('ReadByLengthField','FILE_READ_TEST','','Batch','',1972,'false')
INSERT INTO SERVICE VALUES('ReadByLengthField','FILE_WRITE_TEST','','Online','',1960,'true ')
INSERT INTO SERVICE VALUES('ReadByLengthField','GENERAL_TEST','','General','',1977,'true ')
INSERT INTO SERVICE VALUES('ReadByLengthField','GENERAL_TEST_CALL','','Batch','',1978,'false')
INSERT INTO SERVICE VALUES('ReadByLengthField','LOOP_FIELD_TEST','Loop Field Test','Online','',1962,'true ')
INSERT INTO SERVICE VALUES('ReadByLengthField','MSG_QUEUE_CALL','Test Message Queue Caller','Batch','',1963,'false')
INSERT INTO SERVICE VALUES('ReadByLengthField','ORGN_SEARCH_LIST','Searching organization list for select box','Online','',1971,'true ')
INSERT INTO SERVICE VALUES('ReadByLengthField','PERF_TEST','\uc131\ub2a5 \ud14c\uc2a4\ud2b8','Online','',2022,'true ')
INSERT INTO SERVICE VALUES('ReadByLengthField','PERN_TEST','\ub124\ud2b8\uc6cd\ub9cc \uc131\ub2a5 \ud14c\uc2a4\ud2b8','Online','',1969,'true ')
INSERT INTO SERVICE VALUES('ReadByLengthField','PROCEDURE_CALL','','General','',1970,'true ')
INSERT INTO SERVICE VALUES('ReadByLengthField','SCRIPT_TEST','','General','',2013,'true ')
INSERT INTO SERVICE VALUES('ReadByLengthField','TEST_MSG_QUEUE','Test Message Queue','MessageQueue','',1975,'false')
INSERT INTO SERVICE_H VALUES('PMS','ACCE_LEVEL_CODE_LIST','2013-08-12 12:02:43.588000','Access level code list','Online','\uc811\uadfc\ub808\ubca8 \ucf54\ub4dc\ub9ac\uc2a4\ud2b8 \uc870\ud68c',2275,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ACC_LIST_DELETE','2013-08-12 12:02:53.853000','Delete an access list','Online','',2276,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ACC_LIST_MODIFY','2013-08-12 12:03:02.800000','Modify access level information','Online','\uc811\uadfc\uad8c\ud55c \ubcc0\uacbd',2277,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ACC_LIST_SAVE','2013-08-12 12:12:59.416000','Add new access list','Online','\uc0c8\ub85c\uc6b4 \uc811\uadfc\uad8c\ud55c \ub9ac\uc2a4\ud2b8 \ub4f1\ub85d',2317,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ACC_LIST_SAVE','2013-08-12 12:13:09.669000','Add new access list','Online','\uc0c8\ub85c\uc6b4 \uc811\uadfc\uad8c\ud55c \ub9ac\uc2a4\ud2b8 \ub4f1\ub85d',2318,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ACC_LIST_SEARCH','2013-08-12 12:04:04.216000','Search access member list','Online','Search access member list of a menu',2278,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ACC_LIST_SEARCH','2013-08-12 12:04:08.426000','Search access member list','Online','Search access member list of a menu',2279,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ACC_MBR_MODIFY','2013-08-12 12:04:18.798000','Modifying access member information','Online','Modifying access member information',2280,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ACC_MBR_SAVE','2013-08-12 12:04:33.850000','\uc2e0\uaddc\uc811\uc18d\ub9ac\uc2a4\ud2b8\ub4f1\ub85d','Online','\uc2e0\uaddc\uc811\uc18d\ub9ac\uc2a4\ud2b8\ub4f1\ub85d',2281,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ACC_MBR_SAVE','2013-08-12 12:04:36.638000','\uc2e0\uaddc\uc811\uc18d\ub9ac\uc2a4\ud2b8\ub4f1\ub85d','Online','\uc2e0\uaddc\uc811\uc18d\ub9ac\uc2a4\ud2b8\ub4f1\ub85d',2282,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ACC_MBR_SEARCH','2013-08-12 12:04:52.806000','\uc2dc\uc2a4\ud15c\uc811\uc18d\ub9ac\uc2a4\ud2b8\uc870\ud68c','Online','\uc2dc\uc2a4\ud15c\uc811\uc18d\ub9ac\uc2a4\ud2b8\uc870\ud68c',2283,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ARTCL_CMT_DELETE','2013-08-12 12:05:11.058000','Remove board comment','Online','',2284,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ARTCL_CMT_SAVE','2013-08-26 18:17:42.718000','Save board comment and retrieve the data','Online','',2645,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ATVT_STRM','2013-09-30 21:20:15.937000','\uc5c5\ubb34HISTORY','Online','',3239,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ATVT_STRM','2013-09-30 21:22:29.722000','\uc5c5\ubb34HISTORY','Online','',3240,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ATVT_STRM','2013-09-30 21:23:55.165000','\uc5c5\ubb34HISTORY','Online','',3241,'true ')
INSERT INTO SERVICE_H VALUES('PMS','BDG_LIST_SEARCH','2013-09-03 01:16:13.752000','Budget List Search','Online','',2781,'true ')
INSERT INTO SERVICE_H VALUES('PMS','BDG_LIST_SEARCH','2013-09-03 01:16:16.889000','Budget List Search','Online','',2782,'true ')
INSERT INTO SERVICE_H VALUES('PMS','BDG_LIST_SEARCH','2013-09-03 02:01:46.964000','Budget List Search','Online','',2792,'true ')
INSERT INTO SERVICE_H VALUES('PMS','BDG_LIST_SEARCH','2013-09-03 03:35:30.573000','Budget List Search','Online','',2796,'true ')
INSERT INTO SERVICE_H VALUES('PMS','BDG_SAVE','2013-09-03 03:35:51.298000','Save Budget','Online','',2797,'true ')
INSERT INTO SERVICE_H VALUES('PMS','BDG_SAVE','2013-09-03 03:38:34.859000','Save Budget','Online','',2798,'true ')
INSERT INTO SERVICE_H VALUES('PMS','BDG_SAVE','2013-09-03 03:39:12.692000','Save Budget','Online','',2799,'true ')
INSERT INTO SERVICE_H VALUES('PMS','BOARD_ARTCL_DELETE','2013-08-12 12:06:21.864000','Remove a board article','Online','',2286,'true ')
INSERT INTO SERVICE_H VALUES('PMS','BOARD_ARTCL_SAVE','2013-08-12 12:06:30.343000','Save board article','Online','',2287,'true ')
INSERT INTO SERVICE_H VALUES('PMS','BOARD_ARTCL_SEARCH','2013-08-12 12:06:44.426000','Get an article from board','Online','\uac8c\uc2dc\uae00 \uc870\ud68c',2288,'true ')
INSERT INTO SERVICE_H VALUES('PMS','BOARD_ATTFILE_DELETE','2013-08-12 12:06:54.164000','Remove attached file','Online','',2289,'true ')
INSERT INTO SERVICE_H VALUES('PMS','BOARD_FILE_DOWNLOAD','2013-08-12 12:07:02.886000','Download attatched file','Online','',2290,'true ')
INSERT INTO SERVICE_H VALUES('PMS','BOARD_FILE_LST_SCH','2013-08-12 12:07:28.931000','Search attatched file list','Online','',2291,'true ')
INSERT INTO SERVICE_H VALUES('PMS','BOARD_LIST_SEARCH','2013-09-27 16:13:28.787000','Search Board List','Online','',3205,'true ')
INSERT INTO SERVICE_H VALUES('PMS','BOARD_MASTER_SAVE','2013-08-12 12:07:52.962000','Add new board master information','Online','',2293,'true ')
INSERT INTO SERVICE_H VALUES('PMS','BOARD_MASTER_SAVE','2013-08-12 12:08:00.670000','Add new board master information','Online','',2294,'true ')
INSERT INTO SERVICE_H VALUES('PMS','BOARD_MASTER_SEARCH','2013-08-12 12:08:14.470000','Board Master list search','Online','',2295,'true ')
INSERT INTO SERVICE_H VALUES('PMS','BOARD_MASTER_UPDATE','2013-08-12 12:08:23.387000','Update board master information','Online','\ubcf4\ub4dc \ub9c8\uc2a4\ud130 \uc815\ubcf4 \uc5c5\ub370\uc774\ud2b8',2296,'true ')
INSERT INTO SERVICE_H VALUES('PMS','BOARD_MODIFY_SEARCH','2013-08-12 12:08:32.435000','Search article for modification','Online','',2297,'true ')
INSERT INTO SERVICE_H VALUES('PMS','BOARD_SAVE','2013-08-12 12:08:38.561000','Add new article','Online','',2298,'true ')
INSERT INTO SERVICE_H VALUES('PMS','BTCH_RMV_LOG','2013-07-23 09:49:36.319000','Log file management','Batch','',2132,'true ')
INSERT INTO SERVICE_H VALUES('PMS','BTCH_RMV_LOG','2013-07-23 13:04:33.646000','Log file management','Batch','',2155,'true ')
INSERT INTO SERVICE_H VALUES('PMS','BTCH_RMV_TMP_UP_FILE','2013-08-12 12:09:04.616000','Clear temporary upload files','Batch','3\uc2dc\uac04 \uc804\uc758 \uc784\uc2dc\uc5c5\ub85c\ub4dc \ud30c\uc77c \uc0ad\uc81c',2299,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CHANGE_PASSWORD','2013-09-30 20:45:07.606000','\uc0ac\uc6a9\uc790 \ube44\ubc00\ubc88\ud638 \ubcc0\uacbd','Online','',3228,'false')
INSERT INTO SERVICE_H VALUES('PMS','CHANGE_PASSWORD','2013-09-30 20:46:07.136000','\uc0ac\uc6a9\uc790 \ube44\ubc00\ubc88\ud638 \ubcc0\uacbd','Online','',3229,'false')
INSERT INTO SERVICE_H VALUES('PMS','CHANGE_PASSWORD','2013-09-30 20:47:19.620000','\uc0ac\uc6a9\uc790 \ube44\ubc00\ubc88\ud638 \ubcc0\uacbd','Online','',3230,'false')
INSERT INTO SERVICE_H VALUES('PMS','CHANGE_PASSWORD','2013-09-30 20:47:58.978000','\uc0ac\uc6a9\uc790 \ube44\ubc00\ubc88\ud638 \ubcc0\uacbd','Online','',3231,'false')
INSERT INTO SERVICE_H VALUES('PMS','CHANGE_PASSWORD','2013-09-30 20:48:24.016000','\uc0ac\uc6a9\uc790 \ube44\ubc00\ubc88\ud638 \ubcc0\uacbd','Online','',3232,'false')
INSERT INTO SERVICE_H VALUES('PMS','CHANGE_PASSWORD','2013-09-30 20:50:43.415000','\uc0ac\uc6a9\uc790 \ube44\ubc00\ubc88\ud638 \ubcc0\uacbd','Online','',3233,'false')
INSERT INTO SERVICE_H VALUES('PMS','CHANGE_PASSWORD','2013-09-30 20:51:00.883000','\uc0ac\uc6a9\uc790 \ube44\ubc00\ubc88\ud638 \ubcc0\uacbd','Online','',3234,'false')
INSERT INTO SERVICE_H VALUES('PMS','CHANGE_PASSWORD','2013-09-30 20:51:12.350000','\uc0ac\uc6a9\uc790 \ube44\ubc00\ubc88\ud638 \ubcc0\uacbd','Online','',3235,'false')
INSERT INTO SERVICE_H VALUES('PMS','CHANGE_PASSWORD','2013-09-30 20:51:53.612000','\uc0ac\uc6a9\uc790 \ube44\ubc00\ubc88\ud638 \ubcc0\uacbd','Online','',3236,'false')
INSERT INTO SERVICE_H VALUES('PMS','CHANGE_PASSWORD','2013-09-30 20:55:06.780000','\uc0ac\uc6a9\uc790 \ube44\ubc00\ubc88\ud638 \ubcc0\uacbd','Online','',3237,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CNFS_ATTFILE_DELETE','2013-09-22 02:44:03.182000','Remove attached file','Online','',2959,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CNFS_ATTFILE_DELETE','2013-09-22 02:47:08.974000','Remove attached file','Online','',2960,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CNFS_FILE_DOWNLOAD','2013-09-16 20:31:02.615000','Download attatched file','Online','',2949,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CNFS_LIST_SEARCH','2013-09-23 11:18:08.206000','\ud68c\uc758\ub85d \ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',2998,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CNFS_SAVE','2013-09-22 02:08:32.311000','\ud68c\uc758\ub85d \uc800\uc7a5','Online','',2957,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CNFS_SAVE','2013-09-22 02:13:37.551000','\ud68c\uc758\ub85d \uc800\uc7a5','Online','',2958,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CNFS_SAVE','2013-09-22 04:01:16.050000','\ud68c\uc758\ub85d \uc800\uc7a5','Online','',2963,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CNFS_SAVE','2013-09-22 04:08:47.375000','\ud68c\uc758\ub85d \uc800\uc7a5','Online','',2964,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CNFS_SAVE','2013-09-22 04:09:12.831000','\ud68c\uc758\ub85d \uc800\uc7a5','Online','',2965,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CNFS_SAVE','2013-09-22 04:09:38.268000','\ud68c\uc758\ub85d \uc800\uc7a5','Online','',2966,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CNFS_SAVE','2013-09-22 04:27:21.891000','\ud68c\uc758\ub85d \uc800\uc7a5','Online','',2967,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CNFS_SAVE','2013-09-22 04:27:28.820000','\ud68c\uc758\ub85d \uc800\uc7a5','Online','',2968,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CNFS_SEARCH','2013-09-23 10:42:42.416000','\ud68c\uc758\ub85d \ub0b4\uc6a9 \uc870\ud68c','Online','',2976,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CNFS_SEARCH','2013-09-23 11:17:50.883000','\ud68c\uc758\ub85d \ub0b4\uc6a9 \uc870\ud68c','Online','',2997,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CODE_GROUP_MODIFY','2013-08-12 12:09:14.623000','Code Group Modify','Online','',2300,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CODE_GROUP_SAVE','2013-08-12 12:09:30.440000','Create New Code Group','Online','',2302,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CODE_GROUP_SEARCH','2013-08-12 09:17:40.929000','Code group search','Online','',2268,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CODE_GROUP_SEARCH','2013-08-12 09:19:10.082000','Code group search','Online','',2269,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CODE_GROUP_SEARCH','2013-08-12 11:36:43.995000','Code group search','Online','',2270,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CODE_GROUP_SEARCH','2013-08-12 11:40:00.222000','Code group search','Online','',2272,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CODE_GROUP_SEARCH','2013-08-12 11:43:54.819000','Code group search','Online','',2273,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CODE_GROUP_SEARCH','2013-08-12 12:09:29.019000','Code group search','Online','',2301,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CODE_GROUP_SEARCH','2013-08-12 12:37:19.783000','Code group search','Online','',2323,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CODE_GROUP_SEARCH','2013-08-12 12:38:40.895000','Code group search','Online','',2330,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CODE_LIST_BY_GROUP','2013-08-15 17:05:01.371000','\ucf54\ub4dc \uadf8\ub8f9\uc73c\ub85c \ucf54\ub4dc\ub9ac\uc2a4\ud2b8 \uac80\uc0c9','Online','',2442,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CODE_LIST_BY_GROUP','2013-08-15 17:07:18.530000','\ucf54\ub4dc \uadf8\ub8f9\uc73c\ub85c \ucf54\ub4dc\ub9ac\uc2a4\ud2b8 \uac80\uc0c9','Online','',2443,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CODE_MODIFY','2013-07-22 16:38:10.307000','Code Modify','Online','',2062,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CODE_SAVE','2013-07-22 16:38:36.548000','Code Save','Online','',2063,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CODE_SEARCH','2013-08-12 12:37:03.238000','Code search','Online','',2322,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CODE_SEARCH','2013-08-12 12:37:27.635000','Code search','Online','',2324,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CODE_SEARCH','2013-08-12 12:37:44.260000','Code search','Online','',2325,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CODE_SEARCH','2013-08-12 12:37:59.317000','Code search','Online','',2326,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CODE_SEARCH','2013-08-12 12:38:19.977000','Code search','Online','',2327,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CODE_SEARCH','2013-08-12 12:38:23.591000','Code search','Online','',2328,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CODE_SEARCH','2013-08-12 12:38:34.574000','Code search','Online','',2329,'true ')
INSERT INTO SERVICE_H VALUES('PMS','CODE_SEARCH','2013-08-12 15:56:52.659000','Code search','Online','',2343,'true ')
INSERT INTO SERVICE_H VALUES('PMS','COST_FILE_DOWNLOAD','2013-09-09 12:51:04.246000','\ud30c\uc77c \ub2e4\uc6b4\ub85c\ub4dc','Online','',2861,'true ')
INSERT INTO SERVICE_H VALUES('PMS','COST_LIST_SEARCH','2013-09-05 14:30:43.762000','\ube44\uc6a9\ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',2804,'true ')
INSERT INTO SERVICE_H VALUES('PMS','COST_LIST_SEARCH','2013-09-05 14:53:11.511000','\ube44\uc6a9\ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',2806,'true ')
INSERT INTO SERVICE_H VALUES('PMS','COST_LIST_SEARCH','2013-09-05 14:56:36.050000','\ube44\uc6a9\ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',2809,'true ')
INSERT INTO SERVICE_H VALUES('PMS','COST_LIST_SEARCH','2013-09-05 16:00:31.305000','\ube44\uc6a9\ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',2828,'true ')
INSERT INTO SERVICE_H VALUES('PMS','COST_LIST_SEARCH','2013-09-05 16:11:13.158000','\ube44\uc6a9\ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',2830,'true ')
INSERT INTO SERVICE_H VALUES('PMS','COST_REMAIN_SEARCH','2013-09-06 11:40:11.556000','\ube44\uc6a9\uc794\uc561,\uc9c0\ubd88\ubc29\uc2dd \uc870\ud68c','Online','',2840,'true ')
INSERT INTO SERVICE_H VALUES('PMS','COST_REMAIN_SEARCH','2013-09-06 18:44:00.408000','\ube44\uc6a9\uc794\uc561,\uc9c0\ubd88\ubc29\uc2dd \uc870\ud68c','Online','',2859,'true ')
INSERT INTO SERVICE_H VALUES('PMS','COST_SAVE','2013-09-09 15:22:04.851000','\ube44\uc6a9\ub4f1\ub85d','Online','',2868,'true ')
INSERT INTO SERVICE_H VALUES('PMS','COST_SEARCH','2013-09-06 16:41:06.188000','\ube44\uc6a9\uc0c1\uc138\uc815\ubcf4\uc870\ud68c','Online','',2847,'true ')
INSERT INTO SERVICE_H VALUES('PMS','COST_SEARCH','2013-09-06 16:43:54.278000','\ube44\uc6a9\uc0c1\uc138\uc815\ubcf4\uc870\ud68c','Online','',2848,'true ')
INSERT INTO SERVICE_H VALUES('PMS','DCS_ATTFILE_DELETE','2013-09-25 14:23:35.006000','Remove attached file','Online','',3119,'true ')
INSERT INTO SERVICE_H VALUES('PMS','DCS_ATTFILE_DELETE','2013-09-25 15:49:21.116000','Remove attached file','Online','',3128,'true ')
INSERT INTO SERVICE_H VALUES('PMS','DCS_FILE_DOWNLOAD','2013-09-25 14:16:28.347000','Download attatched file','Online','',3109,'true ')
INSERT INTO SERVICE_H VALUES('PMS','DCS_FILE_DOWNLOAD','2013-09-25 14:16:46.040000','Download attatched file','Online','',3110,'true ')
INSERT INTO SERVICE_H VALUES('PMS','DCS_FILE_DOWNLOAD','2013-09-25 14:16:50.145000','Download attatched file','Online','',3111,'true ')
INSERT INTO SERVICE_H VALUES('PMS','DCS_FILE_DOWNLOAD','2013-09-25 14:17:09.051000','Download attatched file','Online','',3112,'true ')
INSERT INTO SERVICE_H VALUES('PMS','DCS_FILE_DOWNLOAD','2013-09-25 14:19:38.483000','Download attatched file','Online','',3113,'true ')
INSERT INTO SERVICE_H VALUES('PMS','DCS_FILE_DOWNLOAD','2013-09-25 14:21:22.160000','Download attatched file','Online','',3117,'true ')
INSERT INTO SERVICE_H VALUES('PMS','DCS_LIST_SEARCH','2013-09-24 12:21:22.039000','\uc758\uc0ac\uacb0\uc815 \uc694\uccad \ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',3040,'true ')
INSERT INTO SERVICE_H VALUES('PMS','DCS_LIST_SEARCH','2013-09-24 12:22:15.207000','\uc758\uc0ac\uacb0\uc815 \uc694\uccad \ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',3041,'true ')
INSERT INTO SERVICE_H VALUES('PMS','DCS_LIST_SEARCH','2013-09-24 12:22:32.877000','\uc758\uc0ac\uacb0\uc815 \uc694\uccad \ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',3042,'true ')
INSERT INTO SERVICE_H VALUES('PMS','DCS_SAVE','2013-09-26 17:19:35.759000','\uc758\uc0ac\uacb0\uc815 \uc694\uccad \uc800\uc7a5','Online','',3142,'true ')
INSERT INTO SERVICE_H VALUES('PMS','DCS_SAVE','2013-09-26 17:29:17.753000','\uc758\uc0ac\uacb0\uc815 \uc694\uccad \uc800\uc7a5','Online','',3149,'true ')
INSERT INTO SERVICE_H VALUES('PMS','DCS_SEARCH','2013-09-27 11:44:08.416000','\uc758\uc0ac\uacb0\uc815 \uc694\uccad \ub0b4\uc6a9 \uc870\ud68c','Online','',3183,'true ')
INSERT INTO SERVICE_H VALUES('PMS','DCS_SEARCH','2013-09-27 11:45:41.840000','\uc758\uc0ac\uacb0\uc815 \uc694\uccad \ub0b4\uc6a9 \uc870\ud68c','Online','',3186,'true ')
INSERT INTO SERVICE_H VALUES('PMS','DCS_STATUS_SAVE','2013-09-27 10:36:33.384000','\uc758\uc0ac\uacb0\uc815 \uc0c1\ud0dc \ubcc0\uacbd','Online','',3178,'true ')
INSERT INTO SERVICE_H VALUES('PMS','DCS_STATUS_SAVE','2013-09-27 13:00:04.480000','\uc758\uc0ac\uacb0\uc815 \uc0c1\ud0dc \ubcc0\uacbd','Online','',3196,'true ')
INSERT INTO SERVICE_H VALUES('PMS','DCS_STATUS_SAVE','2013-09-27 14:27:32.977000','\uc758\uc0ac\uacb0\uc815 \uc0c1\ud0dc \ubcc0\uacbd','Online','',3200,'true ')
INSERT INTO SERVICE_H VALUES('PMS','DGRE_CODE_LIST','2013-08-12 12:09:42.553000','Degree code list search','Online','\ud559\uc704\ucf54\ub4dc \ub9ac\uc2a4\ud2b8 \uc870\ud68c',2303,'true ')
INSERT INTO SERVICE_H VALUES('PMS','GET_BOARD_MASTER','2013-08-12 12:09:49.943000','Get Board Master Information','Online','',2304,'true ')
INSERT INTO SERVICE_H VALUES('PMS','HYC_MENU_SCH','2013-08-12 12:09:59.176000','\uacc4\uce35\uc801 \uba54\ub274 \ub9ac\uc2a4\ud2b8','Online','',2305,'true ')
INSERT INTO SERVICE_H VALUES('PMS','HYC_MENU_SCH_ALL','2013-08-12 09:06:50.662000','\uacc4\uce35\uc801 \uba54\ub274 \ub9ac\uc2a4\ud2b8','Online','',2267,'true ')
INSERT INTO SERVICE_H VALUES('PMS','IMAGE_CALL','2013-08-12 12:10:06.528000','Image Call Service','Online','',2306,'true ')
INSERT INTO SERVICE_H VALUES('PMS','INIT_PASSWORD','2013-08-12 12:10:18.633000','Initialize password','Online','',2307,'true ')
INSERT INTO SERVICE_H VALUES('PMS','LCTR_MODIFY','2013-07-22 16:44:31.602000','Modify lecturer information','Online','\ucd08\ube59\uad50\uc218\uc758 \uc815\ubcf4 \uc218\uc815',2073,'true ')
INSERT INTO SERVICE_H VALUES('PMS','LOGIN','2013-08-12 12:10:27.128000','\uc2dc\uc2a4\ud15c \ub85c\uadf8\uc778','Online','',2308,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_LIST_SEARCH','2013-08-16 11:21:42.226000','\uacf5\ud1b5 \uba64\ubc84\uc870\ud68c','Online','by ID,NAME => XML',2444,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_LIST_SEARCH','2013-08-16 11:24:21.068000','\uacf5\ud1b5 \uba64\ubc84\uc870\ud68c','Online','by ID,NAME => XML',2445,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_LIST_SEARCH','2013-08-16 11:24:30.441000','\uacf5\ud1b5 \uba64\ubc84\uc870\ud68c','Online','by ID,NAME => XML',2446,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_LIST_SEARCH','2013-08-16 11:24:59.445000','\uacf5\ud1b5 \uba64\ubc84\uc870\ud68c','Online','by ID,NAME => XML',2447,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_LIST_SEARCH','2013-08-16 11:26:08.770000','\uacf5\ud1b5 \uba64\ubc84\uc870\ud68c','Online','by ID,NAME => XML',2448,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_LIST_SEARCH','2013-08-16 11:28:54.855000','\uacf5\ud1b5 \uba64\ubc84\uc870\ud68c','Online','by ID,NAME => XML',2450,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_LIST_SEARCH','2013-08-16 11:32:18.697000','\uacf5\ud1b5 \uba64\ubc84\uc870\ud68c','Online','by ID,NAME => XML',2454,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_LIST_SEARCH','2013-08-16 13:53:18.077000','\uacf5\ud1b5 \uba64\ubc84\uc870\ud68c','Online','by ID,NAME => XML',2456,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_LIST_SEARCH','2013-08-16 14:25:40.387000','\uacf5\ud1b5 \uba64\ubc84\uc870\ud68c','Online','by ID,NAME => XML',2459,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_LIST_SEARCH','2013-08-16 15:53:43.844000','\uacf5\ud1b5 \uba64\ubc84\uc870\ud68c','Online','by ID,NAME => XML',2463,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_MODIFY','2013-07-22 16:46:04.208000','Update member information','Online','\uc9c1\uc6d0\uc815\ubcf4 \ubcc0\uacbd',2076,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_MODIFY','2013-07-22 17:09:32.817000','Update member information','Online','\uc9c1\uc6d0\uc815\ubcf4 \ubcc0\uacbd',2078,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_ORG_SEARCH','2013-08-12 12:10:55.925000','\uba64\ubc84\uc9c1\ucc45\ubd80\uc11c \uc870\ud68c','Online','',2311,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_ORG_SEARCH','2013-08-12 15:56:47.102000','\uba64\ubc84\uc9c1\ucc45\ubd80\uc11c \uc870\ud68c','Online','',2342,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_ORG_SEARCH','2013-08-12 18:05:36.973000','\uba64\ubc84\uc9c1\ucc45\ubd80\uc11c \uc870\ud68c','Online','',2371,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_POP_SEARCH','2013-08-12 12:10:54.740000','Search member for popup info','Online','',2310,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_PROFILE','2013-09-30 13:28:16.502000','\uba64\ubc84 \ud504\ub85c\ud30c\uc77c','Online','',3209,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_PROFILE','2013-09-30 13:29:26.350000','\uba64\ubc84 \ud504\ub85c\ud30c\uc77c','Online','',3210,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_PROFILE','2013-09-30 13:40:24.423000','\uba64\ubc84 \ud504\ub85c\ud30c\uc77c','Online','',3211,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_PROFILE','2013-09-30 13:42:03.196000','\uba64\ubc84 \ud504\ub85c\ud30c\uc77c','Online','',3212,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_PROFILE','2013-09-30 13:55:16.494000','\uba64\ubc84 \ud504\ub85c\ud30c\uc77c','Online','',3216,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_PROFILE','2013-09-30 14:09:14.587000','\uba64\ubc84 \ud504\ub85c\ud30c\uc77c','Online','',3219,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_PROFILE','2013-09-30 14:09:18.976000','\uba64\ubc84 \ud504\ub85c\ud30c\uc77c','Online','',3220,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_PROFILE','2013-09-30 15:43:18.433000','\uba64\ubc84 \ud504\ub85c\ud30c\uc77c','Online','',3223,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_PROFILE','2013-09-30 20:44:45.319000','\uba64\ubc84 \ud504\ub85c\ud30c\uc77c','Online','',3227,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_ROLE_SEARCH','2013-08-12 12:10:53.066000','Member search for role registration','Online','\uc5ed\ud560 \ub4f1\ub85d\uc744 \uc704\ud55c \uba64\ubc84 \uc870\ud68c',2309,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_ROLE_SEARCH','2013-08-12 20:23:11.896000','Member search for role registration','Online','\uc5ed\ud560 \ub4f1\ub85d\uc744 \uc704\ud55c \uba64\ubc84 \uc870\ud68c',2409,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_ROLE_SEARCH','2013-08-12 20:24:25.087000','Member search for role registration','Online','\uc5ed\ud560 \ub4f1\ub85d\uc744 \uc704\ud55c \uba64\ubc84 \uc870\ud68c',2410,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_SAVE','2013-08-12 12:11:07.130000','Add new member information','Online','\uc9c1\uc6d0\uc815\ubcf4 \ucd94\uac00 \ub4f1\ub85d',2312,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_SAVE','2013-08-12 12:11:11.918000','Add new member information','Online','\uc9c1\uc6d0\uc815\ubcf4 \ucd94\uac00 \ub4f1\ub85d',2313,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_SEARCH','2013-07-22 17:12:54.525000','Member Search','Online','Access Member Search',2084,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_SEARCH_CMB','2013-08-08 09:16:57.451000','JSON\uc6a9 \uba64\ubc84 \uc870\ud68c','Online','',2184,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_SEARCH_CMB','2013-08-08 09:45:06.630000','JSON\uc6a9 \uba64\ubc84 \uc870\ud68c','Online','',2193,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_SEARCH_CMB','2013-08-08 09:45:44.320000','JSON\uc6a9 \uba64\ubc84 \uc870\ud68c','Online','',2196,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_SEARCH_CMB','2013-08-08 09:49:32.088000','JSON\uc6a9 \uba64\ubc84 \uc870\ud68c','Online','',2199,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_SEARCH_CMB','2013-08-08 09:49:38.702000','JSON\uc6a9 \uba64\ubc84 \uc870\ud68c','Online','',2200,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MBR_TYPE_LIST','2013-07-22 17:13:35.070000','Member Type Code List','Online','\uba64\ubc84 \ud0c0\uc785 \ucf54\ub4dc \ub9ac\uc2a4\ud2b8 \uc870\ud68c',2085,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MENU_COUNT','2013-08-12 12:12:56.894000','Total Menu Count','Online','',2316,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MENU_DELETE','2013-07-23 09:53:30.500000','Delete Menu','Online','',2135,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MENU_DELETE','2013-07-23 13:09:29.311000','Delete Menu','Online','',2156,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MENU_DELETE','2013-07-23 13:10:17.353000','Delete Menu','Online','',2157,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MENU_DELETE','2013-07-23 13:14:17.662000','Delete Menu','Online','',2158,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MENU_DELETE','2013-07-23 13:14:56.572000','Delete Menu','Online','',2159,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MENU_MODIFY','2013-07-22 17:14:53.632000','Modify menu','Online','',2087,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MENU_ORDER_CHANGE','2013-07-23 09:53:52.340000','Menu order change','Online','',2136,'true ')
INSERT INTO SERVICE_H VALUES('PMS','MENU_SAVE','2013-07-22 17:15:32.351000','Add new menu','Online','Add new menu',2088,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ORGN_DELETE','2013-07-22 17:16:03.145000','Delete organization','Online','It''s not real deletion but disabling.',2089,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ORGN_MODIFY','2013-07-22 17:16:37.325000','Organization Modify','Online','',2090,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ORGN_SAVE','2013-08-12 12:12:17.287000','Organization Save','Online','',2314,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ORGN_SEARCH','2013-07-22 17:17:46.106000','Organization List Search','Online','',2092,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ORGN_SEARCH_LIST','2013-07-22 17:18:32.828000','Searching organization list for select box','Online','',2093,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_BOARD_SEARCH','2013-08-13 22:02:47.295000','\ud504\ub85c\uc81d\ud2b8 \uac8c\uc2dc\ud310 \ub9c8\uc2a4\ud130 ID \uc870\ud68c','Online','',2420,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_BOARD_SEARCH','2013-08-13 22:04:45.916000','\ud504\ub85c\uc81d\ud2b8 \uac8c\uc2dc\ud310 \ub9c8\uc2a4\ud130 ID \uc870\ud68c','Online','',2421,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_BOARD_SEARCH','2013-08-13 22:16:13.940000','\ud504\ub85c\uc81d\ud2b8 \uac8c\uc2dc\ud310 \ub9c8\uc2a4\ud130 ID \uc870\ud68c','Online','',2424,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_DUP_CHK','2013-08-08 15:17:55.057000','\ud504\ub85c\uc81d\ud2b8 ID \uc911\ubcf5 \uccb4\ud06c','Online','\ud504\ub85c\uc81d\ud2b8 ID \uc911\ubcf5 \uccb4\ud06c',2219,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_DUP_CHK','2013-08-08 15:20:24.803000','\ud504\ub85c\uc81d\ud2b8 ID \uc911\ubcf5 \uccb4\ud06c','Online','\ud504\ub85c\uc81d\ud2b8 ID \uc911\ubcf5 \uccb4\ud06c',2220,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_DUP_CHK','2013-08-08 15:20:30.113000','\ud504\ub85c\uc81d\ud2b8 ID \uc911\ubcf5 \uccb4\ud06c','Online','\ud504\ub85c\uc81d\ud2b8 ID \uc911\ubcf5 \uccb4\ud06c',2221,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_LIST_SEARCH','2013-08-13 14:48:37.127000','\ud504\ub85c\uc81d\ud2b8 \ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',2414,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_LIST_SEARCH_POP','2013-08-13 14:49:17.108000','\ud504\ub85c\uc81d\ud2b8 \ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',2415,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_LIST_SEARCH_POP','2013-08-13 14:49:26.915000','\ud504\ub85c\uc81d\ud2b8 \ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',2416,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_LIST_SEARCH_POP','2013-08-13 14:56:16.597000','\ud504\ub85c\uc81d\ud2b8 \ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',2417,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_LIST_SEARCH_POP','2013-08-13 14:56:20.511000','\ud504\ub85c\uc81d\ud2b8 \ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',2418,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_MBR_LST_SCH','2013-08-13 22:16:25.554000','\ud504\ub85c\uc81d\ud2b8 \uba64\ubc84 \ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',2425,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_MBR_SAVE','2013-08-12 19:38:56.106000','\ud504\ub85c\uc81d\ud2b8 \uba64\ubc84 \ub4f1\ub85d,\uc0ad\uc81c','Online','',2397,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_MBR_SAVE','2013-08-12 19:41:17.630000','\ud504\ub85c\uc81d\ud2b8 \uba64\ubc84 \ub4f1\ub85d,\uc0ad\uc81c','Online','',2398,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_MBR_SAVE','2013-08-12 19:42:25.202000','\ud504\ub85c\uc81d\ud2b8 \uba64\ubc84 \ub4f1\ub85d,\uc0ad\uc81c','Online','',2399,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_MBR_SAVE','2013-08-12 19:43:32.857000','\ud504\ub85c\uc81d\ud2b8 \uba64\ubc84 \ub4f1\ub85d,\uc0ad\uc81c','Online','',2401,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_MBR_SAVE','2013-08-12 19:43:42.673000','\ud504\ub85c\uc81d\ud2b8 \uba64\ubc84 \ub4f1\ub85d,\uc0ad\uc81c','Online','',2402,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_MBR_SAVE','2013-08-12 19:55:32.395000','\ud504\ub85c\uc81d\ud2b8 \uba64\ubc84 \ub4f1\ub85d,\uc0ad\uc81c','Online','',2403,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_MBR_SAVE','2013-08-12 19:55:53.674000','\ud504\ub85c\uc81d\ud2b8 \uba64\ubc84 \ub4f1\ub85d,\uc0ad\uc81c','Online','',2404,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_MBR_SAVE','2013-08-12 19:57:31.125000','\ud504\ub85c\uc81d\ud2b8 \uba64\ubc84 \ub4f1\ub85d,\uc0ad\uc81c','Online','',2405,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_MBR_SAVE','2013-08-12 19:58:11.644000','\ud504\ub85c\uc81d\ud2b8 \uba64\ubc84 \ub4f1\ub85d,\uc0ad\uc81c','Online','',2406,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_SAVE','2013-10-04 17:20:10.052000','\ud504\ub85c\uc81d\ud2b8 \uc800\uc7a5','Online','\uc800\uc7a5,\uc218\uc815,\uc0ad\uc81c \uc77c\uad04 \ucc98\ub9ac',3252,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_SAVE','2013-10-04 17:52:13.285000','\ud504\ub85c\uc81d\ud2b8 \uc800\uc7a5','Online','\uc800\uc7a5,\uc218\uc815,\uc0ad\uc81c \uc77c\uad04 \ucc98\ub9ac',3253,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_SCHDL_REMOVE','2013-08-19 15:03:59.050000','\uc2a4\ucf00\uc974 \uc0ad\uc81c','Online','',2536,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_SCHDL_REMOVE','2013-08-19 15:07:02.355000','\uc2a4\ucf00\uc974 \uc0ad\uc81c','Online','',2537,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_SCHDL_REMOVE','2013-08-19 15:20:28.659000','\uc2a4\ucf00\uc974 \uc0ad\uc81c','Online','',2539,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_SCHDL_REMOVE','2013-08-19 15:21:59.546000','\uc2a4\ucf00\uc974 \uc0ad\uc81c','Online','',2540,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_SCHDL_REMOVE','2013-08-19 15:22:15.348000','\uc2a4\ucf00\uc974 \uc0ad\uc81c','Online','',2541,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_SCHDL_SAVE','2013-08-19 15:43:36.582000','\uc2a4\ucf00\uc974 \ub4f1\ub85d,\uc218\uc815','Online','',2543,'true ')
INSERT INTO SERVICE_H VALUES('PMS','PRJ_SEARCH','2013-08-13 22:16:11.784000','\ud504\ub85c\uc81d\ud2b8 \uc0c1\uc138\uc815\ubcf4 \uc870\ud68c','Online','',2423,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ROLE_ACC_LIST_SEARCH','2013-07-22 17:19:40.516000','Search role to regist on access list','Online','Search role to regist on access list',2094,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ROLE_ACC_LIST_SEARCH','2013-07-22 17:20:20.577000','Search role to regist on access list','Online','Search role to regist on access list',2095,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ROLE_CODE_LIST','2013-07-22 17:20:51.106000','Getting Role Code List','Online','\uc5ed\ud560\ucf54\ub4dc \ub9ac\uc2a4\ud2b8 \uc870\ud68c',2096,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ROLE_CODE_LIST','2013-07-22 17:21:02.401000','Getting Role Code List','Online','\uc5ed\ud560\ucf54\ub4dc \ub9ac\uc2a4\ud2b8 \uc870\ud68c',2097,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ROLE_DELETE','2013-07-22 17:21:49.404000','Remove Role and Access List','Online','',2098,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ROLE_MODIFY','2013-07-22 17:22:18.825000','Modify Role','Online','\uc5ed\ud560 \uc815\ubcf4 \uc218\uc815',2099,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ROLE_SAVE','2013-08-12 12:12:38.774000','Role save','Online','\uc5ed\ud560 \uc2e0\uaddc \ub4f1\ub85d',2315,'true ')
INSERT INTO SERVICE_H VALUES('PMS','ROLE_SEARCH','2013-07-22 17:23:47.293000','Role Search','Online','\ubd80\uc11c \ud558\uc704 \uc5ed\ud560 \uac80\uc0c9',2101,'true ')
INSERT INTO SERVICE_H VALUES('PMS','RPT_LIST_SEARCH','2013-09-27 16:31:23.659000','\ubcf4\uace0\uc11c \ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',3207,'true ')
INSERT INTO SERVICE_H VALUES('PMS','RPT_SAVE','2013-09-23 10:46:18.096000','\ubcf4\uace0\uc11c \uc800\uc7a5','Online','',2981,'true ')
INSERT INTO SERVICE_H VALUES('PMS','RPT_SAVE','2013-09-23 10:46:31.651000','\ubcf4\uace0\uc11c \uc800\uc7a5','Online','',2982,'true ')
INSERT INTO SERVICE_H VALUES('PMS','RPT_SAVE','2013-09-23 10:46:45.356000','\ubcf4\uace0\uc11c \uc800\uc7a5','Online','',2983,'true ')
INSERT INTO SERVICE_H VALUES('PMS','RPT_SAVE','2013-09-23 10:48:15.587000','\ubcf4\uace0\uc11c \uc800\uc7a5','Online','',2984,'true ')
INSERT INTO SERVICE_H VALUES('PMS','RPT_SAVE','2013-09-23 10:49:28.256000','\ubcf4\uace0\uc11c \uc800\uc7a5','Online','',2985,'true ')
INSERT INTO SERVICE_H VALUES('PMS','RPT_SAVE','2013-09-23 10:49:38.611000','\ubcf4\uace0\uc11c \uc800\uc7a5','Online','',2986,'true ')
INSERT INTO SERVICE_H VALUES('PMS','RPT_SAVE','2013-09-23 10:49:45.691000','\ubcf4\uace0\uc11c \uc800\uc7a5','Online','',2987,'true ')
INSERT INTO SERVICE_H VALUES('PMS','RPT_SAVE','2013-09-23 11:17:34.263000','\ubcf4\uace0\uc11c \uc800\uc7a5','Online','',2996,'true ')
INSERT INTO SERVICE_H VALUES('PMS','RPT_SEARCH','2013-09-27 16:11:16.976000','\ubcf4\uace0\uc11c \ub0b4\uc6a9 \uc870\ud68c','Online','',3203,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_CMT_REMOVE','2013-08-27 09:49:55.475000','Remove comment of schedule','Online','',2670,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_CMT_SAVE','2013-08-27 09:56:19.707000','Save schedule comment and retrieve the data','Online','',2677,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_CMT_SEARCH','2013-08-27 09:50:43.636000','Search comment list','Online','',2671,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_DTL_SEARCH','2013-08-19 17:47:03.330000','\uc77c\uc815 \uc0c1\uc138 \uc870\ud68c','Online','',2565,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_DTL_SEARCH','2013-08-19 17:47:22.886000','\uc77c\uc815 \uc0c1\uc138 \uc870\ud68c','Online','',2566,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_DTL_SEARCH','2013-08-19 17:49:12.812000','\uc77c\uc815 \uc0c1\uc138 \uc870\ud68c','Online','',2567,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_DTL_SEARCH','2013-08-19 18:21:01.595000','\uc77c\uc815 \uc0c1\uc138 \uc870\ud68c','Online','',2570,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_FILE_DOWNLOAD','2013-08-27 14:42:16.764000','\uc77c\uc815 \uc0c1\uc138 \uc870\ud68c','Online','',2690,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_FILE_DOWNLOAD','2013-08-27 14:42:30.174000','\uc77c\uc815 \uc0c1\uc138 \uc870\ud68c','Online','',2691,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_FILE_DOWNLOAD','2013-08-27 14:42:47.664000','\ud30c\uc77c \ub2e4\uc6b4\ub85c\ub4dc','Online','',2692,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_FILE_LST_SCH','2013-08-26 20:16:53.157000','Search attatched file list','Online','',2651,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_FILE_LST_SCH','2013-08-26 20:17:33.950000','Search attatched file list','Online','',2652,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_FILE_LST_SCH','2013-08-26 20:18:52.854000','Search attatched file list','Online','',2653,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_FILE_LST_SCH','2013-08-26 20:26:49.341000','Search attatched file list','Online','',2661,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_FILE_LST_SCH','2013-08-26 20:40:01.828000','Search attatched file list','Online','',2662,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_FILE_LST_SCH','2013-08-26 20:59:14.247000','Search attatched file list','Online','',2665,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_FILE_REMOVE','2013-08-27 09:48:36.458000','Save board comment and retrieve the data','Online','',2668,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_FILE_REMOVE','2013-08-27 09:49:00.807000','Remove attatched file of schedule','Online','',2669,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_FILE_REMOVE','2013-08-27 09:51:48.989000','Remove attatched file of schedule','Online','',2673,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_FILE_REMOVE','2013-08-27 09:52:26.189000','Remove attatched file of schedule','Online','',2674,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_FILE_REMOVE','2013-08-27 09:57:03.946000','Remove attatched file of schedule','Online','',2679,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_FILE_REMOVE','2013-08-27 09:57:11.405000','Remove attatched file of schedule','Online','',2680,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_FILE_SAVE','2013-08-27 09:55:44.706000','Save board comment and retrieve the data','Online','',2675,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_FILE_SAVE','2013-08-27 09:56:08.873000','Save schedule file and retrieve the data','Online','',2676,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_FILE_SAVE','2013-08-27 09:56:59.007000','Save schedule file and retrieve the data','Online','',2678,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_FILE_SAVE','2013-08-27 09:57:53.758000','Save schedule file and retrieve the data','Online','',2681,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_FILE_SAVE','2013-08-27 13:59:44.607000','Save schedule file and retrieve the data','Online','',2687,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_FILE_SAVE','2013-08-27 13:59:58.846000','Save schedule file and retrieve the data','Online','',2688,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_FILE_SAVE','2013-08-27 14:00:09.606000','Save schedule file and retrieve the data','Online','',2689,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_LIST_SEARCH','2013-10-11 15:51:35.037000','\uc0ac\uc6a9\uc790 \uac1c\uc778 \uc77c\uc815 \ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',3284,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_LIST_SEARCH','2013-10-11 15:51:43.298000','\uc0ac\uc6a9\uc790 \uac1c\uc778 \uc77c\uc815 \ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',3285,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SCHDL_LIST_SEARCH','2013-10-11 15:52:06.182000','\uc0ac\uc6a9\uc790 \uac1c\uc778 \uc77c\uc815 \ub9ac\uc2a4\ud2b8 \uc870\ud68c','Online','',3286,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SUB_MENU_SCH','2013-07-22 17:24:16.839000','\ub85c\uadf8\uc778 \uc720\uc800 \ud558\uc704\uba54\ub274 \uc870\ud68c','Online','',2102,'true ')
INSERT INTO SERVICE_H VALUES('PMS','SUB_MENU_SCH_M','2013-07-22 17:24:52.080000','\uba54\ub274\uad00\ub9ac \ud558\uc704\uba54\ub274 \uc870\ud68c','Online','',2103,'true ')
INSERT INTO SERVICE_H VALUES('PMS','TMP_FILE_UPLOAD','2013-08-19 13:29:13.300000','Temp file upload','Online','',2532,'true ')
INSERT INTO SERVICE_H VALUES('PMS','TMP_FILE_UPLOAD','2013-08-19 13:30:10.938000','Temp file upload','Online','',2533,'true ')
INSERT INTO SERVICE_H VALUES('PMS','TMP_FILE_UPLOAD','2013-08-19 13:40:13.923000','Temp file upload','Online','',2534,'true ')
INSERT INTO SERVICE_H VALUES('PMS','TMP_FILE_UPLOAD','2013-08-19 14:45:38.043000','Temp file upload','Online','',2535,'true ')
INSERT INTO SERVICE_H VALUES('PMS','TOP_MENU_SCH','2013-07-22 17:26:01.796000','\ub85c\uadf8\uc778 \uc720\uc800 \ucd5c\uc0c1\uc704 \uba54\ub274 \uc870\ud68c','Online','',2106,'true ')
INSERT INTO SERVICE_H VALUES('PMS','TOP_MENU_SCH_M','2013-07-22 17:26:24.385000','\uba54\ub274\uad00\ub9ac \ucd5c\uc0c1\uc704 \uba54\ub274 \uc870\ud68c','Online','',2107,'true ')
INSERT INTO SERVICE_H VALUES('PMS','TOP_MENU_SCH_M','2013-07-22 17:26:34.354000','\uba54\ub274\uad00\ub9ac \ucd5c\uc0c1\uc704 \uba54\ub274 \uc870\ud68c','Online','',2108,'true ')
INSERT INTO SERVICE_H VALUES('PMS','USR_SCHDL_REMOVE','2013-08-19 15:50:14.438000','\uc2a4\ucf00\uc974 \uc0ad\uc81c','Online','',2545,'true ')
INSERT INTO SERVICE_H VALUES('PMS','USR_SCHDL_SAVE','2013-09-09 15:32:45.970000','\uc2a4\ucf00\uc974 \ub4f1\ub85d,\uc218\uc815','Online','',2870,'true ')
INSERT INTO SERVICE_H VALUES('PMS','USR_SCHDL_SAVE','2013-09-09 15:48:02.983000','\uc2a4\ucf00\uc974 \ub4f1\ub85d,\uc218\uc815','Online','',2872,'true ')
INSERT INTO SERVICE_H VALUES('PMS','USR_SCHDL_SAVE','2013-09-09 15:52:57.580000','\uc2a4\ucf00\uc974 \ub4f1\ub85d,\uc218\uc815','Online','',2873,'true ')
INSERT INTO SERVICE_H VALUES('PMS','USR_SCHDL_SAVE','2013-09-09 15:53:16.964000','\uc2a4\ucf00\uc974 \ub4f1\ub85d,\uc218\uc815','Online','',2874,'true ')
INSERT INTO SERVICE_H VALUES('PMS','USR_SCHDL_SAVE','2013-09-09 15:55:00.912000','\uc2a4\ucf00\uc974 \ub4f1\ub85d,\uc218\uc815','Online','',2875,'true ')
INSERT INTO SERVICE_H VALUES('PMS','USR_SCHDL_SAVE','2013-09-09 15:56:22.336000','\uc2a4\ucf00\uc974 \ub4f1\ub85d,\uc218\uc815','Online','',2876,'true ')
INSERT INTO SERVICE_H VALUES('PMS','USR_SCHDL_SAVE','2013-09-09 15:57:23.177000','\uc2a4\ucf00\uc974 \ub4f1\ub85d,\uc218\uc815','Online','',2877,'true ')
INSERT INTO SERVICE_H VALUES('PMS','USR_SCHDL_SAVE','2013-09-09 15:58:32.134000','\uc2a4\ucf00\uc974 \ub4f1\ub85d,\uc218\uc815','Online','',2878,'true ')
INSERT INTO SERVICE_H VALUES('PMS','USR_SCHDL_SAVE','2013-09-09 16:03:31.534000','\uc2a4\ucf00\uc974 \ub4f1\ub85d,\uc218\uc815','Online','',2879,'true ')
INSERT INTO SERVICE_H VALUES('PMS','USR_SCHDL_SAVE','2013-09-09 16:04:04.926000','\uc2a4\ucf00\uc974 \ub4f1\ub85d,\uc218\uc815','Online','',2880,'true ')
INSERT INTO SERVICE_H VALUES('PMS','USR_SCHDL_SAVE','2013-09-09 16:04:27.394000','\uc2a4\ucf00\uc974 \ub4f1\ub85d,\uc218\uc815','Online','',2881,'true ')
INSERT INTO SERVICE_H VALUES('PMS','USR_SCHDL_SAVE','2013-09-09 16:18:55.626000','\uc2a4\ucf00\uc974 \ub4f1\ub85d,\uc218\uc815','Online','',2882,'true ')
INSERT INTO SERVICE_H VALUES('PMS','USR_SCHDL_SAVE','2013-09-09 16:34:14.312000','\uc2a4\ucf00\uc974 \ub4f1\ub85d,\uc218\uc815','Online','',2883,'true ')
INSERT INTO SERVICE_H VALUES('PMS','USR_SCHDL_SEARCH','2013-09-09 15:21:59.079000','\uc0ac\uc6a9\uc790 \ubcc4 \uc2a4\ucf00\uc974 \uc870\ud68c','Online','',2867,'true ')
INSERT INTO SERVICE_H VALUES('PMS','USR_SCHDL_SEARCH','2013-09-09 17:10:49.266000','\uc0ac\uc6a9\uc790 \ubcc4 \uc2a4\ucf00\uc974 \uc870\ud68c','Online','',2884,'true ')
INSERT INTO SERVICE_H VALUES('PMS','USR_SCHEDULE_SEARCH','2013-08-13 22:17:46.387000','\uc0ac\uc6a9\uc790 \uc2a4\ucf00\uc974 \uc870\ud68c','Online','\ud504\ub85c\uc81d\ud2b8 \ubcc4, \ubd80\ubaa8 ID \ubcc4 \uc870\ud68c.',2426,'true ')
INSERT INTO SERVICE_H VALUES('ReadByLengthField','COMPARISON_TEST','2013-08-19 09:28:16.348000','','General','',2522,'true ')
INSERT INTO SERVICE_H VALUES('ReadByLengthField','COMPARISON_TEST','2013-08-19 09:29:13.566000','','General','',2523,'true ')
INSERT INTO SERVICE_H VALUES('ReadByLengthField','COMPARISON_TEST','2013-08-19 09:29:49.854000','','General','',2524,'true ')
INSERT INTO SERVICE_H VALUES('ReadByLengthField','COMPARISON_TEST','2013-08-19 10:31:55.792000','','General','',2525,'true ')
INSERT INTO SERVICE_H VALUES('ReadByLengthField','COMPARISON_TEST','2013-08-19 10:32:04.951000','','General','',2526,'true ')
INSERT INTO SERVICE_H VALUES('ReadByLengthField','COMPARISON_TEST','2013-08-19 10:55:27.197000','','General','',2527,'true ')
INSERT INTO SERVICE_H VALUES('ReadByLengthField','COMPARISON_TEST','2013-08-19 10:55:42.215000','','General','',2528,'true ')
INSERT INTO SERVICE_H VALUES('ReadByLengthField','COMPARISON_TEST','2013-08-19 12:03:20.126000','','General','',2529,'true ')
INSERT INTO SERVICE_H VALUES('ReadByLengthField','COMPARISON_TEST','2013-08-19 12:03:30.108000','','General','',2530,'true ')
INSERT INTO SERVICE_H VALUES('ReadByLengthField','COMPARISON_TEST','2013-08-19 12:03:38.653000','','General','',2531,'true ')
INSERT INTO SERVICE_H VALUES('ReadByLengthField','PERF_TEST','2013-07-21 12:26:28.213000','\uc131\ub2a5 \ud14c\uc2a4\ud2b8','Online','',2022,'true ')
INSERT INTO SERVICE_H VALUES('ReadByLengthField','SCRIPT_TEST','2013-07-12 14:40:02.184000','','General','',2010,'false')
INSERT INTO SERVICE_H VALUES('ReadByLengthField','SCRIPT_TEST','2013-07-12 14:40:14.145000','','General','',2011,'true ')
INSERT INTO SERVICE_H VALUES('ReadByLengthField','SCRIPT_TEST','2013-07-12 14:40:25.116000','','General','',2012,'false')
INSERT INTO SERVICE_H VALUES('ReadByLengthField','SCRIPT_TEST','2013-07-12 14:40:36.050000','','General','',2013,'true ')
INSERT INTO USER_ACCESS_LIST VALUES('PMS','kykim')
INSERT INTO PLUGIN_LIST VALUES('ReadByLengthField','SYNC_CON_POOL')
INSERT INTO PLUGIN_LIST VALUES('ReadByLengthField','ASYNC_CON_POOL')
INSERT INTO PLUGIN_LIST VALUES('FlexibleTest','NABSYS_DB')
INSERT INTO PLUGIN_LIST VALUES('ReadByLengthField','NIST_DB')
INSERT INTO PLUGIN_LIST VALUES('PMS','PMS_DB')
INSERT INTO SQL_STORAGE VALUES('FlexibleTest','nist',1,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('FlexibleTest','nist.aaa',2,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('FlexibleTest','nist.aaa.ABD',3,'DOCUMENT','false','SELECT',445)
INSERT INTO SQL_STORAGE VALUES('FlexibleTest','nist.aaa.aa',3,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('FlexibleTest','nist.aaa.aa.adsf',4,'DOCUMENT','false','SELECT SELECT',447)
INSERT INTO SQL_STORAGE VALUES('FlexibleTest','nist.aaa.aa.asdf',4,'DOCUMENT','false','SELECT',448)
INSERT INTO SQL_STORAGE VALUES('FlexibleTest','nist.aaa.aa.sdfsdf',4,'DOCUMENT','false','SELECT',449)
INSERT INTO SQL_STORAGE VALUES('FlexibleTest','nist.aaa.test',3,'DOCUMENT','false','SELECT',446)
INSERT INTO SQL_STORAGE VALUES('FlexibleTest','nist.test',2,'DOCUMENT','false','\u000d\u000a\u000d\u000aSELECT',444)
INSERT INTO SQL_STORAGE VALUES('FlexibleTest','test',1,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('FlexibleTest','test.adfsde',2,'DOCUMENT','false','SELECT',450)
INSERT INTO SQL_STORAGE VALUES('PMS','pms',1,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board',2,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board.delete',3,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board.delete.board_comment_d_01',4,'DOCUMENT','true ','DELETE \u000d\u000a  FROM BOARD_COMMENT\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a<dynamic parameter=":SEQ" operator="!=" value="null">\u000d\u000a   AND SEQ = :SEQ\u000d\u000a</dynamic>',829)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board.delete.board_d_01',4,'DOCUMENT','true ','DELETE FROM BOARD\u000d\u000aWHERE BOARD_ID = :BOARD_ID',830)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board.delete.board_file_d_01',4,'DOCUMENT','true ','DELETE FROM BOARD_FILE\u000d\u000aWHERE BOARD_ID = :BOARD_ID\u000d\u000a<dynamic parameter=":SEQ" operator="!=" value="null">\u000d\u000a  AND SEQ = :SEQ\u000d\u000a</dynamic>',831)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board.insert',3,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board.insert.board_comment_i_01',4,'DOCUMENT','true ','<dynamic parameter=":SEQ" operator="==" value="null">\u000d\u000aINSERT INTO BOARD_COMMENT\u000d\u000a(BOARD_ID, SEQ, CONTENT, MEMBER_ID, RGST_DTTM, MDF_DTTM)\u000d\u000aSELECT :BOARD_ID                            AS BOARD_ID, \u000d\u000a       IF(MAX(SEQ) IS NULL , 0, MAX(SEQ)+1) AS SEQ, \u000d\u000a       REPLACE(REPLACE(REPLACE(:CONTENT, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"'') AS CONTENT, \u000d\u000a       :LOGIN_MEMBER                        AS MEMBER_ID, \u000d\u000a       CURRENT_TIMESTAMP                    AS RGST_DTTM, \u000d\u000a       CURRENT_TIMESTAMP                    AS MDF_DTTM\u000d\u000a  FROM BOARD_COMMENT\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SEQ" operator="!=" value="null">\u000d\u000aUPDATE BOARD_COMMENT\u000d\u000a   SET CONTENT = REPLACE(REPLACE(REPLACE(:CONTENT, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), \u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a   AND SEQ = :SEQ\u000d\u000a</dynamic>\u000d\u000a',2646)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board.insert.board_file_i_01',4,'DOCUMENT','true ','<dynamic parameter=":BOARD_ID" operator="==" value="null">\u000d\u000aINSERT INTO BOARD_FILE\u000d\u000a(BOARD_ID, SEQ, CONTENT, FILE_NAME, SIZE)\u000d\u000aSELECT F.BOARD_ID,\u000d\u000a       F.SEQ,\u000d\u000a       U.CONTENT,\u000d\u000a       U.FILE_NAME,\u000d\u000a       U.SIZE\u000d\u000a  FROM (SELECT :TMP_BOARD_ID AS BOARD_ID,\u000d\u000a                IF(MAX(F.SEQ) IS NULL , 0, MAX(F.SEQ)+1) AS SEQ,\u000d\u000a                :TMP_FILE_UP_ID AS ID\u000d\u000a                FROM BOARD_FILE F \u000d\u000a          WHERE F.BOARD_ID = :TMP_BOARD_ID) AS F,\u000d\u000a       TMP_UPLOAD_FILE U\u000d\u000a WHERE F.ID = U.ID\u000d\u000a   AND U.ID = :TMP_FILE_UP_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":BOARD_ID" operator="!=" value="null">\u000d\u000aINSERT INTO BOARD_FILE\u000d\u000a(BOARD_ID, SEQ, CONTENT, FILE_NAME, SIZE)\u000d\u000aSELECT F.BOARD_ID,\u000d\u000a       F.SEQ,\u000d\u000a       U.CONTENT,\u000d\u000a       U.FILE_NAME,\u000d\u000a       U.SIZE\u000d\u000a  FROM (SELECT :BOARD_ID AS BOARD_ID,\u000d\u000a                IF(MAX(F.SEQ) IS NULL , 0, MAX(F.SEQ)+1) AS SEQ,\u000d\u000a                :TMP_FILE_UP_ID AS ID\u000d\u000a                FROM BOARD_FILE F \u000d\u000a          WHERE F.BOARD_ID = :BOARD_ID) AS F,\u000d\u000a       TMP_UPLOAD_FILE U\u000d\u000a WHERE F.ID = U.ID\u000d\u000a   AND U.ID = :TMP_FILE_UP_ID\u000d\u000a</dynamic>',833)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board.insert.board_i_01',4,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.23\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new article on board\u000d\u000a*/\u000d\u000a<dynamic parameter=":BOARD_ID" operator="==" value="null">\u000d\u000aINSERT INTO BOARD\u000d\u000a(\u000d\u000aBOARD_ID, AUTHOR, BOARD_MASTER_ID, CONTENT, TITLE, REVIEW_CNT, RGST_DTTM, MDF_DTTM\u000d\u000a)\u000d\u000aVALUES\u000d\u000a(\u000d\u000a:TMP_BOARD_ID, :LOGIN_MEMBER, :BOARD_MASTER_ID, REPLACE(REPLACE(:CONTENT, ''\r\n'', ''\\r\\n''), ''\"'', ''\\"''), :TITLE, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP\u000d\u000a)\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":BOARD_ID" operator="!=" value="null">\u000d\u000aUPDATE BOARD \u000d\u000a   SET TITLE = :TITLE,\u000d\u000a       CONTENT = REPLACE(REPLACE(:CONTENT, ''\r\n'', ''\\r\\n''), ''\"'', ''\\"''),\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a</dynamic>',834)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board.insert.board_master_i_01',4,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.27\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate board master.\u000d\u000a*/\u000d\u000aINSERT INTO BOARD_MASTER \u000d\u000a                        (\u000d\u000a                        ID, \u000d\u000a                        TITLE,\u000d\u000a                        MAX_ROW_NUM,\u000d\u000a                        USE_REPLY,\u000d\u000a                        USE_FILE_ATMT,\u000d\u000a                        BOARD_WIDTH,\u000d\u000a                        USE_YN,\u000d\u000a                        RGST_DTTM,\u000d\u000a                        MDF_DTTM\u000d\u000a                        ) \u000d\u000a                        VALUES\u000d\u000a                        (\u000d\u000a                        SEQ(''BOARD_MASTER''), \u000d\u000a                        :TITLE, \u000d\u000a                        :MAX_ROW_NUM,\u000d\u000a                        :USE_REPLY, \u000d\u000a                        :USE_FILE_ATMT,\u000d\u000a                        :BOARD_WIDTH, \u000d\u000a                        :USE_YN, \u000d\u000a                        CURRENT_TIMESTAMP,\u000d\u000a                        CURRENT_TIMESTAMP\u000d\u000a                        )',835)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board.insert.board_master_i_02',4,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.08.12\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate board master for project.\u000d\u000a*/\u000d\u000aINSERT INTO BOARD_MASTER \u000d\u000a                        (\u000d\u000a                        ID, \u000d\u000a                        TITLE,\u000d\u000a                        MAX_ROW_NUM,\u000d\u000a                        USE_REPLY,\u000d\u000a                        USE_FILE_ATMT,\u000d\u000a                        BOARD_WIDTH,\u000d\u000a                        USE_YN,\u000d\u000a                        RGST_DTTM,\u000d\u000a                        MDF_DTTM\u000d\u000a                        ) \u000d\u000a                        VALUES\u000d\u000a                        (\u000d\u000a                        :BOARD_ID, \u000d\u000a                        ''\ud504\ub85c\uc81d\ud2b8 \uacf5\uc9c0\uc0ac\ud56d'',\u000d\u000a                        10,\u000d\u000a                        ''Y'', \u000d\u000a                        ''Y'',\u000d\u000a                        730, \u000d\u000a                        ''Y'', \u000d\u000a                        CURRENT_TIMESTAMP,\u000d\u000a                        CURRENT_TIMESTAMP\u000d\u000a                        )',2411)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board.select',3,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board.select.board_comment_r_01',4,'DOCUMENT','true ','SELECT COMMENT.SEQ, \u000d\u000a       MEMBER.NAME AS MEMBER_NAME,\u000d\u000a       MEMBER.PHOTO,\u000d\u000a       COMMENT.CONTENT, \u000d\u000a       COMMENT.MEMBER_ID, \u000d\u000a       DATE_FORMAT(COMMENT.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %r'') MDF_DTTM\u000d\u000a  FROM BOARD_COMMENT COMMENT\u000d\u000a       LEFT OUTER JOIN VW_MEMBER MEMBER ON MEMBER.ID   = COMMENT.MEMBER_ID\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a ORDER BY COMMENT.MDF_DTTM ASC',836)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board.select.board_file_r_01',4,'DOCUMENT','true ','SELECT FILE_NAME, \u000d\u000a       SEQ, \u000d\u000a       IF(SIZE >= 1024*1024, CONCAT(FLOOR(SIZE/(1024*1024)),''MB''), IF(SIZE>=1024, CONCAT(FLOOR(SIZE/1024), ''KB''), CONCAT(SIZE, ''B''))) AS SIZE\u000d\u000a  FROM BOARD_FILE\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a ORDER BY SEQ ASC',837)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board.select.board_file_r_02',4,'DOCUMENT','true ','SELECT CONTENT, FILE_NAME FROM BOARD_FILE\u000d\u000aWHERE BOARD_ID = :BOARD_ID\u000d\u000a  AND SEQ = :SEQ',838)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board.select.board_master_r_01',4,'DOCUMENT','true ','<dynamic parameter=":EXC_ORDER" operator="==" value="null">\u000d\u000aSELECT COUNT(*) TOTAL_CNT, :page AS page,\u000d\u000a        ''1'' AS EXC_ORDER\u000d\u000a   FROM BOARD_MASTER\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXC_ORDER" operator="!=" value="null">\u000d\u000aSELECT ID,\u000d\u000a       TITLE,\u000d\u000a       MAX_ROW_NUM,\u000d\u000a       USE_REPLY,\u000d\u000a       USE_FILE_ATMT,\u000d\u000a       BOARD_WIDTH,\u000d\u000a       USE_YN,\u000d\u000a       RGST_DTTM,\u000d\u000a       MDF_DTTM\u000d\u000a  FROM BOARD_MASTER\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="TITLE">\u000d\u000aTITLE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="USE_YN">\u000d\u000aUSE_YN\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp\u000d\u000a</dynamic>',839)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board.select.board_master_r_02',4,'DOCUMENT','true ','SELECT *\u000d\u000aFROM BOARD_MASTER\u000d\u000aWHERE ID = :BOARD_MASTER_ID',840)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board.select.board_master_r_03',4,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.08.12\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate board master ID for project.\u000d\u000a*/\u000d\u000aSELECT SEQ(''BOARD_MASTER'') BOARD_ID',2349)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board.select.board_r_01',4,'DOCUMENT','true ','SELECT BOARD_ID, \u000d\u000a       TITLE, \u000d\u000a       CONCAT(CONCAT(BOARD.AUTHOR, '':''), MEMBER.NAME) AS AUTHOR,\u000d\u000a       DATE_FORMAT(BOARD.RGST_DTTM,''%Y-%m-%d'') AS RGST_DTTM,\u000d\u000a       REVIEW_CNT\u000d\u000a  FROM BOARD, MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND MEMBER.ID = BOARD.AUTHOR\u000d\u000a   AND BOARD_MASTER_ID = :BOARD_MASTER_ID\u000d\u000a<dynamic parameter=":sSearch" operator="!=" value="">\u000d\u000a   AND (BOARD.TITLE   LIKE CONCAT(CONCAT(''%'', :sSearch), ''%'') OR\u000d\u000a       MEMBER.NAME   LIKE CONCAT(CONCAT(''%'', :sSearch), ''%'') OR\u000d\u000a       BOARD.CONTENT LIKE CONCAT(CONCAT(''%'', :sSearch), ''%''))\u000d\u000a</dynamic>\u000d\u000aORDER BY \u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a      BOARD.RGST_DTTM DESC\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a       BOARD.TITLE\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a       MEMBER.NAME\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a       BOARD.RGST_DTTM \u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a       ASC\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a       DESC\u000d\u000a    </dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength\u000d\u000a',3204)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board.select.board_r_02',4,'DOCUMENT','true ','SELECT BOARD.TITLE, \u000d\u000a       IF(MEMBER.ID IS NULL, '''', MEMBER.NAME) AUTHOR,\u000d\u000a       BOARD.AUTHOR ID,\u000d\u000a       DATE_FORMAT(BOARD.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %r'') RGST_DTTM,\u000d\u000a       DATE_FORMAT(BOARD.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %r'') MDF_DTTM,\u000d\u000a       BOARD.CONTENT\u000d\u000a  FROM BOARD\u000d\u000a       LEFT OUTER JOIN MEMBER   ON MEMBER.ID   = BOARD.AUTHOR\u000d\u000a WHERE BOARD_ID = :BOARD_ID',2116)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board.select.board_r_03',4,'DOCUMENT','true ','SELECT TITLE, CONTENT\u000d\u000a  FROM BOARD\u000d\u000a WHERE BOARD_ID = :BOARD_ID',843)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board.select.board_r_04',4,'DOCUMENT','true ','<dynamic parameter=":BOARD_ID" operator="==" value="null">\u000d\u000aSELECT SEQ(''BOARD'') AS TMP_BOARD_ID FROM DUAL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":BOARD_ID" operator="!=" value="null">\u000d\u000aSELECT '''' TMP FROM DUAL WHERE 1=2\u000d\u000a</dynamic>',1245)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board.update',3,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board.update.board_master_u_01',4,'DOCUMENT','true ','UPDATE BOARD_MASTER\u000d\u000a   SET\u000d\u000a<dynamic parameter=":TITLE" operator="!=" value="null">\u000d\u000a       TITLE = :TITLE,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MAX_ROW_NUM" operator="!=" value="null">\u000d\u000a       MAX_ROW_NUM = :MAX_ROW_NUM,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_REPLY" operator="!=" value="null">\u000d\u000a       USE_REPLY = :USE_REPLY,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_FILE_ATMT" operator="!=" value="null">\u000d\u000a       USE_FILE_ATMT = :USE_FILE_ATMT,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":BOARD_WIDTH" operator="!=" value="null">\u000d\u000a       BOARD_WIDTH = :BOARD_WIDTH,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_YN" operator="!=" value="null">\u000d\u000a       USE_YN = :USE_YN,\u000d\u000a</dynamic>\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE ID = :ID',845)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board.update.board_u_01',4,'DOCUMENT','true ','UPDATE BOARD AS U, (SELECT REVIEW_CNT FROM BOARD WHERE BOARD_ID = :BOARD_ID) AS O\u000d\u000a   SET U.REVIEW_CNT = O.REVIEW_CNT + 1\u000d\u000a WHERE U.BOARD_ID = :BOARD_ID;',846)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.board.update.board_u_02',4,'DOCUMENT','true ','UPDATE BOARD\u000d\u000a   SET TITLE    = :TITLE,\u000d\u000a       CONTENT  = :CONTENT,\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE BOARD_ID = :BOARD_ID',847)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.common',2,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.common.delete',3,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.common.delete.tmp_upload_file_d_01',4,'DOCUMENT','true ','DELETE FROM TMP_UPLOAD_FILE\u000d\u000aWHERE RGST_DTTM <= DATE_ADD(NOW(), INTERVAL - :INTERVAL HOUR) ',848)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.common.insert',3,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.common.insert.tmp_file_upload_i_01',4,'DOCUMENT','true ','INSERT INTO TMP_UPLOAD_FILE\u000d\u000a(ID, CONTENT, FILE_NAME, SIZE, RGST_DTTM)\u000d\u000aVALUES(:TMP_FILE_UP_ID, :CONTENT, :CONTENT_FILE_NAME, :CONTENT_FILE_SIZE, CURRENT_TIMESTAMP)\u000d\u000a',849)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.common.select',3,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.common.select.comm_r_01',4,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Common image call query\u000d\u000a*/\u000d\u000a\u000d\u000a<dynamic parameter=":TABLE" operator="==" value="MENU">\u000d\u000aSELECT IMAGE \u000d\u000a  FROM MENU\u000d\u000a WHERE ID = :ID \u000d\u000a</dynamic>',850)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.common.select.comm_r_02',4,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Getting role code list\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT ID, NAME \u000d\u000a  FROM CODE \u000d\u000a WHERE CODE_GROUP_ID = ''RC001''\u000d\u000a',1721)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.common.select.comm_r_03',4,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Getting member type code list\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT ID, NAME \u000d\u000a  FROM CODE \u000d\u000a WHERE CODE_GROUP_ID = ''ET001''',852)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.common.select.comm_r_04',4,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.10\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Getting degree code list\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT ID, NAME \u000d\u000a  FROM CODE \u000d\u000a WHERE CODE_GROUP_ID = ''DG001''',853)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.common.select.comm_r_05',4,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.14\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Getting access level code list\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT ID, NAME \u000d\u000a  FROM CODE \u000d\u000a WHERE CODE_GROUP_ID = ''AR001''',854)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.common.select.comm_r_06',4,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) under organization\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID,\u000d\u000a       MEMBER.NAME, \u000d\u000a       ACCESS_MEMBER.MAIL,\u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE,\u000d\u000a       MEMBER.PHONE, \u000d\u000a       MEMBER.MOBILE_PHONE, \u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, '''', MEMBER.JOIN_DATE) AS JOIN_DATE,\u000d\u000a       IF(MEMBER.RETIRED_DATE IS NULL, '''', MEMBER.RETIRED_DATE) AS RETIRED_DATE,\u000d\u000a       EP_CODE.NAME AS MEMBER_TYPE, \u000d\u000a       MEMBER.GOOGLE_ID, \u000d\u000a       MEMBER.RGST_DTTM,\u000d\u000a       MEMBER.MDF_DTTM\u000d\u000a  FROM MEMBER, \u000d\u000a       CODE AS EP_CODE, \u000d\u000a       ACCESS_MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.MEMBER_TYPE = EP_CODE.ID \u000d\u000a   AND ACCESS_MEMBER.ID       = MEMBER.ID\u000d\u000a   AND MEMBER.USE_YN          = ''Y''\u000d\u000a   AND ACCESS_MEMBER.USE_YN   = ''Y''\u000d\u000a   AND (RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000a   AND (MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a       OR MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%''))\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMEMBER.NAME ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMEMBER.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMEMBER.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACCESS_MEMBER.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACCESS_MEMBER.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMEMBER.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMEMBER.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="JOIN_DATE">\u000d\u000aMEMBER.JOIN_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RETIRED_DATE">\u000d\u000aMEMBER.RETIRED_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aEP_CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp',2452)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.common.select.tmp_file_upload_r_01',4,'DOCUMENT','false','SELECT SEQ(''TMP_UPLOAD_FILE'') AS TMP_FILE_UP_ID\u000d\u000a  FROM DUAL',855)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.common.update',3,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.common.update.free_fk',4,'DOCUMENT','false','SET FOREIGN_KEY_CHECKS=0',856)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.common.update.set_fk',4,'DOCUMENT','false','SET FOREIGN_KEY_CHECKS=1',857)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal',2,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.code',3,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.code.insert',4,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.code.insert.code_c_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new code.\u000d\u000a*/\u000d\u000aINSERT INTO CODE \u000d\u000a                (\u000d\u000a                ID, \u000d\u000a                CODE_GROUP_ID, \u000d\u000a                NAME, \u000d\u000a                EXP_NOTE, \u000d\u000a                UPDATABLE_YN,\u000d\u000a                RGST_DTTM, \u000d\u000a                RGST_MEMBER_ID, \u000d\u000a                MDF_DTTM, \u000d\u000a                MDF_MEMBER_ID\u000d\u000a                ) \u000d\u000a                VALUES(\u000d\u000a                :ID, \u000d\u000a                :GROUP_ID,\u000d\u000a                :NAME, \u000d\u000a                :EXP_NOTE, \u000d\u000a                ''Y'',\u000d\u000a                CURRENT_TIMESTAMP, -- :CURRENT_TIMESTAMP\u000d\u000a                :LOGIN_MEMBER, \u000d\u000a                CURRENT_TIMESTAMP, \u000d\u000a                :LOGIN_MEMBER\u000d\u000a                )',1722)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.code.insert.codegroup_c_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new code group.\u000d\u000a*/\u000d\u000aINSERT INTO CODE_GROUP \u000d\u000a                      (\u000d\u000a                      ID, \u000d\u000a                      NAME, \u000d\u000a                      EXP_NOTE, \u000d\u000a                      UPDATABLE_YN,\u000d\u000a                      RGST_DTTM, \u000d\u000a                      RGST_MEMBER_ID,\u000d\u000a                      MDF_DTTM, \u000d\u000a                      MDF_MEMBER_ID \u000d\u000a                      ) \u000d\u000a                      VALUES(\u000d\u000a                      :ID,\u000d\u000a                      :NAME, \u000d\u000a                      :EXP_NOTE, /*:EXP_NOTE*/ \u000d\u000a                      ''Y'',\u000d\u000a                      CURRENT_TIMESTAMP,\u000d\u000a                      :LOGIN_MEMBER, \u000d\u000a                      CURRENT_TIMESTAMP, \u000d\u000a                      :LOGIN_MEMBER\u000d\u000a                      )',858)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.code.select',4,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.code.select.code_s_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code list count \u000d\u000a*/\u000d\u000aSELECT COUNT(*) TOTAL_CNT, :page AS page \u000d\u000aFROM CODE, CODE_GROUP\u000d\u000a WHERE 1=1\u000d\u000a   AND CODE.CODE_GROUP_ID = CODE_GROUP.ID \u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_ID">\u000d\u000a   AND CODE_GROUP.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_NAME">\u000d\u000a   AND CODE_GROUP.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_EXP_NOTE">\u000d\u000a   AND CODE_GROUP.EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND CODE.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND CODE.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="EXP_NOTE">\u000d\u000a   AND CODE.EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>',860)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.code.select.code_s_02',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code list search\u000d\u000a*/\u000d\u000aSELECT ID, \u000d\u000a       NAME, \u000d\u000a       EXP_NOTE, \u000d\u000a       UPDATABLE_YN \u000d\u000a  FROM CODE \u000d\u000a WHERE CODE_GROUP_ID = :CODE_GROUP_ID\u000d\u000a ORDER BY ID',861)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.code.select.code_s_03',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code keyword search\u000d\u000a*/\u000d\u000aSELECT CODE.CODE_GROUP_ID GROUP_ID, \u000d\u000a       CODE_GROUP.NAME GROUP_NAME, \u000d\u000a       CODE_GROUP.EXP_NOTE GROUP_EXP_NOTE, \u000d\u000a       CODE.ID, CODE.NAME, \u000d\u000a       CODE.EXP_NOTE, \u000d\u000a       CODE.UPDATABLE_YN, \u000d\u000a       CODE.RGST_DTTM, \u000d\u000a       CODE.RGST_MEMBER_ID, \u000d\u000a       CODE.MDF_DTTM, \u000d\u000a       CODE.MDF_MEMBER_ID\u000d\u000aFROM CODE, CODE_GROUP\u000d\u000a WHERE 1=1\u000d\u000a   AND CODE.CODE_GROUP_ID = CODE_GROUP.ID \u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_ID">\u000d\u000a   AND CODE_GROUP.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_NAME">\u000d\u000a   AND CODE_GROUP.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_EXP_NOTE">\u000d\u000a   AND CODE_GROUP.EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND CODE.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND CODE.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="EXP_NOTE">\u000d\u000a   AND CODE.EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="GROUP_ID">\u000d\u000aCODE_GROUP.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="GROUP_NAME">\u000d\u000aCODE_GROUP.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="GROUP_EXP_NOTE">\u000d\u000aCODE_GROUP.EXP_NOTE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aCODE.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aCODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXP_NOTE">\u000d\u000aCODE.EXP_NOTE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="UPDATABLE_YN">\u000d\u000aCODE.UPDATABLE_YN\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_MEMBER_ID">\u000d\u000aCODE.RGST_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aCODE.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_MEMBER_ID">\u000d\u000aCODE.MDF_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aCODE.MDF_DTTM \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp',2319)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.code.select.codegroup_s_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code group duplication check\u000d\u000a*/\u000d\u000aSELECT COUNT(*) TOTAL_CNT, :page AS page \u000d\u000a  FROM CODE_GROUP\u000d\u000a WHERE 1=1\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="EXP_NOTE">\u000d\u000a   AND EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>',863)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.code.select.codegroup_s_02',5,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code group list search\u000d\u000a*/\u000d\u000aSELECT ID, \u000d\u000a       NAME, \u000d\u000a       EXP_NOTE, \u000d\u000a       UPDATABLE_YN \u000d\u000a  FROM CODE_GROUP\u000d\u000a ORDER BY ID\u000d\u000a',1638)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.code.select.codegroup_s_03',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code group keyword search\u000d\u000a*/\u000d\u000aSELECT ID, \u000d\u000a       NAME, \u000d\u000a       EXP_NOTE, \u000d\u000a       UPDATABLE_YN, \u000d\u000a       RGST_MEMBER_ID, \u000d\u000a       RGST_DTTM, \u000d\u000a       MDF_MEMBER_ID, \u000d\u000a       MDF_DTTM\u000d\u000a  FROM CODE_GROUP \u000d\u000a WHERE 1=1\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_ID">\u000d\u000a   AND ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_NAME">\u000d\u000a   AND NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_EXP_NOTE">\u000d\u000a   AND EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY \u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aNAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXP_NOTE">\u000d\u000aEXP_NOTE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="UPDATABLE_YN">\u000d\u000aUPDATABLE_YN\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_MEMBER_ID">\u000d\u000aRGST_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aRGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_MEMBER_ID">\u000d\u000aMDF_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aMDF_DTTM \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp',2321)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.code.update',4,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.code.update.code_u_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code update\u000d\u000a*/\u000d\u000aUPDATE CODE\u000d\u000a   SET \u000d\u000a<dynamic parameter=":NAME" operator="!=" value="">\u000d\u000a       NAME          = :NAME,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXP_NOTE" operator="!=" value="">\u000d\u000a       EXP_NOTE      = :EXP_NOTE,\u000d\u000a</dynamic>\u000d\u000a       MDF_DTTM      = CURRENT_TIMESTAMP,\u000d\u000a       MDF_MEMBER_ID = :LOGIN_MEMBER\u000d\u000a WHERE ID = :ID\u000d\u000a   AND UPDATABLE_YN <> ''N''',866)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.code.update.codegroup_u_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code group update\u000d\u000a*/\u000d\u000aUPDATE CODE_GROUP\u000d\u000a   SET \u000d\u000a<dynamic parameter=":NAME" operator="!=" value="">\u000d\u000a       NAME          = :NAME,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXP_NOTE" operator="!=" value="">\u000d\u000a       EXP_NOTE      = :EXP_NOTE,\u000d\u000a</dynamic>\u000d\u000a       MDF_DTTM      = CURRENT_TIMESTAMP,\u000d\u000a       MDF_MEMBER_ID = :LOGIN_MEMBER\u000d\u000a WHERE ID = :ID\u000d\u000a   AND UPDATABLE_YN <> ''N''',867)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member',3,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.delete',4,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.delete.access_list_d_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.16\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Remove access list, Role \uc744 \uc0ad\uc81c\ud560 \ub54c \uac19\uc774 \uc0ad\uc81c Case->ROLE_MEMBER_ID, \u000d\u000a                  Access List\ub9cc \uc0ad\uc81c->MEMBER_ID\u000d\u000a*/\u000d\u000aDELETE FROM ACCESS_LIST\u000d\u000aWHERE 1=1\u000d\u000a<dynamic parameter=":MENU_ID" operator="!=" value="null">\u000d\u000a  AND MENU_ID         = :MENU_ID\u000d\u000a</dynamic>\u000d\u000a  AND ORGANIZATION_ID = :ORGANIZATION_ID\u000d\u000a<dynamic parameter=":ROLE_MEMBER_ID" operator="!=" value="null">\u000d\u000a  AND ROLE_MEMBER_ID  = :ROLE_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MEMBER_ID" operator="!=" value="null">\u000d\u000a  AND ROLE_MEMBER_ID  = :MEMBER_ID\u000d\u000a</dynamic>',876)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.insert',4,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.insert.access_list_c_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.15\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Create new access list\u000d\u000a*/\u000d\u000a\u000d\u000aINSERT INTO ACCESS_LIST\u000d\u000a            (MENU_ID,\u000d\u000a             ORGANIZATION_ID,\u000d\u000a             ROLE_MEMBER_ID,\u000d\u000a             ACCESS_LEVEL)\u000d\u000aSELECT MENU.ID AS MENU_ID, :ORGANIZATION_ID, :ROLE_MEMBER_ID, :ACCESS_LEVEL\u000d\u000a  FROM \u000d\u000a       (SELECT MENU.ID, LEVEL, NAME, IF(MENU.LINK_VALUE IS NULL OR MENU.LINK_VALUE = '''', ''Y'', ''N'') AS ISFOLDER\u000d\u000a          FROM(\u000d\u000a               SELECT @id := MENU_HIERARCHY() AS ID, \u000d\u000a                      @level AS LEVEL\u000d\u000a                 FROM (\u000d\u000a                       SELECT @start_with := :MENU_ID, \u000d\u000a                              @id := @start_with,\u000d\u000a                              @level := 0\u000d\u000a                       )VARS, MENU\u000d\u000a                 WHERE @id IS NOT NULL\u000d\u000a              ) HIERARCHY\u000d\u000a               JOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000a       )MENU\u000d\u000a       LEFT OUTER JOIN \u000d\u000a       ACCESS_LIST\u000d\u000a       ON MENU.ID = ACCESS_LIST.MENU_ID\u000d\u000a       AND ACCESS_LIST.ORGANIZATION_ID = :ORGANIZATION_ID\u000d\u000a       AND ACCESS_LIST.ROLE_MEMBER_ID  = :ROLE_MEMBER_ID\u000d\u000aWHERE 1=1\u000d\u000a  AND MENU.ISFOLDER = ''N''\u000d\u000a  AND ACCESS_LIST.MENU_ID IS NULL',868)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.insert.access_log_c_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.27\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate access log.\u000d\u000a*/\u000d\u000aINSERT INTO ACCESS_LOG \u000d\u000a                      (\u000d\u000a                      MEMBER_ID, \u000d\u000a                      SEQ, \u000d\u000a                      ACCESS_DTTM, \u000d\u000a                      ACCESS_IP, \u000d\u000a                      ACCESS_PAGE\u000d\u000a                      ) \u000d\u000a                      VALUES\u000d\u000a                      ( \u000d\u000a                      :MEMBER_ID, \u000d\u000a                      SEQ(''ACCESS_LOG''),\u000d\u000a                      CURRENT_TIMESTAMP, \u000d\u000a                      :ACCESS_IP, \u000d\u000a                      :ACCESS_PAGE\u000d\u000a                      )',869)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.insert.access_member_c_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new access member.\u000d\u000a*/\u000d\u000a\u000d\u000aINSERT INTO ACCESS_MEMBER \u000d\u000a                        (\u000d\u000a                        ID, \u000d\u000a                        PWD, \u000d\u000a                        MEMBER_TYPE,\u000d\u000a                        MAIL, \u000d\u000a                        EXPIRE_DATE, \u000d\u000a                        RGST_DTTM,\u000d\u000a                        MDF_DTTM,\u000d\u000a                        USE_YN\u000d\u000a                        )\u000d\u000a                        VALUES\u000d\u000a                        (\u000d\u000a                        :ID, \u000d\u000a                        MD5(''new1234!''),\u000d\u000a                        :MEMBER_TYPE,\u000d\u000a                        :MAIL, \u000d\u000a<dynamic parameter=":EXPIRE_DATE" operator="==" value="">\u000d\u000a                        DATE_ADD(SYSDATE(), INTERVAL 90 DAY), \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXPIRE_DATE" operator="!=" value="">\u000d\u000a                        STR_TO_DATE(:EXPIRE_DATE, ''%Y-%m-%d''), \u000d\u000a</dynamic>\u000d\u000a                        CURRENT_TIMESTAMP,\u000d\u000a                        CURRENT_TIMESTAMP,\u000d\u000a                        ''Y''\u000d\u000a                        )',870)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.insert.member_c_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new member.\u000d\u000a*/\u000d\u000aINSERT INTO MEMBER \u000d\u000a\u0009\u0009\u0009\u0009(\u000d\u000a\u0009\u0009\u0009\u0009ID, \u000d\u000a\u0009\u0009\u0009\u0009NAME, \u000d\u000a\u0009\u0009\u0009\u0009PHONE, \u000d\u000a\u0009\u0009\u0009\u0009MOBILE_PHONE, \u000d\u000a<dynamic parameter=":PHOTO" operator="!=" value="null">\u000d\u000a\u0009\u0009\u0009\u0009PHOTO, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":JOIN_DATE" operator="!=" value="">\u000d\u000a\u0009\u0009\u0009\u0009JOIN_DATE, \u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009RETIRED_DATE, \u000d\u000a\u0009\u0009\u0009\u0009GOOGLE_ID, \u000d\u000a<dynamic parameter=":GOOGLE_PW" operator="!=" value="">\u000d\u000a\u0009\u0009\u0009\u0009GOOGLE_PW, \u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009RGST_DTTM, \u000d\u000a\u0009\u0009\u0009\u0009MDF_DTTM, \u000d\u000a\u0009\u0009\u0009\u0009USE_YN\u000d\u000a\u0009\u0009\u0009\u0009) \u000d\u000a\u0009\u0009\u0009\u0009VALUES(\u000d\u000a\u0009\u0009\u0009\u0009:ID, \u000d\u000a\u0009\u0009\u0009\u0009:NAME, \u000d\u000a\u0009\u0009\u0009\u0009:PHONE, \u000d\u000a\u0009\u0009\u0009\u0009:MOBILE_PHONE, \u000d\u000a<dynamic parameter=":PHOTO" operator="!=" value="null">\u000d\u000a\u0009\u0009\u0009\u0009:PHOTO, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":JOIN_DATE" operator="!=" value="">\u000d\u000a\u0009\u0009\u0009\u0009STR_TO_DATE(:JOIN_DATE, ''%Y-%m-%d''), \u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009NULL, \u000d\u000a\u0009\u0009\u0009\u0009:GOOGLE_ID, \u000d\u000a<dynamic parameter=":GOOGLE_PW" operator="!=" value="">\u000d\u000a                HEX(AES_ENCRYPT(:GOOGLE_PW, MD5(''#!%''))),\u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009CURRENT_TIMESTAMP,\u000d\u000a\u0009\u0009\u0009\u0009CURRENT_TIMESTAMP,\u000d\u000a\u0009\u0009\u0009\u0009''Y''\u000d\u000a\u0009\u0009\u0009\u0009)',2438)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.insert.organization_c_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new organization.\u000d\u000a*/\u000d\u000aINSERT INTO ORGANIZATION \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009(\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009ID, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009PARENT_ID, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009NAME, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009RGST_DTTM, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009MDF_DTTM, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009USE_YN\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009) \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009VALUES(\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009:ID,\u000d\u000a<dynamic parameter=":PARENT_ID" operator="==" value="">\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009:ID, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PARENT_ID" operator="!=" value="">\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009:PARENT_ID, \u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009:NAME, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009CURRENT_TIMESTAMP, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009CURRENT_TIMESTAMP, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009''Y''\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009)',875)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.insert.role_c_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.08\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new role.\u000d\u000a*/\u000d\u000a\u000d\u000aINSERT INTO ROLE (ORGANIZATION_ID,\u000d\u000a                  MEMBER_ID,\u000d\u000a                  ROLE_CODE,\u000d\u000a                  RGST_DTTM,\u000d\u000a                  MDF_DTTM,\u000d\u000a                  USE_YN)\u000d\u000a          VALUES (:ORGANIZATION_ID,\u000d\u000a                  :MEMBER_ID,\u000d\u000a                  :ROLE_CODE,\u000d\u000a                  CURRENT_TIMESTAMP, \u000d\u000a                  CURRENT_TIMESTAMP, \u000d\u000a                  ''Y'')',874)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.select',4,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.select.access_r_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search access members of a menu\u000d\u000a*/\u000d\u000aSELECT MENU.NAME                  AS MENU_NAME,\u000d\u000a       MENU.ID                    AS MENU_ID,\u000d\u000a       ORGANIZATION.NAME          AS ORGANIZATION_NAME,\u000d\u000a       ORGANIZATION.ID            AS ORGANIZATION_ID,\u000d\u000a       ACCESS_LIST.ROLE_MEMBER_ID AS MEMBER_ID,\u000d\u000a       MEMBER.NAME                AS MEMBER_NAME,\u000d\u000a       CODE_RC.NAME               AS ROLE_NAME,\u000d\u000a       CODE_LV.NAME               AS ACCESS_LEVEL\u000d\u000a  FROM ACCESS_LIST, \u000d\u000a       ORGANIZATION, \u000d\u000a       ROLE,\u000d\u000a       MEMBER, \u000d\u000a       CODE CODE_LV, \u000d\u000a       CODE CODE_RC, \u000d\u000a       (SELECT MENU.ID, LEVEL, NAME, IF(MENU.LINK_VALUE IS NULL OR MENU.LINK_VALUE = '''', ''Y'', ''N'') AS ISFOLDER\u000d\u000a          FROM(\u000d\u000a               SELECT @id := MENU_HIERARCHY() AS ID, \u000d\u000a                      @level AS LEVEL\u000d\u000a                 FROM (\u000d\u000a                       SELECT @start_with := :MENU_ID, \u000d\u000a                              @id := @start_with,\u000d\u000a                              @level := 0\u000d\u000a                       )VARS, MENU\u000d\u000a                 WHERE @id IS NOT NULL\u000d\u000a              ) HIERARCHY\u000d\u000a               JOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000a       )MENU\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_LIST.ORGANIZATION_ID = ROLE.ORGANIZATION_ID\u000d\u000a   AND ACCESS_LIST.ROLE_MEMBER_ID  = ROLE.MEMBER_ID\u000d\u000a   AND ACCESS_LIST.MENU_ID         = MENU.ID\u000d\u000a   AND ROLE.ORGANIZATION_ID        = ORGANIZATION.ID\u000d\u000a   AND ROLE.MEMBER_ID              = MEMBER.ID\u000d\u000a   AND CODE_LV.ID                  = ACCESS_LIST.ACCESS_LEVEL\u000d\u000a   AND CODE_RC.ID                  = ROLE.ROLE_CODE\u000d\u000a   AND ORGANIZATION.USE_YN         = ''Y''\u000d\u000a   AND ROLE.USE_YN                 = ''Y''\u000d\u000a   AND MEMBER.USE_YN               = ''Y''\u000d\u000a   AND MENU.ISFOLDER               = ''N''\u000d\u000a   AND (MEMBER.RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000a<dynamic parameter=":query" operator="!=" value="">\u000d\u000a<dynamic parameter=":qtype" operator="==" value="ORGANIZATION_NAME">\u000d\u000a   AND ORGANIZATION.NAME LIKE CONCAT(CONCAT(''%'', :query), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":qtype" operator="==" value="MEMBER_ID">\u000d\u000a   AND ACCESS_LIST.ROLE_MEMBER_ID LIKE CONCAT(CONCAT(''%'', :query), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":qtype" operator="==" value="MEMBER_NAME">\u000d\u000a   AND MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :query), ''%'')\u000d\u000a</dynamic>\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMENU.NAME DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MENU_NAME">\u000d\u000aMENU.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ORGANIZATION_NAME">\u000d\u000aORGANIZATION.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_ID">\u000d\u000aACCESS_LIST.ROLE_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_NAME">\u000d\u000aMEMBER.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ROLE_NAME">\u000d\u000aCODE_RC.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ACCESS_LEVEL">\u000d\u000aCODE_LV.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp',877)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.select.access_r_02',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search access members of a menu\u000d\u000a*/\u000d\u000aSELECT COUNT(*) TOTAL_CNT, :page AS page\u000d\u000a  FROM ACCESS_LIST, \u000d\u000a       ORGANIZATION, \u000d\u000a       ROLE, \u000d\u000a       MEMBER, \u000d\u000a       CODE CODE_LV, \u000d\u000a       CODE CODE_RC,\u000d\u000a       (SELECT MENU.ID, LEVEL, NAME, IF(MENU.LINK_VALUE IS NULL OR MENU.LINK_VALUE = '''', ''Y'', ''N'') AS ISFOLDER\u000d\u000a          FROM(\u000d\u000a               SELECT @id := MENU_HIERARCHY() AS ID, \u000d\u000a                      @level AS LEVEL\u000d\u000a                 FROM (\u000d\u000a                       SELECT @start_with := :MENU_ID, \u000d\u000a                              @id := @start_with,\u000d\u000a                              @level := 0\u000d\u000a                       )VARS, MENU\u000d\u000a                 WHERE @id IS NOT NULL\u000d\u000a              ) HIERARCHY\u000d\u000a               JOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000a       )MENU\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_LIST.ORGANIZATION_ID = ROLE.ORGANIZATION_ID\u000d\u000a   AND ACCESS_LIST.ROLE_MEMBER_ID  = ROLE.MEMBER_ID\u000d\u000a   AND ACCESS_LIST.MENU_ID         = MENU.ID\u000d\u000a   AND ROLE.ORGANIZATION_ID        = ORGANIZATION.ID\u000d\u000a   AND ROLE.MEMBER_ID              = MEMBER.ID\u000d\u000a   AND CODE_LV.ID                  = ACCESS_LIST.ACCESS_LEVEL\u000d\u000a   AND CODE_RC.ID                  = ROLE.ROLE_CODE\u000d\u000a   AND ORGANIZATION.USE_YN         = ''Y''\u000d\u000a   AND ROLE.USE_YN                 = ''Y''\u000d\u000a   AND MEMBER.USE_YN               = ''Y''\u000d\u000a   AND MENU.ISFOLDER               = ''N''\u000d\u000a   AND (MEMBER.RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000a<dynamic parameter=":query" operator="!=" value="">\u000d\u000a<dynamic parameter=":qtype" operator="==" value="ORGANIZATION_NAME">\u000d\u000a   AND ORGANIZATION.NAME LIKE CONCAT(CONCAT(''%'', :query), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":qtype" operator="==" value="MEMBER_ID">\u000d\u000a   AND ACCESS_LIST.ROLE_MEMBER_ID LIKE CONCAT(CONCAT(''%'', :query), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":qtype" operator="==" value="MEMBER_NAME">\u000d\u000a   AND MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :query), ''%'')\u000d\u000a</dynamic>\u000d\u000a</dynamic>',878)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.select.member_r_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member for login\u000d\u000a*/\u000d\u000a<dynamic parameter=":EXC_ORDER" operator="==" value="null">\u000d\u000a SELECT ACCESS_MEMBER.MEMBER_TYPE, \u000d\u000a        MEMBER.NAME,\u000d\u000a        IF(MEMBER.ID IS NOT NULL,''Y'', ''N'') AS REG_INFO,\u000d\u000a        DATE_FORMAT(CURRENT_TIMESTAMP, ''%Y%m%d%k%i%s'') LOGIN_TIME,\u000d\u000a        ''1'' AS EXC_ORDER\u000d\u000a   FROM ACCESS_MEMBER\u000d\u000a        LEFT OUTER JOIN\u000d\u000a\u0009MEMBER\u000d\u000a\u0009ON MEMBER.ID = ACCESS_MEMBER.ID \u000d\u000a  WHERE 1=1\u000d\u000a    AND ACCESS_MEMBER.ID = :ID\u000d\u000a    AND ACCESS_MEMBER.PWD = MD5(:PWD)\u000d\u000a    AND ACCESS_MEMBER.USE_YN = ''Y''\u000d\u000a    AND ACCESS_MEMBER.EXPIRE_DATE >= CURRENT_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXC_ORDER" operator="!=" value="null">\u000d\u000aSELECT IF(COUNT(*) > 0, ''Y'', ''N'') AS ACCESS_YN\u000d\u000a  FROM ACCESS_LIST, ROLE\u000d\u000a WHERE ROLE.MEMBER_ID = ACCESS_LIST.ROLE_MEMBER_ID\u000d\u000a   AND ROLE.ORGANIZATION_ID = ACCESS_LIST.ORGANIZATION_ID\u000d\u000a   AND ACCESS_LIST.ROLE_MEMBER_ID = :ID\u000d\u000a   AND ROLE.USE_YN = ''Y''\u000d\u000a</dynamic>',3244)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.select.member_r_02',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) under organization\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID,\u000d\u000a       MEMBER.NAME, \u000d\u000a       ACCESS_MEMBER.MAIL,\u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE,\u000d\u000a       MEMBER.PHONE, \u000d\u000a       MEMBER.MOBILE_PHONE, \u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, '''', MEMBER.JOIN_DATE) AS JOIN_DATE,\u000d\u000a       IF(MEMBER.RETIRED_DATE IS NULL, '''', MEMBER.RETIRED_DATE) AS RETIRED_DATE,\u000d\u000a       EP_CODE.NAME AS MEMBER_TYPE, \u000d\u000a       MEMBER.GOOGLE_ID, \u000d\u000a       MEMBER.RGST_DTTM,\u000d\u000a       MEMBER.MDF_DTTM\u000d\u000a  FROM MEMBER, \u000d\u000a       CODE AS EP_CODE, \u000d\u000a       ACCESS_MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.MEMBER_TYPE = EP_CODE.ID \u000d\u000a   AND ACCESS_MEMBER.ID       = MEMBER.ID\u000d\u000a   AND MEMBER.USE_YN          = ''Y''\u000d\u000a   AND ACCESS_MEMBER.USE_YN   = ''Y''\u000d\u000a   AND (RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMEMBER.MDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMEMBER.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMEMBER.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACCESS_MEMBER.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACCESS_MEMBER.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMEMBER.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMEMBER.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="JOIN_DATE">\u000d\u000aMEMBER.JOIN_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RETIRED_DATE">\u000d\u000aMEMBER.RETIRED_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aEP_CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="GOOGLE_ID">\u000d\u000aMEMBER.GOOGLE_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aMEMBER.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aMEMBER.MDF_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp',2408)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.select.member_r_03',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) under organization\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT COUNT(*) TOTAL_CNT, :page AS page \u000d\u000a  FROM MEMBER, ACCESS_MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.ID       = MEMBER.ID\u000d\u000a   AND MEMBER.USE_YN          = ''Y''\u000d\u000a   AND ACCESS_MEMBER.USE_YN   = ''Y''\u000d\u000a   AND (RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>',882)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.select.member_r_04',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search access member for management\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT IF(MEMBER.NAME IS NOT NULL, ''Y'', ''N'') AS RGST_YN,\u000d\u000a       ACCESS_MEMBER.ID, \u000d\u000a       IF(MEMBER.NAME IS NOT NULL, MEMBER.NAME, ''<![CDATA[<font color=red>\ub4f1\ub85d\uc548\ub428</font>]]>'') AS NAME,\u000d\u000a       CODE.NAME AS MEMBER_TYPE, \u000d\u000a       ACCESS_MEMBER.MAIL, \u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE, \u000d\u000a       ACCESS_MEMBER.RGST_DTTM, \u000d\u000a       ACCESS_MEMBER.MDF_DTTM \u000d\u000a  FROM ACCESS_MEMBER\u000d\u000a       LEFT OUTER JOIN MEMBER \u000d\u000a       ON MEMBER.ID = ACCESS_MEMBER.ID  \u000d\u000a       AND MEMBER.USE_YN = ''Y''\u000d\u000a       , CODE\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_ID">\u000d\u000a       , (SELECT DISTINCT ROLE.MEMBER_ID AS MEMBER_ID\u000d\u000a            FROM (SELECT ORGANIZATION.ID, NAME\u000d\u000a                    FROM(SELECT @id := ORGANIZATION_HIERARCHY() AS ID, \u000d\u000a                                 @level AS LEVEL\u000d\u000a                           FROM (SELECT @start_with := :KEYWORD, \u000d\u000a                                        @id := @start_with,\u000d\u000a                                        @level := 0\u000d\u000a                                 )VARS, MENU\u000d\u000a                           WHERE @id IS NOT NULL\u000d\u000a                         ) HIERARCHY\u000d\u000a                    JOIN ORGANIZATION ON ORGANIZATION.ID = HIERARCHY.ID\u000d\u000a                   WHERE ORGANIZATION.USE_YN = ''Y'') ORGN, ROLE\u000d\u000a           WHERE ORGN.ID = ROLE.ORGANIZATION_ID\u000d\u000a             AND ROLE.USE_YN = ''Y'') ORGN \u000d\u000a</dynamic>\u000d\u000a WHERE CODE.ID = ACCESS_MEMBER.MEMBER_TYPE\u000d\u000a   AND ACCESS_MEMBER.USE_YN = ''Y''\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND ACCESS_MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_ID">\u000d\u000a   AND ORGN.MEMBER_ID = ACCESS_MEMBER.ID\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aACCESS_MEMBER.MDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aACCESS_MEMBER.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aNAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aCODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACCESS_MEMBER.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACCESS_MEMBER.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aACCESS_MEMBER.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aACCESS_MEMBER.MDF_DTTM \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp\u000d\u000a',2117)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.select.member_r_05',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search access member for management\u000d\u000a*/\u000d\u000aSELECT COUNT(*) TOTAL_CNT, :page AS page \u000d\u000a  FROM ACCESS_MEMBER\u000d\u000a       LEFT OUTER JOIN MEMBER \u000d\u000a       ON MEMBER.ID = ACCESS_MEMBER.ID  \u000d\u000a       AND MEMBER.USE_YN = ''Y''\u000d\u000a       , CODE\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_ID">\u000d\u000a       , (SELECT DISTINCT ROLE.MEMBER_ID AS MEMBER_ID\u000d\u000a            FROM (SELECT ORGANIZATION.ID, NAME\u000d\u000a                    FROM(SELECT @id := ORGANIZATION_HIERARCHY() AS ID, \u000d\u000a                                 @level AS LEVEL\u000d\u000a                           FROM (SELECT @start_with := :KEYWORD, \u000d\u000a                                        @id := @start_with,\u000d\u000a                                        @level := 0\u000d\u000a                                 )VARS, MENU\u000d\u000a                           WHERE @id IS NOT NULL\u000d\u000a                         ) HIERARCHY\u000d\u000a                    JOIN ORGANIZATION ON ORGANIZATION.ID = HIERARCHY.ID\u000d\u000a                   WHERE ORGANIZATION.USE_YN = ''Y'') ORGN, ROLE\u000d\u000a           WHERE ORGN.ID = ROLE.ORGANIZATION_ID\u000d\u000a             AND ROLE.USE_YN = ''Y'') ORGN \u000d\u000a</dynamic>\u000d\u000a WHERE CODE.ID = ACCESS_MEMBER.MEMBER_TYPE\u000d\u000a   AND ACCESS_MEMBER.USE_YN = ''Y''\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND ACCESS_MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_ID">\u000d\u000a   AND ORGN.MEMBER_ID = ACCESS_MEMBER.ID\u000d\u000a</dynamic>',2114)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.select.member_r_06',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member for management\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID, \u000d\u000a       MEMBER.NAME, \u000d\u000a       CODE.NAME AS MEMBER_TYPE,\u000d\u000a       ACCESS_MEMBER.MAIL,\u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE,\u000d\u000a       MEMBER.PHONE,\u000d\u000a       MEMBER.MOBILE_PHONE,\u000d\u000a       MEMBER.PHOTO,\u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, '''', MEMBER.JOIN_DATE) AS JOIN_DATE,\u000d\u000a       IF(MEMBER.RETIRED_DATE IS NULL, '''', MEMBER.RETIRED_DATE) AS RETIRED_DATE,\u000d\u000a       MEMBER.GOOGLE_ID,\u000d\u000a       MEMBER.RGST_DTTM,\u000d\u000a       MEMBER.MDF_DTTM\u000d\u000a  FROM MEMBER, ACCESS_MEMBER, CODE\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.ID = MEMBER.ID\u000d\u000a   AND CODE.ID = ACCESS_MEMBER.MEMBER_TYPE\u000d\u000a   AND ACCESS_MEMBER.USE_YN = ''Y''\u000d\u000a   AND MEMBER.USE_YN = ''Y''\u000d\u000a   AND MEMBER.ID = :ID',885)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.select.member_r_07',5,'DOCUMENT','true ','SELECT NAME, MAIL, PHONE, MOBILE_PHONE, PHOTO\u000d\u000a  FROM VW_MEMBER\u000d\u000a WHERE ID = :ID',886)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.select.member_r_08',5,'DOCUMENT','true ','/*\u000d\u000a\uba64\ubc84\uc758 \uc815\ubcf4\uc640 \uc9c1\ucc45 \ubd80\uc11c \uc815\ubcf4 \ub9ac\uc2a4\ud2b8 \uc870\ud68c\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID, \u000d\u000a       MEMBER.NAME, \u000d\u000a       CODE.NAME ROLE_NAME, \u000d\u000a       ORGANIZATION.ID ORGANIZATION_ID, \u000d\u000a       ORGANIZATION.NAME ORGANIZATION_NAME\u000d\u000a  FROM MEMBER, ROLE, ORGANIZATION, CODE\u000d\u000a WHERE 1=1\u000d\u000a   AND MEMBER.ID = ROLE.MEMBER_ID\u000d\u000a   AND ORGANIZATION.ID = ROLE.ORGANIZATION_ID\u000d\u000a   AND ROLE.ROLE_CODE = CODE.ID\u000d\u000a   AND MEMBER.USE_YN = ''Y''\u000d\u000a   AND ROLE.USE_YN = ''Y''\u000d\u000a   AND ORGANIZATION.USE_YN = ''Y''\u000d\u000a   AND (MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'') \u000d\u000a        OR MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%''))',2192)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.select.member_r_09',5,'DOCUMENT','true ','/*\u000d\u000a\uba64\ubc84\uc758 \uc815\ubcf4\uc640 \uc9c1\ucc45 \ubd80\uc11c \uc815\ubcf4 \uc870\ud68c\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID, \u000d\u000a       MEMBER.NAME, \u000d\u000a       MEMBER_TYPE.NAME MEMBER_TYPE,\u000d\u000a       ROLE_NAME.NAME ROLE_NAME, \u000d\u000a       ORGANIZATION.ID ORGANIZATION_ID, \u000d\u000a       ORGANIZATION.NAME ORGANIZATION_NAME, \u000d\u000a       ACCESS_MEMBER.MAIL, \u000d\u000a       IF(MEMBER.PHONE IS NULL, "", MEMBER.PHONE) PHONE, \u000d\u000a       IF(MEMBER.MOBILE_PHONE IS NULL, "", MEMBER.MOBILE_PHONE) MOBILE_PHONE,\u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, "", MEMBER.JOIN_DATE) JOIN_DATE, \u000d\u000a       IF(MEMBER.RETIRED_DATE = '''', ''\uadfc\ubb34\uc911'',IF(MEMBER.RETIRED_DATE IS NULL, "\uadfc\ubb34\uc911", MEMBER.RETIRED_DATE)) RETIRED_DATE, \u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE EXPIRE_DATE,\u000d\u000a       IF(MEMBER.GOOGLE_ID IS NULL, "", MEMBER.GOOGLE_ID) GOOGLE_ID, \u000d\u000a       IF(MEMBER.GOOGLE_PW IS NULL, "", MEMBER.GOOGLE_PW) GOOGLE_PW, \u000d\u000a       MEMBER.PHOTO\u000d\u000a  FROM MEMBER, ROLE, ORGANIZATION, CODE ROLE_NAME, CODE MEMBER_TYPE, ACCESS_MEMBER\u000d\u000a WHERE ACCESS_MEMBER.ID = MEMBER.ID\u000d\u000a   AND MEMBER.ID = ROLE.MEMBER_ID\u000d\u000a   AND ORGANIZATION.ID = ROLE.ORGANIZATION_ID\u000d\u000a   AND ROLE.ROLE_CODE = ROLE_NAME.ID\u000d\u000a   AND ACCESS_MEMBER.MEMBER_TYPE = MEMBER_TYPE.ID\u000d\u000a   AND MEMBER.USE_YN = ''Y''\u000d\u000a   AND ROLE.USE_YN = ''Y''\u000d\u000a   AND ORGANIZATION.USE_YN = ''Y''\u000d\u000a   AND (MEMBER.RETIRED_DATE > CURRENT_DATE OR MEMBER.RETIRED_DATE IS NULL OR MEMBER.RETIRED_DATE = '''')\u000d\u000a   AND MEMBER.ID = :MEMBER_ID\u000d\u000a   AND ORGANIZATION.ID = :ORGANIZATION_ID',2370)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.select.member_r_10',5,'DOCUMENT','true ','/*MEMBER PROFILE*/\u000d\u000aSELECT NAME, MAIL, IFNULL(PHONE, ''\uc5c6\uc74c'') PHONE, IFNULL(MOBILE_PHONE, ''\uc5c6\uc74c'') MOBILE_PHONE, PHOTO \u000d\u000a  FROM VW_MEMBER\u000d\u000a WHERE ID = :ID;',3222)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.select.member_r_11',5,'DOCUMENT','true ','/*MEMBER ORGANIZATION FOR PROFILE*/\u000d\u000aSELECT CONCAT(CONCAT(CONCAT(ORG.NAME, '' [''), CD.NAME), '']'') AS ROLE\u000d\u000a  FROM ORGANIZATION ORG, CODE CD, ROLE RL\u000d\u000a WHERE 1=1\u000d\u000a   AND RL.ORGANIZATION_ID = ORG.ID\u000d\u000a   AND RL.ROLE_CODE = CD.ID\u000d\u000a   AND RL.USE_YN = ''Y''\u000d\u000a   AND RL.MEMBER_ID = :ID',3218)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.select.member_r_12',5,'DOCUMENT','true ','/*MEMBER PROJECT LIST FOR PROFILE*/\u000d\u000aSELECT PRJ.ID, PRJ.TITLE, PRJ.FROM_DATE, PRJ.TO_DATE\u000d\u000a  FROM PROJECT_MEMBER PMBR, PROJECT PRJ\u000d\u000a WHERE PMBR.PROJECT_ID = PRJ.ID\u000d\u000a   AND MEMBER_ID = :ID',3225)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.select.organization_r_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.19\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Orgamization search\u000d\u000a*/\u000d\u000aSELECT CHILD.ID, \u000d\u000a       IF(CHILD.ID <> CHILD.PARENT_ID, CHILD.PARENT_ID, ''[N/A]'') AS PARENT_ID, \u000d\u000a       IF(CHILD.ID <> CHILD.PARENT_ID, PARENT.NAME, ''[N/A]'') AS PARENT_NAME, \u000d\u000a       CHILD.NAME, \u000d\u000a       CHILD.RGST_DTTM, \u000d\u000a       CHILD.MDF_DTTM\u000d\u000a  FROM ORGANIZATION PARENT, ORGANIZATION CHILD\u000d\u000a WHERE 1=1\u000d\u000a   AND CHILD.PARENT_ID = PARENT.ID\u000d\u000a   AND CHILD.USE_YN <> ''N''\u000d\u000a   AND PARENT.USE_YN <> ''N''\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND CHILD.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND CHILD.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="PARENT_ID">\u000d\u000a   AND CHILD.PARENT_ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="PARENT_NAME">\u000d\u000a   AND PARENT.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aCHILD.PARENT_ID ASC, CHILD.MDF_DTTM ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aCHILD.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PARENT_ID">\u000d\u000aCHILD.PARENT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PARENT_NAME">\u000d\u000aPARENT.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aCHILD.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aCHILD.MDF_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aCHILD.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp',887)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.select.organization_r_02',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.19\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Orgamization list count\u000d\u000a*/\u000d\u000aSELECT COUNT(*) TOTAL_CNT, :page AS page \u000d\u000a  FROM ORGANIZATION PARENT, ORGANIZATION CHILD\u000d\u000a WHERE 1=1\u000d\u000a   AND CHILD.PARENT_ID = PARENT.ID\u000d\u000a   AND CHILD.USE_YN <> ''N''\u000d\u000a   AND PARENT.USE_YN <> ''N''\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND CHILD.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND CHILD.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="PARENT_ID">\u000d\u000a   AND CHILD.PARENT_ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="PARENT_NAME">\u000d\u000a   AND PARENT.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>',888)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.select.organization_r_03',5,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.10\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Orgamization search for select box\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT ID, NAME\u000d\u000a  FROM ORGANIZATION\u000d\u000aORDER BY NAME ASC\u000d\u000aLIMIT 0, 30',889)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.select.role_r_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) under organization\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID, \u000d\u000a       MEMBER.NAME, \u000d\u000a       RL_CODE.NAME AS ROLE_NAME,\u000d\u000a       ACCESS_MEMBER.MAIL,\u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE,\u000d\u000a       MEMBER.PHONE, \u000d\u000a       MEMBER.MOBILE_PHONE, \u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, '''', MEMBER.JOIN_DATE) AS JOIN_DATE,\u000d\u000a       MEMBER.RETIRED_DATE, \u000d\u000a       EP_CODE.NAME AS MEMBER_TYPE, \u000d\u000a       MEMBER.GOOGLE_ID, \u000d\u000a       ROLE.RGST_DTTM, \u000d\u000a       ROLE.MDF_DTTM\u000d\u000a  FROM ROLE, MEMBER, \u000d\u000a       CODE AS EP_CODE, \u000d\u000a       CODE AS RL_CODE, \u000d\u000a       ACCESS_MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.MEMBER_TYPE = EP_CODE.ID \u000d\u000a   AND ACCESS_MEMBER.ID       = MEMBER.ID\u000d\u000a   AND ROLE.MEMBER_ID         = MEMBER.ID\u000d\u000a   AND RL_CODE.ID             = ROLE.ROLE_CODE\u000d\u000a   AND ROLE.ORGANIZATION_ID   = :ORGANIZATION_ID\u000d\u000a   AND ROLE.USE_YN            = ''Y''\u000d\u000a   AND MEMBER.USE_YN          = ''Y''\u000d\u000a   AND ACCESS_MEMBER.USE_YN   = ''Y''\u000d\u000a   AND (RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aROLE.MDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMEMBER.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMEMBER.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ROLE_NAME">\u000d\u000aRL_CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACCESS_MEMBER.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACCESS_MEMBER.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMEMBER.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMEMBER.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="JOIN_DATE">\u000d\u000aMEMBER.JOIN_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RETIRED_DATE">\u000d\u000aMEMBER.RETIRED_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EMPLOYMENT_TYPE">\u000d\u000aEP_CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="GOOGLE_ID">\u000d\u000aMEMBER.GOOGLE_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aROLE.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aROLE.MDF_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp',890)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.select.role_r_02',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) under organization\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT COUNT(*) TOTAL_CNT, :page AS page \u000d\u000a  FROM ROLE, MEMBER, ACCESS_MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.ID       = MEMBER.ID\u000d\u000a   AND ROLE.MEMBER_ID         = MEMBER.ID\u000d\u000a   AND ROLE.ORGANIZATION_ID   = :ORGANIZATION_ID\u000d\u000a   AND ROLE.USE_YN            = ''Y''\u000d\u000a   AND MEMBER.USE_YN          = ''Y''\u000d\u000a   AND ACCESS_MEMBER.USE_YN   = ''Y''\u000d\u000a   AND (RETIRED_DATE IS NULL OR RETIRED_DATE = '''')',891)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.select.role_r_03',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) which isn''t registered on access list of a specific menu\u000d\u000a*/\u000d\u000aSELECT DISTINCT ROLE.MEMBER_ID    AS MEMBER_ID,\u000d\u000a                MEMBER.NAME       AS MEMBER_NAME,\u000d\u000a                ORGANIZATION.NAME AS ORGANIZATION_NAME,\u000d\u000a                ORGANIZATION.ID   AS ORGANIZATION_ID,\u000d\u000a                CODE_RC.NAME      AS ROLE_NAME\u000d\u000a  FROM ROLE, MEMBER, ORGANIZATION, CODE CODE_RC,\u000d\u000a       (SELECT DISTINCT B.ORGANIZATION_ID, B.MEMBER_ID\u000d\u000a          FROM (SELECT MENU.ID, LEVEL, NAME\u000d\u000a                  FROM (SELECT @id := MENU_HIERARCHY() AS ID, \u000d\u000a                               @level AS LEVEL\u000d\u000a                          FROM (SELECT @start_with := :MENU_ID, \u000d\u000a                                       @id := @start_with,\u000d\u000a                                       @level := 0\u000d\u000a                               )VARS, MENU\u000d\u000a                        WHERE @id IS NOT NULL\u000d\u000a                       ) HIERARCHY\u000d\u000a                       JOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000a                 WHERE MENU.LINK_VALUE != '''' AND MENU.LINK_VALUE IS NOT NULL\u000d\u000a               ) A ,\u000d\u000a               (SELECT BASE.ORGANIZATION_ID, BASE.MEMBER_ID, BASE.MENU_ID\u000d\u000a                  FROM (SELECT ROLE.ORGANIZATION_ID, ROLE.MEMBER_ID, ACCESS_LIST.MENU_ID\u000d\u000a                          FROM ROLE,ACCESS_LIST\u000d\u000a                         WHERE ROLE.USE_YN = ''Y''\u000d\u000a                       ) BASE \u000d\u000a                       LEFT OUTER JOIN\u000d\u000a                       (SELECT ACCESS_LIST.ORGANIZATION_ID, ACCESS_LIST.MEMBER_ID, ACCESS_LIST.MENU_ID, MENU.ID\u000d\u000a                          FROM MENU\u000d\u000a                               LEFT OUTER JOIN \u000d\u000a                               (SELECT ROLE.ORGANIZATION_ID, ROLE.MEMBER_ID, ACCESS_LIST.MENU_ID\u000d\u000a                                  FROM ROLE\u000d\u000a                                       LEFT OUTER JOIN ACCESS_LIST\u000d\u000a                                       ON ROLE.MEMBER_ID        = ACCESS_LIST.ROLE_MEMBER_ID\u000d\u000a                                       AND ROLE.ORGANIZATION_ID = ACCESS_LIST.ORGANIZATION_ID\u000d\u000a                                 WHERE ROLE.USE_YN = ''Y''\u000d\u000a                               ) ACCESS_LIST\u000d\u000a                               ON ACCESS_LIST.MENU_ID = MENU.ID\u000d\u000a                         WHERE MENU.LINK_VALUE != '''' AND MENU.LINK_VALUE IS NOT NULL\u000d\u000a                       ) CPTR \u000d\u000a                        ON BASE.ORGANIZATION_ID  = CPTR.ORGANIZATION_ID\u000d\u000a                       AND BASE.MEMBER_ID       = CPTR.MEMBER_ID\u000d\u000a                       AND BASE.MENU_ID         = CPTR.MENU_ID\u000d\u000a                 WHERE CPTR.MEMBER_ID IS NULL\u000d\u000a                 UNION ALL\u000d\u000a                SELECT BASE.ORGANIZATION_ID, BASE.MEMBER_ID, CPTR.MENU_ID\u000d\u000a                  FROM (SELECT ROLE.ORGANIZATION_ID, ROLE.MEMBER_ID, ACCESS_LIST.MENU_ID\u000d\u000a                          FROM ROLE,ACCESS_LIST\u000d\u000a                         WHERE ROLE.USE_YN = ''Y''\u000d\u000a                       ) BASE \u000d\u000a                       RIGHT OUTER JOIN\u000d\u000a                       (SELECT ACCESS_LIST.ORGANIZATION_ID, ACCESS_LIST.MEMBER_ID, MENU.ID AS MENU_ID\u000d\u000a                          FROM MENU\u000d\u000a                               LEFT OUTER JOIN \u000d\u000a                               (SELECT ROLE.ORGANIZATION_ID, ROLE.MEMBER_ID, ACCESS_LIST.MENU_ID\u000d\u000a                                  FROM ROLE\u000d\u000a                                       LEFT OUTER JOIN ACCESS_LIST\u000d\u000a                                       ON ROLE.MEMBER_ID        = ACCESS_LIST.ROLE_MEMBER_ID\u000d\u000a                                       AND ROLE.ORGANIZATION_ID = ACCESS_LIST.ORGANIZATION_ID\u000d\u000a                                 WHERE ROLE.USE_YN = ''Y''\u000d\u000a                               ) ACCESS_LIST\u000d\u000a                               ON ACCESS_LIST.MENU_ID = MENU.ID\u000d\u000a                         WHERE MENU.LINK_VALUE != '''' AND MENU.LINK_VALUE IS NOT NULL\u000d\u000a                       ) CPTR \u000d\u000a                        ON BASE.ORGANIZATION_ID = CPTR.ORGANIZATION_ID\u000d\u000a                       AND BASE.MEMBER_ID       = CPTR.MEMBER_ID\u000d\u000a                       AND BASE.MENU_ID         = CPTR.MENU_ID\u000d\u000a                     WHERE CPTR.MEMBER_ID IS NULL\u000d\u000a               ) B\u000d\u000a         WHERE A.ID = B.MENU_ID\u000d\u000a       ) BASE\u000d\u000a WHERE ROLE.MEMBER_ID       = IF(BASE.MEMBER_ID IS NULL, ROLE.MEMBER_ID, BASE.MEMBER_ID)\u000d\u000a   AND ROLE.ORGANIZATION_ID = IF(BASE.ORGANIZATION_ID IS NULL, ROLE.ORGANIZATION_ID, BASE.ORGANIZATION_ID)\u000d\u000a   AND ROLE.ORGANIZATION_ID = ORGANIZATION.ID\u000d\u000a   AND ROLE.MEMBER_ID       = MEMBER.ID\u000d\u000a   AND CODE_RC.ID           = ROLE.ROLE_CODE\u000d\u000a   AND ORGANIZATION.USE_YN  = ''Y''\u000d\u000a   AND ROLE.USE_YN          = ''Y''\u000d\u000a   AND MEMBER.USE_YN        = ''Y''\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="MEMBER_ID">\u000d\u000a   AND ROLE.MEMBER_ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="MEMBER_NAME">\u000d\u000a   AND MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_ID">\u000d\u000a   AND ORGANIZATION.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_NAME">\u000d\u000a   AND ORGANIZATION.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aORGANIZATION.NAME ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_ID">\u000d\u000aROLE.MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_NAME">\u000d\u000aMEMBER.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ORGANIZATION_NAME">\u000d\u000aORGANIZATION.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ROLE_NAME">\u000d\u000aCODE_RC.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp',892)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.select.role_r_04',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) which isn''t registered on access list of a specific menu\u000d\u000a*/\u000d\u000aSELECT DISTINCT COUNT(*) TOTAL_CNT, :page AS page\u000d\u000a  FROM ROLE, MEMBER, ORGANIZATION, CODE CODE_RC,\u000d\u000a       (SELECT DISTINCT B.ORGANIZATION_ID, B.MEMBER_ID\u000d\u000a          FROM (SELECT MENU.ID, LEVEL, NAME\u000d\u000a                  FROM (SELECT @id := MENU_HIERARCHY() AS ID, \u000d\u000a                               @level AS LEVEL\u000d\u000a                          FROM (SELECT @start_with := :MENU_ID, \u000d\u000a                                       @id := @start_with,\u000d\u000a                                       @level := 0\u000d\u000a                               )VARS, MENU\u000d\u000a                        WHERE @id IS NOT NULL\u000d\u000a                       ) HIERARCHY\u000d\u000a                       JOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000a                 WHERE MENU.LINK_VALUE != '''' AND MENU.LINK_VALUE IS NOT NULL\u000d\u000a               ) A ,\u000d\u000a               (SELECT BASE.ORGANIZATION_ID, BASE.MEMBER_ID, BASE.MENU_ID\u000d\u000a                  FROM (SELECT ROLE.ORGANIZATION_ID, ROLE.MEMBER_ID, ACCESS_LIST.MENU_ID\u000d\u000a                          FROM ROLE,ACCESS_LIST\u000d\u000a                         WHERE ROLE.USE_YN = ''Y''\u000d\u000a                       ) BASE \u000d\u000a                       LEFT OUTER JOIN\u000d\u000a                       (SELECT ACCESS_LIST.ORGANIZATION_ID, ACCESS_LIST.MEMBER_ID, ACCESS_LIST.MENU_ID, MENU.ID\u000d\u000a                          FROM MENU\u000d\u000a                               LEFT OUTER JOIN \u000d\u000a                               (SELECT ROLE.ORGANIZATION_ID, ROLE.MEMBER_ID, ACCESS_LIST.MENU_ID\u000d\u000a                                  FROM ROLE\u000d\u000a                                       LEFT OUTER JOIN ACCESS_LIST\u000d\u000a                                       ON ROLE.MEMBER_ID        = ACCESS_LIST.ROLE_MEMBER_ID\u000d\u000a                                       AND ROLE.ORGANIZATION_ID = ACCESS_LIST.ORGANIZATION_ID\u000d\u000a                                 WHERE ROLE.USE_YN = ''Y''\u000d\u000a                               ) ACCESS_LIST\u000d\u000a                               ON ACCESS_LIST.MENU_ID = MENU.ID\u000d\u000a                         WHERE MENU.LINK_VALUE != '''' AND MENU.LINK_VALUE IS NOT NULL\u000d\u000a                       ) CPTR \u000d\u000a                        ON BASE.ORGANIZATION_ID  = CPTR.ORGANIZATION_ID\u000d\u000a                       AND BASE.MEMBER_ID       = CPTR.MEMBER_ID\u000d\u000a                       AND BASE.MENU_ID         = CPTR.MENU_ID\u000d\u000a                 WHERE CPTR.MEMBER_ID IS NULL\u000d\u000a                 UNION ALL\u000d\u000a                SELECT BASE.ORGANIZATION_ID, BASE.MEMBER_ID, CPTR.MENU_ID\u000d\u000a                  FROM (SELECT ROLE.ORGANIZATION_ID, ROLE.MEMBER_ID, ACCESS_LIST.MENU_ID\u000d\u000a                          FROM ROLE,ACCESS_LIST\u000d\u000a                         WHERE ROLE.USE_YN = ''Y''\u000d\u000a                       ) BASE \u000d\u000a                       RIGHT OUTER JOIN\u000d\u000a                       (SELECT ACCESS_LIST.ORGANIZATION_ID, ACCESS_LIST.MEMBER_ID, MENU.ID AS MENU_ID\u000d\u000a                          FROM MENU\u000d\u000a                               LEFT OUTER JOIN \u000d\u000a                               (SELECT ROLE.ORGANIZATION_ID, ROLE.MEMBER_ID, ACCESS_LIST.MENU_ID\u000d\u000a                                  FROM ROLE\u000d\u000a                                       LEFT OUTER JOIN ACCESS_LIST\u000d\u000a                                       ON ROLE.MEMBER_ID        = ACCESS_LIST.ROLE_MEMBER_ID\u000d\u000a                                       AND ROLE.ORGANIZATION_ID = ACCESS_LIST.ORGANIZATION_ID\u000d\u000a                                 WHERE ROLE.USE_YN = ''Y''\u000d\u000a                               ) ACCESS_LIST\u000d\u000a                               ON ACCESS_LIST.MENU_ID = MENU.ID\u000d\u000a                         WHERE MENU.LINK_VALUE != '''' AND MENU.LINK_VALUE IS NOT NULL\u000d\u000a                       ) CPTR \u000d\u000a                        ON BASE.ORGANIZATION_ID = CPTR.ORGANIZATION_ID\u000d\u000a                       AND BASE.MEMBER_ID       = CPTR.MEMBER_ID\u000d\u000a                       AND BASE.MENU_ID         = CPTR.MENU_ID\u000d\u000a                     WHERE CPTR.MEMBER_ID IS NULL\u000d\u000a               ) B\u000d\u000a         WHERE A.ID = B.MENU_ID\u000d\u000a       ) BASE\u000d\u000a WHERE ROLE.MEMBER_ID       = IF(BASE.MEMBER_ID IS NULL, ROLE.MEMBER_ID, BASE.MEMBER_ID)\u000d\u000a   AND ROLE.ORGANIZATION_ID = IF(BASE.ORGANIZATION_ID IS NULL, ROLE.ORGANIZATION_ID, BASE.ORGANIZATION_ID)\u000d\u000a   AND ROLE.ORGANIZATION_ID = ORGANIZATION.ID\u000d\u000a   AND ROLE.MEMBER_ID       = MEMBER.ID\u000d\u000a   AND CODE_RC.ID           = ROLE.ROLE_CODE\u000d\u000a   AND ORGANIZATION.USE_YN  = ''Y''\u000d\u000a   AND ROLE.USE_YN          = ''Y''\u000d\u000a   AND MEMBER.USE_YN        = ''Y''\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="MEMBER_ID">\u000d\u000a   AND ROLE.MEMBER_ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="MEMBER_NAME">\u000d\u000a   AND MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_ID">\u000d\u000a   AND ORGANIZATION.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_NAME">\u000d\u000a   AND ORGANIZATION.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>',893)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.update',4,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.update.access_list_u_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.16\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Modify access list\u000d\u000a*/\u000d\u000a\u000d\u000aUPDATE ACCESS_LIST\u000d\u000a   SET ACCESS_LEVEL    = :ACCESS_LEVEL\u000d\u000a WHERE MENU_ID         = :MENU_ID\u000d\u000a   AND ORGANIZATION_ID = :ORGANIZATION_ID\u000d\u000a   AND ROLE_MEMBER_ID  = :ROLE_MEMBER_ID',894)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.update.access_member_u_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Modify access member.\u000d\u000a*/\u000d\u000aUPDATE ACCESS_MEMBER \u000d\u000a   SET\u000d\u000a<dynamic parameter=":PWD" operator="!=" value="">\u000d\u000a       PWD = MD5(:PWD),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MAIL" operator="!=" value="">\u000d\u000a       MAIL = :MAIL,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MEMBER_TYPE" operator="!=" value="">\u000d\u000a       MEMBER_TYPE = :MEMBER_TYPE,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXPIRE_DATE" operator="!=" value="">\u000d\u000a       EXPIRE_DATE = STR_TO_DATE(:EXPIRE_DATE, ''%Y-%m-%d''),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_YN" operator="!=" value="">\u000d\u000a       USE_YN = :USE_YN,\u000d\u000a</dynamic>\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE ID = :ID',895)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.update.init_password_u_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.10\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Initialize password\u000d\u000a*/\u000d\u000aUPDATE ACCESS_MEMBER\u000d\u000a  SET PWD = MD5(''new1234!'')\u000d\u000aWHERE ID = :ID',896)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.update.member_u_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Modify member information.\u000d\u000a*/\u000d\u000aUPDATE MEMBER\u000d\u000a   SET \u000d\u000a<dynamic parameter=":NAME" operator="!=" value="">\u000d\u000a       NAME = :NAME,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PHONE" operator="!=" value="">\u000d\u000a       PHONE = :PHONE,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MOBILE_PHONE" operator="!=" value="">\u000d\u000a       MOBILE_PHONE = :MOBILE_PHONE,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PHOTO" operator="!=" value="null">\u000d\u000a       PHOTO = :PHOTO,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":JOIN_DATE" operator="!=" value="">\u000d\u000a       JOIN_DATE = STR_TO_DATE(:JOIN_DATE, ''%Y-%m-%d''),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":RETIRE_DATE" operator="!=" value="">\u000d\u000a       RETIRE_DATE = STR_TO_DATE(:RETIRE_DATE, ''%Y-%m-%d''),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":GOOGLE_ID" operator="!=" value="">\u000d\u000a       GOOGLE_ID = :GOOGLE_ID,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":GOOGLE_PW" operator="!=" value="">\u000d\u000a       GOOGLE_PW = HEX(AES_ENCRYPT(:GOOGLE_PW, MD5(''#!%''))),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_YN" operator="!=" value="">\u000d\u000a       USE_YN = :USE_YN,\u000d\u000a</dynamic>\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE ID = :ID',898)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.update.member_u_02',5,'DOCUMENT','true ','UPDATE ACCESS_MEMBER\u000d\u000a  SET PWD = MD5(:NEW_PWD)\u000d\u000aWHERE ID = :ID\u000d\u000a  AND ID = :LOGIN_MEMBER\u000d\u000a  AND PWD = MD5(:CUR_PWD)',3238)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.update.organization_u_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.04\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Update organization\u000d\u000a*/\u000d\u000a\u000d\u000aUPDATE ORGANIZATION AS ORG\u000d\u000aSET\u000d\u000a<dynamic parameter=":PARENT_ID" operator="!=" value="">\u000d\u000aORG.PARENT_ID = :PARENT_ID,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":NAME" operator="!=" value="">\u000d\u000aORG.NAME = :NAME,\u000d\u000a</dynamic>\u000d\u000aORG.MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE ID = :ID',899)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.update.organization_u_02',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.04\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Disable organization\u000d\u000a\u0009:TEST_VALUE\u000d\u000a*/\u000d\u000a\u000d\u000aUPDATE ORGANIZATION AS ORG,\u000d\u000a       (\u000d\u000a       SELECT ORGANIZATION.ID\u000d\u000a        FROM(\u000d\u000a             SELECT @id := ORGANIZATION_HIERARCHY() AS ID, \u000d\u000a                    @level AS LEVEL\u000d\u000a                    FROM (\u000d\u000a                          SELECT @start_with := :ID, \u000d\u000a                                 @id := @start_with,\u000d\u000a                                 @level := 0\u000d\u000a                         )VARS, MENU\u000d\u000a                   WHERE @id IS NOT NULL\u000d\u000a            ) HIERARCHY\u000d\u000a            JOIN ORGANIZATION ON ORGANIZATION.ID = HIERARCHY.ID\u000d\u000a      WHERE ORGANIZATION.USE_YN = ''Y''\u000d\u000a       ) AS HRY\u000d\u000aSET ORG.USE_YN = ''N'',\u000d\u000a    ORG.MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE ORG.ID = HRY.ID',900)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.member.update.role_u_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.08\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Modify role.\u000d\u000a*/\u000d\u000a\u000d\u000aUPDATE ROLE \u000d\u000a   SET \u000d\u000a<dynamic parameter=":ROLE_CODE" operator="!=" value="">\u000d\u000a       ROLE_CODE = :ROLE_CODE,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_YN" operator="!=" value="">\u000d\u000a       USE_YN = :USE_YN,\u000d\u000a</dynamic>\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE ORGANIZATION_ID = :ORGANIZATION_ID\u000d\u000a   AND MEMBER_ID       = :MEMBER_ID',901)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.menu',3,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.menu.delete',4,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.menu.delete.menu_d_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.18\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : \uc120\ud0dd \uba54\ub274, \ud558\uc704 \uba54\ub274\uc640 \uc5f0\uad00\ub41c \ubaa8\ub4e0 \uc811\uadfc\uc815\ubcf4 \uc0ad\uc81c\u000d\u000a*/\u000d\u000aDELETE ACC\u000d\u000a  FROM ACCESS_LIST ACC,\u000d\u000a       (SELECT MENU.ID, LEVEL\u000d\u000a          FROM(SELECT @id := MENU_HIERARCHY() AS ID, \u000d\u000a                      @level AS LEVEL\u000d\u000a                 FROM (SELECT @start_with := :ID, \u000d\u000a                              @id := @start_with,\u000d\u000a                              @level := 0\u000d\u000a                      )VARS, MENU\u000d\u000a                WHERE @id IS NOT NULL\u000d\u000a               ) HIERARCHY\u000d\u000a               JOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000a       ) M\u000d\u000aWHERE ACC.MENU_ID = M.ID\u000d\u000a\u000d\u000a',902)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.menu.delete.menu_d_02',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.18\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : \uc120\ud0dd \uba54\ub274, \ud558\uc704 \uba54\ub274 \ubaa8\ub450 \uc0ad\uc81c. foreign key \uc81c\uc57d \ub54c\ubb38\uc5d0,\u000d\u000a                  common.free_fk, common.set_fk \uac19\uc774 \uc2e4\ud589 \ud574\uc57c \ub428.\u000d\u000a*/\u000d\u000aDELETE M1\u000d\u000a  FROM MENU M1,\u000d\u000a       (SELECT MENU.ID, LEVEL\u000d\u000a          FROM(SELECT @id := MENU_HIERARCHY() AS ID, \u000d\u000a                      @level AS LEVEL\u000d\u000a                 FROM (SELECT @start_with := :ID, \u000d\u000a                              @id := @start_with,\u000d\u000a                              @level := 0\u000d\u000a                      )VARS, MENU\u000d\u000a                WHERE @id IS NOT NULL\u000d\u000a               ) HIERARCHY\u000d\u000a               JOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000a       ) M2\u000d\u000aWHERE M1.ID = M2.ID',903)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.menu.insert',4,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.menu.insert.menu_i_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.10\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Insert new menu\u000d\u000a*/\u000d\u000a\u000d\u000aINSERT INTO MENU \u000d\u000a\u0009\u0009(\u000d\u000a        ID, \u000d\u000a        PARENT_ID, \u000d\u000a        NAME, \u000d\u000a        MENU_ORDER,\u000d\u000a<dynamic parameter=":IMAGE" operator="!=" value="null">\u000d\u000a        IMAGE, \u000d\u000a</dynamic>\u000d\u000a        LINK_VALUE, \u000d\u000a        ACCESS_ALL_YN, \u000d\u000a        RGST_DTTM, \u000d\u000a        RGST_MEMBER_ID, \u000d\u000a        MDF_DTTM, \u000d\u000a        MDF_MEMBER_ID\u000d\u000a        ) \u000d\u000a<dynamic parameter=":PARENT_ID" operator="==" value = "">\u000d\u000aSELECT  :ID                AS ID, \u000d\u000a        :ID                AS PARENT_ID, \u000d\u000a        :NAME              AS NAME, \u000d\u000a        IF(MAX(MENU_ORDER) IS NULL ,  0, MAX(MENU_ORDER)+1)  AS MENU_ORDER,\u000d\u000a<dynamic parameter=":IMAGE" operator="!=" value="null">\u000d\u000a        :IMAGE             AS IMAGE, \u000d\u000a</dynamic>\u000d\u000a        :LINK_VALUE        AS LINK_VALUE, \u000d\u000a        :ACCESS_ALL_YN     AS ACCESS_ALL_YN, \u000d\u000a        CURRENT_TIMESTAMP, \u000d\u000a        :LOGIN_MEMBER      AS RGST_MEMBER, \u000d\u000a        CURRENT_TIMESTAMP, \u000d\u000a        :LOGIN_MEMBER      AS MDF_MEMBER\u000d\u000a   FROM MENU\u000d\u000a  WHERE PARENT_ID = ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PARENT_ID" operator="!=" value="">\u000d\u000aSELECT  :ID                AS ID, \u000d\u000a        :PARENT_ID         AS PARENT_ID, \u000d\u000a        :NAME              AS NAME, \u000d\u000a        IF(MAX(MENU_ORDER) IS NULL ,  0, MAX(MENU_ORDER)+1)  AS MENU_ORDER,\u000d\u000a<<dynamic parameter=":IMAGE" operator="!=" value="null">\u000d\u000a        :IMAGE             AS IMAGE, \u000d\u000a</dynamic>\u000d\u000a        :LINK_VALUE        AS LINK_VALUE, \u000d\u000a        :ACCESS_ALL_YN     AS ACCESS_ALL_YN, \u000d\u000a        CURRENT_TIMESTAMP, \u000d\u000a        :LOGIN_MEMBER      AS RGST_MEMBER, \u000d\u000a        CURRENT_TIMESTAMP, \u000d\u000a        :LOGIN_MEMBER      AS MDF_MEMBER\u000d\u000a   FROM MENU\u000d\u000aWHERE PARENT_ID = :PARENT_ID\u000d\u000a  AND PARENT_ID <> ID\u000d\u000a</dynamic>',2110)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.menu.select',4,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.menu.select.menu_r_01',5,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.26\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Retrieve top menu list for login\u000d\u000a*/\u000d\u000aSELECT ID, NAME, LINK_VALUE, IMAGE\u000d\u000a  FROM MENU\u000d\u000a WHERE ID = PARENT_ID\u000d\u000aORDER BY MENU_ORDER ASC',905)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.menu.select.menu_r_02',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.26\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Retrieve top menu list for login\u000d\u000a*/\u000d\u000aSELECT ID, NAME, LINK_VALUE, IMAGE\u000d\u000a  FROM MENU\u000d\u000a WHERE PARENT_ID = :PARENT_ID\u000d\u000a   AND ID <> PARENT_ID\u000d\u000aORDER BY MENU_ORDER ASC',906)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.menu.select.menu_r_03',5,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.06\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Retrieve top menu list for management\u000d\u000a*/\u000d\u000aSELECT ID, \u000d\u000a       PARENT_ID, \u000d\u000a       NAME, \u000d\u000a       MENU_ORDER, \u000d\u000a       LINK_VALUE, \u000d\u000a       IF(IMAGE IS NULL, ''N'', ''Y'') AS IMAGE,\u000d\u000a       IF(ACCESS_ALL_YN IS NULL, ''N'', ACCESS_ALL_YN) AS ACCESS_ALL_YN, \u000d\u000a       RGST_DTTM,\u000d\u000a       RGST_MEMBER_ID,\u000d\u000a       MDF_DTTM,\u000d\u000a       MDF_MEMBER_ID\u000d\u000a  FROM MENU\u000d\u000a WHERE ID = PARENT_ID\u000d\u000aORDER BY MENU_ORDER ASC',2109)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.menu.select.menu_r_04',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.26\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Retrieve top menu list for management\u000d\u000a*/\u000d\u000aSELECT CHILD.ID, \u000d\u000a       CHILD.PARENT_ID, \u000d\u000a       PARENT.NAME AS PARENT_NAME,\u000d\u000a       CHILD.NAME, \u000d\u000a       IF(CHILD.IMAGE IS NULL, ''N'', ''Y'') AS IMAGE,\u000d\u000a       CHILD.MENU_ORDER, \u000d\u000a       CHILD.LINK_VALUE, \u000d\u000a       IF(CHILD.ACCESS_ALL_YN IS NULL, ''N'', CHILD.ACCESS_ALL_YN) AS ACCESS_ALL_YN, \u000d\u000a       CHILD.RGST_DTTM,\u000d\u000a       CHILD.RGST_MEMBER_ID,\u000d\u000a       CHILD.MDF_DTTM,\u000d\u000a       CHILD.MDF_MEMBER_ID\u000d\u000a  FROM MENU AS PARENT, MENU AS CHILD\u000d\u000a WHERE CHILD.PARENT_ID = :PARENT_ID\u000d\u000a   AND CHILD.ID <> CHILD.PARENT_ID\u000d\u000a   AND CHILD.PARENT_ID = PARENT.ID\u000d\u000aORDER BY CHILD.MENU_ORDER ASC',2112)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.menu.select.menu_r_05',5,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.12\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Retrieve hierarchy menu list for login\u000d\u000a\u000d\u000a    2012.12.26  : SimpleQuery.hierarchySelect() -> SimpleQuery.select() \ub85c \ubcc0\ud658 \ubc0f SQL \ubcc0\uacbd\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT MENU.ID, \u000d\u000a       MENU.PARENT_ID, \u000d\u000a       LEVEL, \u000d\u000a       IMAGE,\u000d\u000a       NAME, \u000d\u000a       MENU.LINK_VALUE, \u000d\u000a       MENU_ORDER\u000d\u000a  FROM(\u000d\u000a       SELECT @idx := @idx+1 IDX, @id := MENU_HIERARCHY_ALL() AS ID, \u000d\u000a              @level AS LEVEL, PARENT_ID\u000d\u000a         FROM (\u000d\u000a               SELECT @level := 0,\u000d\u000a                      @idx :=0\u000d\u000a              )VARS, MENU\u000d\u000a        WHERE ID IS NOT NULL\u000d\u000a      ) HIERARCHY\u000d\u000aJOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000aORDER BY HIERARCHY.IDX\u000d\u000a\u000d\u000a/* SimpleQuery.hierarchySelect() \uc0ac\uc6a9\uc2dc \uc544\ub798 SQL \uc0ac\uc6a9\u000d\u000a   SELECT ID, NAME, LINK_VALUE\u000d\u000a     FROM MENU\u000d\u000a    WHERE 1=1\u000d\u000a<dynamic parameter=":RSV_ISTOP" operator="==" value="Y">\u000d\u000a      AND ID = PARENT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":RSV_ISTOP" operator="==" value="N">\u000d\u000a      AND ID <> PARENT_ID\u000d\u000a      AND PARENT_ID = :PARENT_ID\u000d\u000a</dynamic>\u000d\u000a ORDER BY MENU_ORDER ASC*/',2266)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.menu.select.menu_r_06',5,'DOCUMENT','true ','SELECT COUNT(*) COUNT FROM MENU\u000d\u000aWHERE ID = :ID',910)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.menu.select.menu_r_07',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.12\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Retrieve hierarchy menu list for login\u000d\u000a\u000d\u000a    2012.12.26  : SimpleQuery.select() \ub85c \ubcc0\ud658 \ubc0f SQL \ubcc0\uacbd\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT MENU.ID, \u000d\u000a       MENU.PARENT_ID, \u000d\u000a       HIERARCHY.LEVEL,\u000d\u000a       MENU.IMAGE,\u000d\u000a       MENU.NAME, \u000d\u000a       MENU.LINK_VALUE, \u000d\u000a       MENU_ORDER,\u000d\u000a       IF(ACCESS_LEVEL IS NULL, ''AR001AR001'', ACCESS_LEVEL) AS ACCESS_LEVEL\u000d\u000a  FROM  \u000d\u000a       (\u000d\u000a        SELECT @id := MENU_HIERARCHY_ALL() AS ID, \u000d\u000a               @level AS LEVEL, PARENT_ID\u000d\u000a          FROM (\u000d\u000a                SELECT @level := 0\u000d\u000a               )VARS, MENU\u000d\u000a         WHERE ID IS NOT NULL\u000d\u000a       ) HIERARCHY\u000d\u000a       JOIN MENU \u000d\u000a       ON MENU.ID = HIERARCHY.ID\u000d\u000a       LEFT OUTER JOIN     \u000d\u000a        (\u000d\u000a       SELECT MENU_ID, MAX(ACCESS_LEVEL) ACCESS_LEVEL\u000d\u000a         FROM ACCESS_LIST\u000d\u000a        WHERE ROLE_MEMBER_ID = :LOGIN_MEMBER\u000d\u000a     GROUP BY MENU_ID\u000d\u000a        ) ACCESS_LIST\u000d\u000a       ON HIERARCHY.ID = ACCESS_LIST.MENU_ID\u000d\u000a WHERE ACCESS_LIST.MENU_ID IS NOT NULL OR LINK_VALUE IS NULL OR LINK_VALUE = ''''',2020)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.menu.update',4,'FOLDER','false','null',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.portal.menu.update.menu_u_01',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.10\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Update new menu\u000d\u000a*/\u000d\u000a\u000d\u000aUPDATE MENU\u000d\u000a<dynamic parameter=":MENU_ORDER" operator="==" value="-1">\u000d\u000a     ,(SELECT IF(MAX(MENU_ORDER) IS NULL , 0, MAX(MENU_ORDER)+1)  AS MENU_ORDER\u000d\u000a         FROM MENU\u000d\u000a        WHERE PARENT_ID = :PARENT_ID) AS TMP\u000d\u000a</dynamic>\u000d\u000a   SET \u000d\u000a<dynamic parameter=":ID" operator="!=" value="">\u000d\u000a       MENU.ID                  = :ID, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PARENT_ID" operator="!=" value="">\u000d\u000a       MENU.PARENT_ID           = :PARENT_ID, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MENU_ORDER" operator="==" value="-1">\u000d\u000a       MENU.MENU_ORDER          = TMP.MENU_ORDER,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MENU_ORDER" operator="!=" value="-1">\u000d\u000a<dynamic parameter=":MENU_ORDER" operator="!=" value="">\u000d\u000a       MENU.MENU_ORDER          = :MENU_ORDER,\u000d\u000a</dynamic>\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":NAME" operator="!=" value="">\u000d\u000a       MENU.NAME                = :NAME, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":IMAGE" operator="!=" value="null">\u000d\u000a       MENU.IMAGE               = :IMAGE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":LINK_VALUE" operator="!=" value="">\u000d\u000a       MENU.LINK_VALUE          = :LINK_VALUE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":ACCESS_ALL_YN" operator="!=" value="">\u000d\u000a       MENU.ACCESS_ALL_YN       = :ACCESS_ALL_YN, \u000d\u000a</dynamic>\u000d\u000a       MENU.MDF_DTTM            = CURRENT_TIMESTAMP, \u000d\u000a       MENU.MDF_MEMBER_ID       = :LOGIN_MEMBER\u000d\u000a WHERE MENU.ID = :OLD_ID',2111)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project',2,'FOLDER','false','',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.delete',3,'FOLDER','false','',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.delete.project_d_01',4,'DOCUMENT','true ','DELETE FROM PROJECT_MEMBER\u000d\u000aWHERE PROJECT_ID = :PROJECT_ID\u000d\u000aAND MEMBER_ID = :MEMBER_ID',2400)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.delete.project_d_02',4,'DOCUMENT','true ','/*\u000d\u000a\uc0ad\uc81c \ub420 \ub54c \u000d\u000aSCHEDULE_ATTATCHMENT, SCHEDULE_COMMNET, BUDGET, COST \ud14c\uc774\ube14 \ubaa8\ub450 \uc0ad\uc81c\uac00 \ub428. CASCADE OPTIONS\u000d\u000a*/\u000d\u000aDELETE FROM PROJECT_SCHEDULE WHERE ID = :ID AND PROJECT_ID = :G_PROJECT_ID',2538)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.delete.project_d_03',4,'DOCUMENT','true ','DELETE FROM SCHEDULE_COMMENT\u000d\u000aWHERE PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000aAND SEQ = :SEQ',2648)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.delete.project_d_04',4,'DOCUMENT','true ','DELETE FROM SCHEDULE_ATTATCHMENT\u000d\u000aWHERE PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SEQ = :SEQ',2672)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.delete.project_d_05',4,'DOCUMENT','true ','DELETE FROM BUDGET \u000d\u000aWHERE PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND BUDGET_CODE = :BUDGET_CODE',2731)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.delete.project_d_06',4,'DOCUMENT','true ','DELETE \u000d\u000a  FROM COST \u000d\u000a WHERE ID = :COST_ID',2855)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.delete.project_d_07',4,'DOCUMENT','true ','DELETE FROM CONFERENCE WHERE ID = :ID',2951)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.delete.project_d_08',4,'DOCUMENT','true ','DELETE FROM CONFERENCE_ATTATCHMENT\u000d\u000aWHERE CONFERENCE_ID = :CONFERENCE_ID\u000d\u000a  AND SEQ = :SEQ',2962)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.delete.project_d_09',4,'DOCUMENT','true ','DELETE FROM REPORT WHERE ID = :ID AND RGST_MEMBER_ID = :LOGIN_MEMBER',2989)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.delete.project_d_10',4,'DOCUMENT','true ','DELETE FROM DECISION_ATTATCHMENT\u000d\u000aWHERE DECISION_REQUEST_ID = :DECISION_REQUEST_ID\u000d\u000a  AND SEQ = :SEQ',3118)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.insert',3,'FOLDER','false','',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.insert.project_i_01',4,'DOCUMENT','true ','INSERT INTO PROJECT\u000d\u000a(\u000d\u000aID, TITLE, SUMMARY, MANAGER, MANAGER_ORGANIZATION_NAME, MANAGER_ROLE_NAME, \u000d\u000aBUDGET_AMOUNT, FROM_DATE, TO_DATE, PRJ_STATUS, BOARD_ID, RGST_MEMBER_ID, RGST_DTTM,\u000d\u000aMDF_MEMBER_ID, MDF_DTTM, USE_YN\u000d\u000a)\u000d\u000aVALUES\u000d\u000a(\u000d\u000a:ID, \u000d\u000a:TITLE, \u000d\u000aREPLACE(REPLACE(REPLACE(REPLACE(:SUMMARY, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), " ","&nbsp;&nbsp;"),\u000d\u000a:MANAGER, \u000d\u000a:MANAGER_ORGANIZATION_NAME, \u000d\u000a:MANAGER_ROLE_NAME, \u000d\u000a:BUDGET_AMOUNT, \u000d\u000aSTR_TO_DATE(:FROM_DATE, ''%Y-%m-%d''), \u000d\u000aSTR_TO_DATE(:TO_DATE, ''%Y-%m-%d''), \u000d\u000a''PJ001ST001'', :BOARD_ID, :LOGIN_MEMBER, CURRENT_TIMESTAMP, :LOGIN_MEMBER, CURRENT_TIMESTAMP, ''Y''\u000d\u000a)',2351)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.insert.project_i_02',4,'DOCUMENT','true ','INSERT INTO PROJECT_MEMBER\u000d\u000a(PROJECT_ID, MEMBER_ID, ORGANIZATION_ID, RGST_MEMBER_ID, RGST_DTTM)\u000d\u000aVALUES\u000d\u000a(:PROJECT_ID, :MEMBER_ID, :ORGANIZATION_ID, :LOGIN_MEMBER, CURRENT_TIMESTAMP)',2362)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.insert.project_i_03',4,'DOCUMENT','true ','INSERT INTO PROJECT_SCHEDULE\u000d\u000a(\u000d\u000a    ID, PROJECT_ID, PARENT_ID, SCHDL_TYPE, FROM_DATE, \u000d\u000a    TO_DATE, TITLE, SUMMARY, ASSIGNEE, SCHDL_STATUS, \u000d\u000a    RGST_MEMBER_ID, RGST_DTTM, MDF_MEMBER_ID, MDF_DTTM\u000d\u000a)\u000d\u000aVALUES\u000d\u000a(\u000d\u000a    :PROJECT_SCHEDULE_ID, \u000d\u000a    :PROJECT_ID,\u000d\u000a<dynamic parameter=":PARENT_ID" operator="==" value="">\u000d\u000a    :PROJECT_SCHEDULE_ID,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PARENT_ID" operator="!=" value="">\u000d\u000a    :PARENT_ID,\u000d\u000a</dynamic>\u000d\u000a    :SCHDL_TYPE, \u000d\u000a    STR_TO_DATE(:FROM_DATE, ''%Y-%m-%d''), \u000d\u000a    STR_TO_DATE(:TO_DATE, ''%Y-%m-%d''), \u000d\u000a    :TITLE, \u000d\u000a    REPLACE(REPLACE(REPLACE(REPLACE(:SUMMARY, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), " ","&nbsp;&nbsp;"), \u000d\u000a    :ASSIGNEE, \u000d\u000a    ''ST002ST001'', \u000d\u000a    :LOGIN_MEMBER, \u000d\u000a    CURRENT_TIMESTAMP, \u000d\u000a    :LOGIN_MEMBER, \u000d\u000a    CURRENT_TIMESTAMP\u000d\u000a)',2619)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.insert.project_i_04',4,'DOCUMENT','true ','INSERT INTO SCHEDULE_ATTATCHMENT\u000d\u000a(PROJECT_SCHEDULE_ID, SEQ, CONTENT, FILE_NAME, SIZE, RGST_MEMBER_ID, MDF_DTTM)\u000d\u000aSELECT F.PROJECT_SCHEDULE_ID,\u000d\u000a       F.SEQ,\u000d\u000a       U.CONTENT,\u000d\u000a       U.FILE_NAME,\u000d\u000a       U.SIZE,\u000d\u000a       :LOGIN_MEMBER AS RGST_MEMBER_ID,\u000d\u000a       CURRENT_TIMESTAMP\u000d\u000a  FROM (SELECT :PROJECT_SCHEDULE_ID AS PROJECT_SCHEDULE_ID,\u000d\u000a               IF(MAX(F.SEQ) IS NULL , 0, MAX(F.SEQ)+1) AS SEQ,\u000d\u000a               :VALUE AS ID\u000d\u000a          FROM SCHEDULE_ATTATCHMENT F \u000d\u000a         WHERE F.PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID) AS F,\u000d\u000a       TMP_UPLOAD_FILE U\u000d\u000a WHERE F.ID = U.ID\u000d\u000a   AND U.ID = :VALUE;',2693)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.insert.project_i_05',4,'DOCUMENT','true ','<dynamic parameter=":SEQ" operator="==" value="">\u000d\u000aINSERT INTO SCHEDULE_COMMENT\u000d\u000a(PROJECT_SCHEDULE_ID, SEQ, CONTENT, MEMBER_ID, RGST_DTTM, MDF_DTTM)\u000d\u000aSELECT :PROJECT_SCHEDULE_ID                            AS PROJECT_SCHEDULE_ID, \u000d\u000a       IF(MAX(SEQ) IS NULL , 0, MAX(SEQ)+1) AS SEQ, \u000d\u000a       REPLACE(REPLACE(REPLACE(:CONTENT, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"'') AS CONTENT, \u000d\u000a       :LOGIN_MEMBER                        AS MEMBER_ID, \u000d\u000a       CURRENT_TIMESTAMP                    AS RGST_DTTM, \u000d\u000a       CURRENT_TIMESTAMP                    AS MDF_DTTM\u000d\u000a  FROM SCHEDULE_COMMENT\u000d\u000a WHERE PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SEQ" operator="!=" value="">\u000d\u000aUPDATE SCHEDULE_COMMENT\u000d\u000a   SET CONTENT = REPLACE(REPLACE(REPLACE(:CONTENT, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), \u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a   AND SEQ = :SEQ\u000d\u000a</dynamic>\u000d\u000a',2647)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.insert.project_i_06',4,'DOCUMENT','true ','INSERT INTO SCHEDULE_ATTATCHMENT\u000d\u000a(PROJECT_SCHEDULE_ID, SEQ, CONTENT, FILE_NAME, SIZE, RGST_MEMBER_ID, MDF_DTTM)\u000d\u000aSELECT :PROJECT_SCHEDULE_ID AS PROJECT_SCHEDULE_ID,\u000d\u000a       F.SEQ AS SEQ,\u000d\u000a       :CONTENT AS CONTENT,\u000d\u000a       :CONTENT_FILE_NAME AS FILE_NAME, \u000d\u000a       :CONTENT_FILE_SIZE AS SIZE,\u000d\u000a       :LOGIN_MEMBER AS RGST_MEMBER_ID,\u000d\u000a       CURRENT_TIMESTAMP AS MDF_DTTM\u000d\u000a  FROM (\u000d\u000a        SELECT IF(MAX(SEQ) IS NULL , 0, MAX(SEQ)+1) AS SEQ\u000d\u000a          FROM SCHEDULE_ATTATCHMENT\u000d\u000a         WHERE PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a       ) AS F   ',2686)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.insert.project_i_07',4,'DOCUMENT','true ',' INSERT INTO BUDGET\u000d\u000a SELECT :PROJECT_SCHEDULE_ID AS PROJECT_SCHEDULE_ID, \u000d\u000a        :BUDGET_CODE AS BUDGET_CODE, \u000d\u000a        :SUMMARY AS SUMMARY, \u000d\u000a        :BUDGET_AMOUNT AS AMOUNT, \u000d\u000a        :LOGIN_MEMBER AS RGST_MEMBER_ID,\u000d\u000a        CURRENT_TIMESTAMP AS RGST_DTTM,\u000d\u000a        :LOGIN_MEMBER AS MDF_MEMBER_ID,\u000d\u000a        CURRENT_TIMESTAMP AS MDF_DTTM\u000d\u000a   FROM PROJECT_SCHEDULE\u000d\u000a  WHERE ID = :PROJECT_SCHEDULE_ID',2771)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.insert.project_i_08',4,'DOCUMENT','true ','INSERT INTO COST\u000d\u000aVALUES (SEQ(''COST''),\u000d\u000a       :PROJECT_SCHEDULE_ID,\u000d\u000a       :BUDGET_CODE,\u000d\u000a       :USE_DTL,\u000d\u000a       :PAYMENT_CODE,\u000d\u000a       STR_TO_DATE(:PAYMENT_DATE, ''%Y-%m-%d'') ,\u000d\u000a       REPLACE(REPLACE(REPLACE(REPLACE(:SUMMARY, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), " ","&nbsp;&nbsp;"),\u000d\u000a       :AMOUNT,\u000d\u000a       :EXECUTOR,\u000d\u000a       :RECEIVER,\u000d\u000a       :CONTENT,\u000d\u000a       :CONTENT_FILE_NAME,\u000d\u000a       :CONTENT_FILE_SIZE,\u000d\u000a       :LOGIN_MEMBER,\u000d\u000a       CURRENT_TIMESTAMP,\u000d\u000a       :LOGIN_MEMBER,\u000d\u000a       CURRENT_TIMESTAMP)',3250)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.insert.project_i_09',4,'DOCUMENT','true ','INSERT INTO PROJECT_SCHEDULE_H\u000d\u000aSELECT ID, \u000d\u000a       MDF_DTTM, \u000d\u000a       PROJECT_ID, \u000d\u000a       PARENT_ID, \u000d\u000a       SCHDL_TYPE, \u000d\u000a       FROM_DATE, \u000d\u000a       TO_DATE, \u000d\u000a       TITLE, \u000d\u000a       SUMMARY, \u000d\u000a       ASSIGNEE, \u000d\u000a       SCHDL_STATUS, \u000d\u000a       RGST_MEMBER_ID, \u000d\u000a       RGST_DTTM, \u000d\u000a       MDF_MEMBER_ID\u000d\u000a  FROM PROJECT_SCHEDULE\u000d\u000a WHERE ID = :PROJECT_SCHEDULE_ID',2871)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.insert.project_i_10',4,'DOCUMENT','true ','INSERT INTO CONFERENCE\u000d\u000a(ID, PROJECT_ID, TITLE, CONFERENCE_DATE, PARTICIPANTS, PLACE, FROM_TIME, TO_TIME, CONTENTS, RGST_MEMBER_ID, RGST_DTTM)\u000d\u000aVALUES\u000d\u000a(\u000d\u000a:CONFERENCE_ID, \u000d\u000a:G_PROJECT_ID, \u000d\u000a:TITLE, \u000d\u000aSTR_TO_DATE(:CONFERENCE_DATE, ''%Y-%m-%d''),\u000d\u000a:PARTICIPANTS,\u000d\u000a:PLACE,\u000d\u000aSTR_TO_DATE(:FROM_TIME, ''%h:%i %p''),\u000d\u000aSTR_TO_DATE(:TO_TIME, ''%h:%i %p''),\u000d\u000aREPLACE(REPLACE(REPLACE(:CONTENTS, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"''),\u000d\u000a:LOGIN_MEMBER,\u000d\u000aCURRENT_TIMESTAMP\u000d\u000a)',2953)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.insert.project_i_11',4,'DOCUMENT','true ','INSERT INTO CONFERENCE_ATTATCHMENT\u000d\u000a(CONFERENCE_ID, SEQ, CONTENT, FILE_NAME, SIZE, RGST_MEMBER_ID, RGST_DTTM)\u000d\u000aSELECT F.CONFERENCE_ID,\u000d\u000a       F.SEQ,\u000d\u000a       U.CONTENT,\u000d\u000a       U.FILE_NAME,\u000d\u000a       U.SIZE,\u000d\u000a       :LOGIN_MEMBER AS RGST_MEMBER_ID,\u000d\u000a       CURRENT_TIMESTAMP\u000d\u000a  FROM (SELECT :CONFERENCE_ID AS CONFERENCE_ID,\u000d\u000a               IF(MAX(F.SEQ) IS NULL , 0, MAX(F.SEQ)+1) AS SEQ,\u000d\u000a               :VALUE AS ID\u000d\u000a          FROM CONFERENCE_ATTATCHMENT F \u000d\u000a         WHERE F.CONFERENCE_ID = :CONFERENCE_ID) AS F,\u000d\u000a       TMP_UPLOAD_FILE U\u000d\u000a WHERE F.ID = U.ID\u000d\u000a   AND U.ID = :VALUE;',2911)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.insert.project_i_12',4,'DOCUMENT','true ','INSERT INTO REPORT\u000d\u000aSELECT SEQ(''REPORT'') ID,\u000d\u000a       :G_PROJECT_ID PROJECT_ID,\u000d\u000a       :REPORT_TYPE REPORT_TYPE,\u000d\u000a       :RECEIVER RECEIVER,\u000d\u000a       REPLACE(REPLACE(REPLACE(:CURRENT, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"'') CURRENT,\u000d\u000a       REPLACE(REPLACE(REPLACE(:NEXT, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"'') NEXT,\u000d\u000a       REPLACE(REPLACE(REPLACE(:EVALUATION, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"'') EVALUATION,\u000d\u000a       REPLACE(REPLACE(REPLACE(:ISSUE, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"'') ISSUE,\u000d\u000a       :LOGIN_MEMBER RGST_MEMBER_ID,\u000d\u000a       CURRENT_TIMESTAMP RGST_DTTM\u000d\u000a  FROM DUAL',2991)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.insert.project_i_13',4,'DOCUMENT','true ','INSERT INTO DECISION_REQUEST\u000d\u000a(ID, PROJECT_ID, GROUP_ID, DECISION_STATUS, RECEIVER, DUE_DATE, TITLE, CONTENTS, RGST_MEMBER_ID, RGST_DTTM, MDF_MEMBER_ID, MDF_DTTM)\u000d\u000aVALUES\u000d\u000a(\u000d\u000a:ID, \u000d\u000a:G_PROJECT_ID, \u000d\u000a<dynamic parameter=":GROUP_ID" operator="==" value="null">\u000d\u000a:ID,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":GROUP_ID" operator="!=" value="null">\u000d\u000a:GROUP_ID,\u000d\u000a</dynamic>\u000d\u000a:DECISION_STATUS,\u000d\u000a:RECEIVER,\u000d\u000aSTR_TO_DATE(:DUE_DATE, ''%Y-%m-%d''),\u000d\u000a:TITLE, \u000d\u000aREPLACE(REPLACE(REPLACE(:CONTENTS, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"''),\u000d\u000a:LOGIN_MEMBER,\u000d\u000aCURRENT_TIMESTAMP,\u000d\u000a:LOGIN_MEMBER,\u000d\u000aCURRENT_TIMESTAMP\u000d\u000a)',3140)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.insert.project_i_14',4,'DOCUMENT','true ','INSERT INTO DECISION_ATTATCHMENT\u000d\u000a(DECISION_REQUEST_ID, SEQ, CONTENT, FILE_NAME, SIZE, RGST_MEMBER_ID, RGST_DTTM)\u000d\u000aSELECT F.DECISION_REQUEST_ID,\u000d\u000a       F.SEQ,\u000d\u000a       U.CONTENT,\u000d\u000a       U.FILE_NAME,\u000d\u000a       U.SIZE,\u000d\u000a       :LOGIN_MEMBER AS RGST_MEMBER_ID,\u000d\u000a       CURRENT_TIMESTAMP\u000d\u000a  FROM (SELECT :ID AS DECISION_REQUEST_ID,\u000d\u000a               IF(MAX(F.SEQ) IS NULL , 0, MAX(F.SEQ)+1) AS SEQ,\u000d\u000a               :VALUE AS ID\u000d\u000a          FROM DECISION_ATTATCHMENT F \u000d\u000a         WHERE F.DECISION_REQUEST_ID = :ID) AS F,\u000d\u000a       TMP_UPLOAD_FILE U\u000d\u000a WHERE F.ID = U.ID\u000d\u000a   AND U.ID = :VALUE;',3095)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.insert.project_i_15',4,'DOCUMENT','true ','INSERT INTO DECISION_REQUEST_H\u000d\u000a(DECISION_REQUEST_ID, MDF_DTTM, PROJECT_ID, GROUP_ID, DECISION_STATUS, RECEIVER, DUE_DATE, TITLE, CONTENTS, DECISION_DATE, RGST_MEMBER_ID, RGST_DTTM, MDF_MEMBER_ID)\u000d\u000aSELECT ID, \u000d\u000a       MDF_DTTM, \u000d\u000a       PROJECT_ID, \u000d\u000a       GROUP_ID,\u000d\u000a       DECISION_STATUS, \u000d\u000a       RECEIVER, \u000d\u000a       DUE_DATE, \u000d\u000a       TITLE, \u000d\u000a       CONTENTS, \u000d\u000a       DECISION_DATE, \u000d\u000a       RGST_MEMBER_ID, \u000d\u000a       RGST_DTTM, \u000d\u000a       MDF_MEMBER_ID\u000d\u000a  FROM DECISION_REQUEST\u000d\u000a WHERE ID = :ID',3137)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.insert.project_i_16',4,'DOCUMENT','true ','INSERT INTO DECISION_REQUEST\u000d\u000a(ID, PROJECT_ID, GROUP_ID, DECISION_STATUS, RECEIVER, DUE_DATE, TITLE, CONTENTS, RGST_MEMBER_ID, RGST_DTTM, MDF_MEMBER_ID, MDF_DTTM)\u000d\u000aVALUES(\u000d\u000a:ID, \u000d\u000a:G_PROJECT_ID, \u000d\u000a:GROUP_ID,\u000d\u000a:DECISION_STATUS,\u000d\u000a:RECEIVER,\u000d\u000aSTR_TO_DATE(:DUE_DATE, ''%Y-%m-%d''),\u000d\u000a:TITLE, \u000d\u000aREPLACE(REPLACE(REPLACE(:OPINION, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"''),\u000d\u000a:LOGIN_MEMBER,\u000d\u000aCURRENT_TIMESTAMP,\u000d\u000a:LOGIN_MEMBER,\u000d\u000aCURRENT_TIMESTAMP\u000d\u000a)',3164)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.insert.project_i_17',4,'DOCUMENT','true ','INSERT INTO DECISION_REQUEST_H\u000d\u000a(DECISION_REQUEST_ID, MDF_DTTM, PROJECT_ID, GROUP_ID, DECISION_STATUS, RECEIVER, DUE_DATE, TITLE, CONTENTS, DECISION_DATE, RGST_MEMBER_ID, RGST_DTTM, MDF_MEMBER_ID)\u000d\u000aSELECT ID, \u000d\u000a       MDF_DTTM, \u000d\u000a       PROJECT_ID, \u000d\u000a       GROUP_ID,\u000d\u000a       DECISION_STATUS, \u000d\u000a       RECEIVER, \u000d\u000a       DUE_DATE, \u000d\u000a       TITLE, \u000d\u000a       CONTENTS, \u000d\u000a       DECISION_DATE, \u000d\u000a       RGST_MEMBER_ID, \u000d\u000a       RGST_DTTM, \u000d\u000a       MDF_MEMBER_ID\u000d\u000a  FROM DECISION_REQUEST\u000d\u000a WHERE GROUP_ID = (SELECT GROUP_ID FROM DECISION_REQUEST WHERE ID = :ID)',3169)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select',3,'FOLDER','false','',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_01',4,'DOCUMENT','true ','SELECT PRJ.ID, PRJ.TITLE, MANAGER.ID MANAGER_ID, MANAGER.NAME MANAGER_NAME, PRJ.FROM_DATE, PRJ.TO_DATE, CODE.NAME STATUS, \u000d\u000a       REGISTER.ID REGISTER_ID, REGISTER.NAME REGISTER_NAME, DATE_FORMAT(PRJ.RGST_DTTM,''%Y-%m-%d'') AS RGST_DTTM\u000d\u000a  FROM PROJECT PRJ, MEMBER AS MANAGER, MEMBER AS REGISTER, CODE\u000d\u000a WHERE 1=1\u000d\u000a   AND PRJ.MANAGER = MANAGER.ID\u000d\u000a   AND PRJ.RGST_MEMBER_ID = REGISTER.ID\u000d\u000a   AND PRJ.PRJ_STATUS = CODE.ID\u000d\u000a   AND PRJ.USE_YN = ''Y''\u000d\u000a<dynamic parameter=":sSearch" operator="!=" value="">\u000d\u000a   AND (PRJ.ID      LIKE CONCAT(CONCAT(''%'', :sSearch), ''%'') OR\u000d\u000a        PRJ.TITLE   LIKE CONCAT(CONCAT(''%'', :sSearch), ''%''))\u000d\u000a</dynamic>\u000d\u000aORDER BY \u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a      PRJ.RGST_DTTM DESC\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a       PRJ.ID\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a       PRJ.TITLE\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a       MANAGER_NAME\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a       PRJ.FROM_DATE\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a       PRJ.TO_DATE\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="5">\u000d\u000a       STATUS\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="6">\u000d\u000a       REGISTER_NAME \u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="7">\u000d\u000a       PRJ.RGST_DTTM\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a       ASC\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a       DESC\u000d\u000a    </dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength',2248)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_02',4,'DOCUMENT','true ','SELECT IF(COUNT(*) > 0, ''Y'', ''N'') DUP_YN\u000d\u000aFROM PROJECT\u000d\u000aWHERE ID = :ID',2218)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_03',4,'DOCUMENT','true ','SELECT PRJ.ID, PRJ.TITLE, \u000d\u000a       PRJ.SUMMARY, \u000d\u000a       PRJ.MANAGER MANAGER,\u000d\u000a       MBR.NAME MANAGER_NAME, \u000d\u000a       PRJ.MANAGER_ORGANIZATION_NAME ORGANIZATION_NAME, \u000d\u000a       PRJ.MANAGER_ROLE_NAME ROLE_NAME, \u000d\u000a       ACC.MAIL,\u000d\u000a       MBR.PHONE,\u000d\u000a       MBR.MOBILE_PHONE,\u000d\u000a       MBR.JOIN_DATE,\u000d\u000a       IF(MBR.RETIRED_DATE = '''', ''\uadfc\ubb34\uc911'',IF(MBR.RETIRED_DATE IS NULL, "\uadfc\ubb34\uc911", MBR.RETIRED_DATE)) RETIRED_DATE,\u000d\u000a       MBR.PHOTO,\u000d\u000a       CONCAT(FORMAT(PRJ.BUDGET_AMOUNT, 0), '' \uc6d0'') BUDGET_AMOUNT,\u000d\u000a       PRJ.FROM_DATE, \u000d\u000a       PRJ.TO_DATE, \u000d\u000a       CODE.NAME PRJ_STATUS, \u000d\u000a       PRJ.PRJ_STATUS PRJ_STATUS_CD,\u000d\u000a       RGST.NAME RGST_NAME, \u000d\u000a       DATE_FORMAT(PRJ.RGST_DTTM,''%Y-%m-%d'') RGST_DTTM, \u000d\u000a       MDF.NAME MDF_NAME, \u000d\u000a       DATE_FORMAT(PRJ.MDF_DTTM,''%Y-%m-%d'') MDF_DTTM\u000d\u000aFROM PROJECT PRJ, CODE, MEMBER MBR, ACCESS_MEMBER ACC, MEMBER RGST, MEMBER MDF\u000d\u000aWHERE 1=1\u000d\u000aAND PRJ.PRJ_STATUS = CODE.ID\u000d\u000aAND PRJ.MANAGER = MBR.ID\u000d\u000aAND PRJ.RGST_MEMBER_ID = RGST.ID\u000d\u000aAND PRJ.MDF_MEMBER_ID = MDF.ID\u000d\u000aAND MBR.ID = ACC.ID\u000d\u000aAND PRJ.USE_YN = ''Y''\u000d\u000aAND PRJ.ID = :ID',2255)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_04',4,'DOCUMENT','true ','SELECT MBR.ID, MBR.NAME, MBR.PHONE, MBR.MOBILE_PHONE, ACC.MAIL, MEMBER_TYPE.NAME MEMBER_TYPE, ACC.EXPIRE_DATE,\u000d\u000aORG.NAME ORGANIZATION_NAME, ROLE_NAME.NAME ROLE_NAME\u000d\u000aFROM MEMBER MBR, ACCESS_MEMBER ACC, CODE MEMBER_TYPE, CODE ROLE_NAME, ROLE ROLE, ORGANIZATION ORG, PROJECT_MEMBER PMB\u000d\u000aWHERE MBR.ID = ACC.ID\u000d\u000aAND ACC.MEMBER_TYPE = MEMBER_TYPE.ID\u000d\u000aAND ROLE.ORGANIZATION_ID = ORG.ID\u000d\u000aAND PMB.ORGANIZATION_ID = ORG.ID\u000d\u000aAND ROLE.MEMBER_ID = MBR.ID\u000d\u000aAND ROLE.ROLE_CODE = ROLE_NAME.ID\u000d\u000aAND PMB.MEMBER_ID = MBR.ID\u000d\u000aAND MBR.USE_YN = ''Y''\u000d\u000aAND (MBR.RETIRED_DATE IS NULL OR MBR.RETIRED_DATE = '''' OR MBR.RETIRED_DATE > CURRENT_DATE)\u000d\u000aAND ACC.USE_YN = ''Y''\u000d\u000aAND ROLE.USE_YN = ''Y''\u000d\u000aAND ORG.USE_YN = ''Y''\u000d\u000aAND PMB.PROJECT_ID = :PROJECT_ID\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMBR.RGST_DTTM ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMBR.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMBR.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMBR.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACC.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aMEMBER_TYPE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACC.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ORGANIZATION_NAME">\u000d\u000aORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ROLE_NAME">\u000d\u000aROLE_NAME.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp',2407)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_05',4,'DOCUMENT','true ','SELECT MANAGER OLD_MANAGER\u000d\u000aFROM PROJECT\u000d\u000aWHERE ID = :ID',2376)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_06',4,'DOCUMENT','true ','SELECT PRJ.ID, PRJ.TITLE, MANAGER.ID MANAGER_ID, MANAGER.NAME MANAGER_NAME, PRJ.FROM_DATE, PRJ.TO_DATE, CODE.NAME STATUS, \u000d\u000a       REGISTER.ID REGISTER_ID, REGISTER.NAME REGISTER_NAME, DATE_FORMAT(PRJ.RGST_DTTM,''%Y-%m-%d'') AS RGST_DTTM\u000d\u000a  FROM PROJECT PRJ, MEMBER AS MANAGER, MEMBER AS REGISTER, CODE\u000d\u000a WHERE 1=1\u000d\u000a   AND PRJ.MANAGER = MANAGER.ID\u000d\u000a   AND PRJ.RGST_MEMBER_ID = REGISTER.ID\u000d\u000a   AND PRJ.PRJ_STATUS = CODE.ID\u000d\u000a   AND PRJ.USE_YN = ''Y''\u000d\u000a<dynamic parameter=":KEYWORD" operator="!=" value="">\u000d\u000a   AND (PRJ.ID      LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'') OR\u000d\u000a        PRJ.TITLE   LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%''))\u000d\u000a</dynamic>\u000d\u000aORDER BY PRJ.RGST_DTTM DESC\u000d\u000aLIMIT :start, :rp',2413)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_07',4,'DOCUMENT','true ','SELECT IF(CURRENT_DATE<=FROM_DATE, ''0%'',IF(CURRENT_DATE >= TO_DATE, ''100%'' , CONCAT(ROUND(DATEDIFF(CURRENT_DATE, PRJ.FROM_DATE) / DATEDIFF(PRJ.TO_DATE, PRJ.FROM_DATE) * 100, 2), ''%''))) AS DATE_RATIO,\u000d\u000a       PRJ.ID, PRJ.BOARD_ID, PRJ.TITLE, MBR.NAME MANAGER, \u000d\u000a       CONCAT(CONCAT(DATE_FORMAT(PRJ.FROM_DATE,''%Y\ub144 %m\uc6d4 %d\uc77c''), '' - ''), DATE_FORMAT(PRJ.TO_DATE,''%Y\ub144 %m\uc6d4 %d\uc77c'')) TERM,\u000d\u000a       CONCAT(FORMAT(BUDGET_AMOUNT, 0), '' \uc6d0'') AS BUDGET_AMOUNT, \u000d\u000a       IF(DATEDIFF(PRJ.TO_DATE,CURRENT_DATE) * -1 > 0, \u000d\u000a       CONCAT(''D+'', DATEDIFF(PRJ.TO_DATE,CURRENT_DATE) * -1), \u000d\u000a       CONCAT(''D-'', DATEDIFF(PRJ.TO_DATE,CURRENT_DATE))\u000d\u000a       ) AS DUE_DATE,\u000d\u000a       10 AS TASK_CNT,\u000d\u000a       PRJ.SUMMARY\u000d\u000aFROM PROJECT AS PRJ\u000d\u000a     LEFT OUTER JOIN MEMBER AS MBR ON PRJ.MANAGER = MBR.ID\u000d\u000a<dynamic parameter=":PROJECT_ID" operator="!=" value="null">\u000d\u000aWHERE PRJ.ID = :PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000aWHERE PRJ.ID = :G_PROJECT_ID\u000d\u000a</dynamic>',2441)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_08',4,'DOCUMENT','true ','SELECT FROM_DATE, TO_DATE\u000d\u000aFROM PROJECT\u000d\u000aWHERE USE_YN = ''Y''\u000d\u000aAND ID = :PROJECT_ID',2432)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_09',4,'DOCUMENT','true ','<dynamic parameter=":PARENT_ID" operator="==" value="">\u000d\u000a\u0009<dynamic parameter=":ISTOP" operator="==" value="null">\u000d\u000aSELECT SCHDL.ID, \u000d\u000a       SCHDL.TITLE, \u000d\u000a       SCHDL.FROM_DATE, \u000d\u000a       SCHDL.TO_DATE,\u000d\u000a       (SCHDL.TO_DATE - SCHDL.FROM_DATE) + 1 AS DURATION, \u000d\u000a       MEMBER.NAME ASSIGNEE,\u000d\u000a       SCHDL.RGST_MEMBER_ID RGST_MEMBER_ID,\u000d\u000a       IF(SCHDL.ID = SCHDL.PARENT_ID, ''Y'', ''N'')IS_ROOT,\u000d\u000a       IF(COUNT(CHILD.PARENT_ID ) > 0, ''Y'', ''N'') CHILDREN\u000d\u000a  FROM (\u000d\u000a        SELECT SCHDL.ID, \u000d\u000a               SCHDL.PARENT_ID, \u000d\u000a               SCHDL.PROJECT_ID,\u000d\u000a               SCHDL.TITLE, \u000d\u000a               SCHDL.ASSIGNEE, \u000d\u000a               SCHDL.RGST_MEMBER_ID, \u000d\u000a               SCHDL.FROM_DATE, \u000d\u000a               SCHDL.TO_DATE,\u000d\u000a               SCHDL.RGST_DTTM\u000d\u000a          FROM (\u000d\u000a                SELECT * FROM PROJECT_SCHEDULE\u000d\u000a                 WHERE ASSIGNEE=:LOGIN_MEMBER OR RGST_MEMBER_ID = :LOGIN_MEMBER\u000d\u000a               ) AS SCHDL\u000d\u000a               LEFT OUTER JOIN\u000d\u000a               ( \u000d\u000a                SELECT * FROM PROJECT_SCHEDULE\u000d\u000a                 WHERE ASSIGNEE=:LOGIN_MEMBER OR RGST_MEMBER_ID = :LOGIN_MEMBER\u000d\u000a               ) AS CHILD\u000d\u000a            ON CHILD.PARENT_ID = SCHDL.ID\u000d\u000a         WHERE (SCHDL.ID = SCHDL.PARENT_ID AND SCHDL.RGST_MEMBER_ID = :LOGIN_MEMBER)\u000d\u000a            OR (SCHDL.ID != SCHDL.PARENT_ID AND SCHDL.RGST_MEMBER_ID != :LOGIN_MEMBER)\u000d\u000a       ) AS SCHDL\u000d\u000a       LEFT OUTER JOIN \u000d\u000a       (SELECT ID, PARENT_ID, PROJECT_ID\u000d\u000a          FROM PROJECT_SCHEDULE\u000d\u000a         WHERE ASSIGNEE = :LOGIN_MEMBER AND ID != PARENT_ID) AS CHILD \u000d\u000a       ON SCHDL.ID = CHILD.PARENT_ID\u000d\u000a      AND CHILD.PROJECT_ID = SCHDL.PROJECT_ID,\u000d\u000a      PROJECT, MEMBER\u000d\u000a WHERE SCHDL.ASSIGNEE = MEMBER.ID\u000d\u000a   AND SCHDL.PROJECT_ID = PROJECT.ID\u000d\u000a   AND PROJECT.USE_YN = ''Y''\u000d\u000a   AND PROJECT.ID = :PROJECT_ID\u000d\u000aGROUP BY SCHDL.ID, SCHDL.TITLE, SCHDL.FROM_DATE, SCHDL.TO_DATE\u000d\u000aORDER BY SCHDL.FROM_DATE, SCHDL.TO_DATE, SCHDL.RGST_DTTM\u000d\u000a\u0009</dynamic>\u000d\u000a\u0009<dynamic parameter=":ISTOP" operator="==" value="Y">\u000d\u000aSELECT SCHDL.ID, \u000d\u000a       SCHDL.TITLE, \u000d\u000a       SCHDL.FROM_DATE, \u000d\u000a       SCHDL.TO_DATE,\u000d\u000a       (SCHDL.TO_DATE - SCHDL.FROM_DATE) + 1 AS DURATION, \u000d\u000a       MEMBER.NAME ASSIGNEE,\u000d\u000a       SCHDL.RGST_MEMBER_ID RGST_MEMBER_ID,\u000d\u000a       IF(SCHDL.ID = SCHDL.PARENT_ID, ''Y'', ''N'')IS_ROOT,\u000d\u000a       IF(COUNT(CHILD.PARENT_ID ) > 0, ''Y'', ''N'') CHILDREN\u000d\u000a  FROM (\u000d\u000a        SELECT SCHDL.ID, \u000d\u000a               SCHDL.PARENT_ID, \u000d\u000a               SCHDL.PROJECT_ID,\u000d\u000a               SCHDL.TITLE, \u000d\u000a               SCHDL.ASSIGNEE, \u000d\u000a               SCHDL.RGST_MEMBER_ID, \u000d\u000a               SCHDL.FROM_DATE, \u000d\u000a               SCHDL.TO_DATE,\u000d\u000a               SCHDL.RGST_DTTM\u000d\u000a          FROM PROJECT_SCHEDULE AS SCHDL\u000d\u000a         WHERE SCHDL.PARENT_ID = SCHDL.ID\u000d\u000a       ) AS SCHDL\u000d\u000a       LEFT OUTER JOIN \u000d\u000a       (\u000d\u000a        SELECT ID, PARENT_ID, PROJECT_ID\u000d\u000a          FROM PROJECT_SCHEDULE\u000d\u000a         WHERE ID != PARENT_ID) AS CHILD \u000d\u000a       ON SCHDL.ID = CHILD.PARENT_ID\u000d\u000a      AND CHILD.PROJECT_ID = SCHDL.PROJECT_ID,\u000d\u000a      PROJECT, MEMBER\u000d\u000a WHERE SCHDL.ASSIGNEE = MEMBER.ID\u000d\u000a   AND SCHDL.PROJECT_ID = PROJECT.ID\u000d\u000a   AND PROJECT.USE_YN = ''Y''\u000d\u000a   AND PROJECT.ID = :PROJECT_ID\u000d\u000aGROUP BY SCHDL.ID, SCHDL.TITLE, SCHDL.FROM_DATE, SCHDL.TO_DATE\u000d\u000aORDER BY SCHDL.FROM_DATE, SCHDL.TO_DATE, SCHDL.RGST_DTTM\u000d\u000a\u0009</dynamic>\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PARENT_ID" operator="!=" value="">\u000d\u000aSELECT SCHDL.ID, \u000d\u000a       SCHDL.TITLE, \u000d\u000a       SCHDL.FROM_DATE, \u000d\u000a       SCHDL.TO_DATE, \u000d\u000a       (SCHDL.TO_DATE - SCHDL.FROM_DATE) + 1 AS DURATION, \u000d\u000a       MEMBER.NAME ASSIGNEE,\u000d\u000a       SCHDL.RGST_MEMBER_ID RGST_MEMBER_ID,\u000d\u000a       IF(SCHDL.ID = SCHDL.PARENT_ID, ''Y'', ''N'')IS_ROOT,\u000d\u000a       IF(COUNT(C_SCHDL.ID ) > 0, ''Y'', ''N'') CHILDREN\u000d\u000a  FROM PROJECT_SCHEDULE SCHDL\u000d\u000a       LEFT OUTER JOIN (SELECT ID, PARENT_ID FROM PROJECT_SCHEDULE WHERE ID != PARENT_ID) C_SCHDL ON C_SCHDL.PARENT_ID = SCHDL.ID\u000d\u000a       , MEMBER, PROJECT\u000d\u000a WHERE 1=1\u000d\u000a   AND MEMBER.ID = SCHDL.ASSIGNEE\u000d\u000a   AND SCHDL.PROJECT_ID = PROJECT.ID\u000d\u000a   AND SCHDL.ID != SCHDL.PARENT_ID\u000d\u000a   AND SCHDL.PROJECT_ID = :PROJECT_ID\u000d\u000a   AND SCHDL.PARENT_ID = :PARENT_ID\u000d\u000a   AND PROJECT.USE_YN = ''Y''\u000d\u000aGROUP BY SCHDL.ID, SCHDL.TITLE, SCHDL.FROM_DATE\u000d\u000aORDER BY SCHDL.FROM_DATE, SCHDL.TO_DATE, SCHDL.RGST_DTTM\u000d\u000a</dynamic>',2866)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_10',4,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) under organization\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID,\u000d\u000a       MEMBER.NAME, \u000d\u000a       RL_CODE.NAME ROLE_NAME,\u000d\u000a       ORGANIZATION.NAME ORGANIZATION_NAME,\u000d\u000a       ACCESS_MEMBER.MAIL,\u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE,\u000d\u000a       MEMBER.PHONE, \u000d\u000a       MEMBER.MOBILE_PHONE, \u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, '''', MEMBER.JOIN_DATE) AS JOIN_DATE,\u000d\u000a       IF(MEMBER.RETIRED_DATE IS NULL, ''\uadfc\ubb34\uc911'', IF(MEMBER.RETIRED_DATE = '''', ''\uadfc\ubb34\uc911'', MEMBER.RETIRED_DATE)) AS RETIRED_DATE,\u000d\u000a       EP_CODE.NAME AS MEMBER_TYPE\u000d\u000a  FROM MEMBER, PROJECT_MEMBER PJM, ORGANIZATION, ROLE,\u000d\u000a       CODE AS EP_CODE, CODE AS RL_CODE,\u000d\u000a       ACCESS_MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.MEMBER_TYPE = EP_CODE.ID \u000d\u000a   AND ACCESS_MEMBER.ID       = MEMBER.ID\u000d\u000a   AND PJM.MEMBER_ID          = MEMBER.ID\u000d\u000a   AND PJM.ORGANIZATION_ID    = ORGANIZATION.ID\u000d\u000a   AND ROLE.ORGANIZATION_ID   = ORGANIZATION.ID\u000d\u000a   AND ROLE.MEMBER_ID         = PJM.MEMBER_ID\u000d\u000a   AND ROLE.ROLE_CODE         = RL_CODE.ID\u000d\u000a   AND MEMBER.USE_YN          = ''Y''\u000d\u000a   AND ACCESS_MEMBER.USE_YN   = ''Y''\u000d\u000a   AND PJM.PROJECT_ID         = :G_PROJECT_ID\u000d\u000a   AND (RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000a   AND (MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a       OR MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%''))\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMEMBER.NAME ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMEMBER.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMEMBER.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACCESS_MEMBER.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACCESS_MEMBER.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMEMBER.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMEMBER.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="JOIN_DATE">\u000d\u000aMEMBER.JOIN_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RETIRED_DATE">\u000d\u000aMEMBER.RETIRED_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aEP_CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp',2462)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_11',4,'DOCUMENT','false','SELECT SEQ(''PROJECT_SCHEDULE'') AS PROJECT_SCHEDULE_ID',2517)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_12',4,'DOCUMENT','true ','SELECT SCHDL.ID, SCHDL.TITLE, SCHDL.FROM_DATE, \u000d\u000aSCHDL.TO_DATE, (SCHDL.TO_DATE - SCHDL.FROM_DATE) + 1 AS DURATION, \u000d\u000aMEMBER.NAME ASSIGNEE,\u000d\u000aIF(SCHDL.ID = SCHDL.PARENT_ID, ''Y'', ''N'')IS_ROOT,\u000d\u000aIF(COUNT(C_SCHDL.PARENT_ID ) > 0, ''Y'', ''N'') CHILDREN\u000d\u000aFROM PROJECT_SCHEDULE SCHDL\u000d\u000a     LEFT OUTER JOIN (SELECT PARENT_ID FROM PROJECT_SCHEDULE WHERE ID != PARENT_ID) C_SCHDL ON C_SCHDL.PARENT_ID = SCHDL.ID\u000d\u000a     , MEMBER, PROJECT\u000d\u000aWHERE 1=1\u000d\u000aAND MEMBER.ID = SCHDL.ASSIGNEE\u000d\u000aAND SCHDL.PROJECT_ID = PROJECT.ID\u000d\u000aAND SCHDL.ID != SCHDL.PARENT_ID\u000d\u000aAND SCHDL.PROJECT_ID = :PROJECT_ID\u000d\u000aAND SCHDL.PARENT_ID = :PARENT_ID\u000d\u000aAND PROJECT.USE_YN = ''Y''\u000d\u000aGROUP BY SCHDL.ID, SCHDL.TITLE, SCHDL.FROM_DATE\u000d\u000aORDER BY SCHDL.FROM_DATE ASC',2698)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_13',4,'DOCUMENT','true ','SELECT SCHDL.ID,\u000d\u000a       SCHDL.SCHDL_TYPE, \u000d\u000a       SCHDL.PARENT_ID, \u000d\u000a       IF(SCHDL.PARENT_ID=SCHDL.ID, ''\uc0c1\uc704 \uc77c\uc815 \uc5c6\uc74c'', PARENT.TITLE) AS PARENT_TITLE,\u000d\u000a       IF(SCHDL.PARENT_ID=SCHDL.ID, ''\uc0c1\uc704 \uc77c\uc815 \uc5c6\uc74c'', CONCAT(CONCAT(PARENT.FROM_DATE, '' ~ ''), PARENT.TO_DATE)) AS PARENT_TERM,\u000d\u000a       SCHDL.TITLE, \u000d\u000a       SCHDL.ASSIGNEE,\u000d\u000a       SCHDL.FROM_DATE, \u000d\u000a       SCHDL.TO_DATE,\u000d\u000a       SCHDL.SUMMARY,\u000d\u000a       STATUS.NAME SCHDL_STATUS,\u000d\u000a       SCHDL.SCHDL_STATUS SCHDL_STATUS_CD,\u000d\u000a       DATE_FORMAT(SCHDL.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i:%s'') RGST_DTTM,\u000d\u000a       RGST_MEMBER.NAME RGST_MEMBER,\u000d\u000a       ASSIGNEE.NAME ASSIGNEE,\u000d\u000a       SCHDL.ASSIGNEE ASSIGNEE_ID\u000d\u000aFROM PROJECT_SCHEDULE SCHDL, PROJECT_SCHEDULE PARENT, PROJECT PRJ, MEMBER ASSIGNEE, MEMBER RGST_MEMBER,\u000d\u000a     CODE STATUS\u000d\u000aWHERE SCHDL.PARENT_ID = PARENT.ID\u000d\u000aAND PRJ.ID = SCHDL.PROJECT_ID\u000d\u000aAND SCHDL.ASSIGNEE = ASSIGNEE.ID\u000d\u000aAND SCHDL.RGST_MEMBER_ID = RGST_MEMBER.ID\u000d\u000aAND SCHDL.SCHDL_STATUS = STATUS.ID\u000d\u000aAND PRJ.USE_YN = ''Y''\u000d\u000aAND SCHDL.ID = :ID\u000d\u000aAND PRJ.ID = :PROJECT_ID\u000d\u000a',2624)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_14',4,'DOCUMENT','true ','SELECT SCHDL.ID, SCHDL.TITLE, SCHDL.FROM_DATE, \u000d\u000aSCHDL.TO_DATE, (SCHDL.TO_DATE - SCHDL.FROM_DATE) + 1 AS DURATION, \u000d\u000aMEMBER.NAME ASSIGNEE,\u000d\u000aIF(SCHDL.ID = SCHDL.PARENT_ID, ''Y'', ''N'')IS_ROOT,\u000d\u000a''N'' CHILDREN,\u000d\u000aSTATUS.ID SCHDL_STATUS_CD,\u000d\u000aSTATUS.NAME SCHDL_STATUS\u000d\u000aFROM PROJECT_SCHEDULE SCHDL,\u000d\u000a     MEMBER, PROJECT, CODE STATUS\u000d\u000aWHERE 1=1\u000d\u000aAND MEMBER.ID = SCHDL.ASSIGNEE\u000d\u000aAND SCHDL.PROJECT_ID = PROJECT.ID\u000d\u000aAND SCHDL.SCHDL_STATUS = STATUS.ID\u000d\u000aAND SCHDL.PROJECT_ID = :PROJECT_ID\u000d\u000aAND SCHDL.ID = :ID\u000d\u000aAND PROJECT.USE_YN = ''Y''\u000d\u000aGROUP BY SCHDL.ID, SCHDL.TITLE, SCHDL.FROM_DATE\u000d\u000aORDER BY SCHDL.FROM_DATE ASC',2699)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_15',4,'DOCUMENT','true ','SELECT COMMENT.SEQ, \u000d\u000a       MEMBER.NAME AS MEMBER_NAME,\u000d\u000a       MEMBER.PHOTO,\u000d\u000a       COMMENT.CONTENT, \u000d\u000a       COMMENT.MEMBER_ID, \u000d\u000a       DATE_FORMAT(COMMENT.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %r'') MDF_DTTM\u000d\u000a  FROM SCHEDULE_COMMENT COMMENT\u000d\u000a       LEFT OUTER JOIN VW_MEMBER MEMBER ON MEMBER.ID   = COMMENT.MEMBER_ID\u000d\u000a WHERE PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a ORDER BY COMMENT.MDF_DTTM ASC',2642)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_16',4,'DOCUMENT','true ','SELECT SCHEDULE_ATTATCHMENT.FILE_NAME, \u000d\u000a       SCHEDULE_ATTATCHMENT.SEQ,\u000d\u000a       SCHEDULE_ATTATCHMENT.RGST_MEMBER_ID,\u000d\u000a       MEMBER.NAME AS MEMBER_NAME,\u000d\u000a       DATE_FORMAT(SCHEDULE_ATTATCHMENT.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %r'') MDF_DTTM,\u000d\u000a       IF(SCHEDULE_ATTATCHMENT.SIZE >= 1024*1024, CONCAT(FLOOR(SCHEDULE_ATTATCHMENT.SIZE/(1024*1024)),''MB''), IF(SCHEDULE_ATTATCHMENT.SIZE>=1024, CONCAT(FLOOR(SCHEDULE_ATTATCHMENT.SIZE/1024), ''KB''), CONCAT(SCHEDULE_ATTATCHMENT.SIZE, ''B''))) AS SIZE\u000d\u000a  FROM SCHEDULE_ATTATCHMENT, MEMBER\u000d\u000a WHERE MEMBER.ID = SCHEDULE_ATTATCHMENT.RGST_MEMBER_ID\u000d\u000a   AND SCHEDULE_ATTATCHMENT.PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a ORDER BY SCHEDULE_ATTATCHMENT.SEQ ASC',2667)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_17',4,'DOCUMENT','true ','SELECT CONTENT, FILE_NAME FROM SCHEDULE_ATTATCHMENT\u000d\u000aWHERE PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SEQ = :SEQ',2657)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_18',4,'DOCUMENT','true ','SELECT PRJ.ID, \u000d\u000a       CONCAT(FORMAT(PRJ.BUDGET_AMOUNT, 0), '' \uc6d0'') AS PROJECT_BUDGET, \u000d\u000a       CONCAT(FORMAT(PRJ.BUDGET_AMOUNT - SUM(IF(BDG.AMOUNT IS NULL, 0, BDG.AMOUNT)), 0), '' \uc6d0'') AS PROJECT_BUDGET_REMAIN\u000d\u000a  FROM PROJECT PRJ LEFT OUTER JOIN \u000d\u000a          PROJECT_SCHEDULE SCHDL JOIN BUDGET BDG\u000d\u000a          ON SCHDL.ID = BDG.PROJECT_SCHEDULE_ID\u000d\u000a       ON PRJ.ID = SCHDL.PROJECT_ID\u000d\u000a WHERE SCHDL.ID = SCHDL.PARENT_ID\u000d\u000a   AND PRJ.USE_YN = ''Y''\u000d\u000a   AND PRJ.ID = :G_PROJECT_ID\u000d\u000aGROUP BY PRJ.ID',2741)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_19',4,'DOCUMENT','true ',' SELECT BGD_COST.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        CONCAT(FORMAT(BGD_COST.AMOUNT, 0), '' \uc6d0'') BUDGET_AMOUNT,\u000d\u000a        BGD_COST.BUDGET_REMAIN BUDGET_REMAIN,\u000d\u000a        BGD_COST.SUMMARY SUMMARY,\u000d\u000a        DATE_FORMAT(BGD_COST.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i:%s'') MDF_DTTM\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL, \u000d\u000a        (\u000d\u000a               SELECT P.PROJECT_SCHEDULE_ID, P.AMOUNT, P.SUMMARY, P.MDF_DTTM, P.BUDGET_CODE,\u000d\u000a                      CONCAT(FORMAT(P.AMOUNT - SUM(IF(C.AMOUNT IS NULL, 0, C.AMOUNT)) - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)), 0), '' \uc6d0'') BUDGET_REMAIN\u000d\u000a                 FROM BUDGET P LEFT OUTER JOIN COST\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = COST.BUDGET_CODE\u000d\u000a                      LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a                      LEFT OUTER JOIN BUDGET C\u000d\u000a                      ON SCHDL.ID = C.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = C.BUDGET_CODE AND SCHDL.PARENT_ID != C.PROJECT_SCHEDULE_ID\u000d\u000a               GROUP BY P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST, \u000d\u000a        CODE \u000d\u000aWHERE BGD_COST.BUDGET_CODE = CODE.ID\u000d\u000a  AND BGD_COST.PROJECT_SCHEDULE_ID = SCHDL.ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID',2778)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_20',4,'DOCUMENT','true ','<dynamic parameter=":IS_ROOT" operator="==" value="Y">\u000d\u000a  SELECT CODE.ID BUDGET_CODE, CODE.NAME BUDGET_NAME, REMAIN.PROJECT_BUDGET_REMAIN BUDGET_REMAIN\u000d\u000a    FROM (\u000d\u000a          SELECT PRJ.BUDGET_AMOUNT - SUM(IF(BDG.AMOUNT IS NULL, 0, BDG.AMOUNT)) AS PROJECT_BUDGET_REMAIN\u000d\u000a            FROM PROJECT PRJ \u000d\u000a                 LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL \u000d\u000a                 JOIN BUDGET BDG\u000d\u000a                 ON SCHDL.ID = BDG.PROJECT_SCHEDULE_ID\u000d\u000a                 ON PRJ.ID = SCHDL.PROJECT_ID\u000d\u000a           WHERE SCHDL.ID = SCHDL.PARENT_ID\u000d\u000a             AND PRJ.USE_YN = ''Y''\u000d\u000a             AND PRJ.ID = :G_PROJECT_ID\u000d\u000a        GROUP BY PRJ.ID\u000d\u000a         ) REMAIN, CODE\u000d\u000aWHERE CODE.CODE_GROUP_ID = ''BG001''\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":IS_ROOT" operator="!=" value="Y">\u000d\u000a SELECT BGD_COST.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        BGD_COST.BUDGET_REMAIN BUDGET_REMAIN\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL,\u000d\u000a        (\u000d\u000a               SELECT P.PROJECT_SCHEDULE_ID, P.AMOUNT, P.SUMMARY, P.MDF_DTTM, P.BUDGET_CODE,\u000d\u000a                      P.AMOUNT - SUM(IF(C.AMOUNT IS NULL, 0, C.AMOUNT)) - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)) BUDGET_REMAIN\u000d\u000a                 FROM BUDGET P LEFT OUTER JOIN COST\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = COST.BUDGET_CODE\u000d\u000a                      LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a                      LEFT OUTER JOIN BUDGET C\u000d\u000a                      ON SCHDL.ID = C.PROJECT_SCHEDULE_ID \u000d\u000a                      AND P.BUDGET_CODE = C.BUDGET_CODE \u000d\u000a                      AND SCHDL.PARENT_ID != C.PROJECT_SCHEDULE_ID\u000d\u000a               GROUP BY P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST, \u000d\u000a        CODE \u000d\u000aWHERE BGD_COST.BUDGET_CODE = CODE.ID\u000d\u000a  AND BGD_COST.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>',2795)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_21',4,'DOCUMENT','true ','SELECT COST.ID, \u000d\u000a       BDG.NAME BUDGET_NAME, \u000d\u000a       PMT.NAME PAYMENT_NAME, \u000d\u000a       CONCAT(FORMAT(COST.AMOUNT,0), '' \uc6d0'') AMOUNT,\u000d\u000a       MBR.NAME EXECUTOR,\u000d\u000a       COST.USE_DTL,\u000d\u000a       COST.RECEIVER,\u000d\u000a       COST.PAYMENT_DATE\u000d\u000a  FROM COST, CODE BDG, CODE PMT, MEMBER MBR\u000d\u000a WHERE COST.BUDGET_CODE = BDG.ID\u000d\u000a   AND COST.PAYMENT_CODE = PMT.ID\u000d\u000a   AND COST.EXECUTOR = MBR.ID\u000d\u000a   AND PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000aORDER BY COST.PAYMENT_DATE DESC\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength',2853)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_22',4,'DOCUMENT','false','SELECT ID PAYMENT_CODE, NAME PAYMENT_NAME \u000d\u000a  FROM CODE\u000d\u000a WHERE CODE_GROUP_ID = ''BG002''',2827)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_23',4,'DOCUMENT','true ',' SELECT BGD_COST.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        BGD_COST.BUDGET_REMAIN BUDGET_REMAIN\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL,\u000d\u000a        (\u000d\u000a               SELECT P.PROJECT_SCHEDULE_ID, P.AMOUNT, P.SUMMARY, P.MDF_DTTM, P.BUDGET_CODE,\u000d\u000a                      P.AMOUNT - SUM(IF(C.AMOUNT IS NULL, 0, C.AMOUNT)) - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)) BUDGET_REMAIN\u000d\u000a                 FROM BUDGET P LEFT OUTER JOIN COST\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = COST.BUDGET_CODE\u000d\u000a                      LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a                      LEFT OUTER JOIN BUDGET C\u000d\u000a                      ON SCHDL.ID = C.PROJECT_SCHEDULE_ID \u000d\u000a                      AND P.BUDGET_CODE = C.BUDGET_CODE \u000d\u000a                      AND SCHDL.PARENT_ID != C.PROJECT_SCHEDULE_ID\u000d\u000a               GROUP BY P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST, \u000d\u000a        CODE \u000d\u000aWHERE BGD_COST.BUDGET_CODE = CODE.ID\u000d\u000a  AND BGD_COST.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID',2841)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_24',4,'DOCUMENT','true ','SELECT COST.BUDGET_CODE BUDGET_CODE, \u000d\u000a       COST.PAYMENT_CODE PAYMENT_CODE, \u000d\u000a       COST.SUMMARY SUMMARY, \u000d\u000a       RGSTER.NAME RGST_MEMBER,\u000d\u000a       COST.RGST_DTTM RGST_DTTM,\u000d\u000a       MDFIER.NAME MDF_MEMBER,\u000d\u000a       COST.MDF_DTTM MDF_DTTM,\u000d\u000a       BDG.NAME BUDGET_NAME,\u000d\u000a       PMT.NAME PAYMENT_TYPE,\u000d\u000a       CONCAT(FORMAT(COST.AMOUNT,0), '' \uc6d0'') AMOUNT,\u000d\u000a       EXCTOR.NAME EXECUTOR,\u000d\u000a       COST.EXECUTOR EXECUTOR_ID,\u000d\u000a       COST.USE_DTL USE_DTL,\u000d\u000a       COST.RECEIVER RECEIVER,\u000d\u000a       COST.PAYMENT_DATE PAYMENT_DATE,\u000d\u000a       COST.FILE_NAME FILE_NAME,\u000d\u000a       COST.ATTATCH_FILE ATTATCH_FILE\u000d\u000a  FROM COST, MEMBER RGSTER, MEMBER MDFIER, MEMBER EXCTOR, CODE BDG, CODE PMT\u000d\u000a WHERE COST.RGST_MEMBER_ID = RGSTER.ID\u000d\u000a   AND COST.MDF_MEMBER_ID = MDFIER.ID\u000d\u000a   AND COST.EXECUTOR = EXCTOR.ID\u000d\u000a   AND COST.BUDGET_CODE = BDG.ID\u000d\u000a   AND COST.PAYMENT_CODE = PMT.ID\u000d\u000a   AND COST.ID = :COST_ID',2852)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_25',4,'DOCUMENT','false','SELECT SEQ(''CONFERENCE'') AS CONFERENCE_ID',2899)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_26',4,'DOCUMENT','true ','SELECT CNFS.ID, \u000d\u000a       CNFS.TITLE, \u000d\u000a       DATE_FORMAT(CNFS.CONFERENCE_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') CONFERENCE_DATE, \u000d\u000a       CNFS.PARTICIPANTS, \u000d\u000a       CNFS.PLACE, \u000d\u000a       DATE_FORMAT(CNFS.FROM_TIME, ''%h:%i %p'') FROM_TIME,\u000d\u000a       DATE_FORMAT(CNFS.TO_TIME, ''%h:%i %p'') TO_TIME,\u000d\u000a       CNFS.RGST_MEMBER_ID MEMBER_ID,\u000d\u000a       MBR.NAME MEMBER_NAME,\u000d\u000a       ORG.NAME MEMBER_ORGANIZATION\u000d\u000a  FROM CONFERENCE CNFS ,MEMBER MBR, PROJECT_MEMBER PMBR, ORGANIZATION ORG\u000d\u000a WHERE CNFS.RGST_MEMBER_ID = PMBR.MEMBER_ID\u000d\u000a   AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a   AND PMBR.ORGANIZATION_ID = ORG.ID\u000d\u000a   AND PMBR.PROJECT_ID = :G_PROJECT_ID\u000d\u000a<dynamic parameter=":S_TITLE" operator="!=" value="null">\u000d\u000a   AND CNFS.TITLE LIKE CONCAT(CONCAT(''%'',:S_TITLE),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_CONFERENCE_DATE" operator="!=" value="null">\u000d\u000a   AND CNFS.CONFERENCE_DATE = STR_TO_DATE(:S_CONFERENCE_DATE, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_MEMBER_ORGANIZATION" operator="!=" value="null">\u000d\u000a   AND ORG.NAME LIKE CONCAT(CONCAT(''%'',:S_MEMBER_ORGANIZATION),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_MEMBER_NAME" operator="!=" value="null">\u000d\u000a   AND MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_MEMBER_NAME),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         CNFS.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         CNFS.TITLE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         CNFS.TITLE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         CNFS.CONFERENCE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         CNFS.FROM_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         CNFS.TO_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="5">\u000d\u000a         ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="6">\u000d\u000a         MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength',3245)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_27',4,'DOCUMENT','true ','SELECT CNFS.ID, \u000d\u000a       CNFS.TITLE, \u000d\u000a       DATE_FORMAT(CNFS.CONFERENCE_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') CONFERENCE_DATE, \u000d\u000a       CNFS.PARTICIPANTS, \u000d\u000a       CNFS.PLACE, \u000d\u000a       DATE_FORMAT(CNFS.FROM_TIME, ''%h:%i %p'') FROM_TIME,\u000d\u000a       DATE_FORMAT(CNFS.TO_TIME, ''%h:%i %p'') TO_TIME,\u000d\u000a       DATE_FORMAT(CNFS.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       CNFS.CONTENTS CONTENTS,\u000d\u000a       CNFS.RGST_MEMBER_ID MEMBER_ID,\u000d\u000a       MBR.NAME MEMBER_NAME,\u000d\u000a       ORG.NAME MEMBER_ORGANIZATION\u000d\u000a  FROM CONFERENCE CNFS ,MEMBER MBR, PROJECT_MEMBER PMBR, ORGANIZATION ORG\u000d\u000a WHERE CNFS.RGST_MEMBER_ID = PMBR.MEMBER_ID\u000d\u000a   AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a   AND PMBR.ORGANIZATION_ID = ORG.ID\u000d\u000a   AND CNFS.ID = :ID',2947)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_28',4,'DOCUMENT','true ','SELECT FILE_NAME, \u000d\u000a       SEQ, \u000d\u000a       IF(SIZE >= 1024*1024, CONCAT(FLOOR(SIZE/(1024*1024)),''MB''), IF(SIZE>=1024, CONCAT(FLOOR(SIZE/1024), ''KB''), CONCAT(SIZE, ''B''))) AS SIZE\u000d\u000a  FROM CONFERENCE_ATTATCHMENT\u000d\u000a WHERE CONFERENCE_ID = :ID\u000d\u000a ORDER BY SEQ ASC',2941)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_29',4,'DOCUMENT','true ','SELECT CONTENT, FILE_NAME FROM CONFERENCE_ATTATCHMENT\u000d\u000aWHERE CONFERENCE_ID = :CONFERENCE_ID\u000d\u000a  AND SEQ = :SEQ',2948)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_30',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            ''\uc77c\uc77c\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ''\uc8fc\uac04\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            ''\uc6d4\uac04\ubcf4\uace0''\u000d\u000a       END AS RPT_TYPE_NAME,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            DATEDIFF(RPT.RGST_DTTM, DATE_FORMAT(''20130812'', ''%Y%m%d'')) + 1\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1)\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1\u000d\u000a       END AS DIFF_COUNT,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''))\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(RPT.RGST_DTTM), ''%Y\ub144 %m\uc6d4 %d\uc77c'')), \u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(PJT.FROM_DATE), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       END AS PERIOD,\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID\u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND PJT.ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND PJT.ID = RPT_PMBR.PROJECT_ID\u000d\u000a<dynamic parameter=":S_RQ_CUR" operator="==" value="Y">\u000d\u000a   AND CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(CURRENT_DATE, ''%Y-%m-%d'')\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            (WEEK(RPT.RGST_DTTM) = WEEK(CURRENT_DATE) AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y'') = STR_TO_DATE(CURRENT_DATE, ''%Y''))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m'') = STR_TO_DATE(CURRENT_DATE, ''%Y-%m'')\u000d\u000a       END\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="!=" value="null">\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER_ID" operator="!=" value="null">\u000d\u000a   AND RPT.RECEIVER = :S_RECEIVER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_MEMBER" operator="!=" value="null">\u000d\u000a   AND RPT_MBR.NAME CONCAT(CONCAT(''%'',:S_RGST_MEMBER),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a         RPT.REPORT_TYPE DESC,\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         RPT.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         RPT_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         RPT_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength',3282)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_31',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1) WEEK_COUNT, \u000d\u000a       PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1 MONTH_COUNT, \u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="==" value="RPTYPRT002">\u000d\u000a       IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a       CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a       CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       PERIOD,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="==" value="RPTYPRT003">\u000d\u000a       IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a       CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), LAST_DAY(RPT.RGST_DTTM)), \u000d\u000a       CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), LAST_DAY(PJT.FROM_DATE)))\u000d\u000a       PERIOD, \u000d\u000a</dynamic>\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %h\uc2dc %i\ubd84'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID,\u000d\u000a       RPT.CURRENT CURRENT,\u000d\u000a       RPT.NEXT NEXT,\u000d\u000a       RPT.EVALUATION EVALUATION,\u000d\u000a       RPT.ISSUE ISSUE       \u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a   AND RPT.ID = :ID',3202)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_32',4,'DOCUMENT','true ','SELECT DR.ID ID,\u000d\u000a       DR.TITLE TITLE,\u000d\u000a       CODE.NAME DECISION_STATUS,\u000d\u000a       DATE_FORMAT(DR.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       DATE_FORMAT(DR.DUE_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') DUE_DATE,\u000d\u000a       DR.RGST_MEMBER_ID MEMBER_ID,\u000d\u000a       MBR_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       MBR.NAME MEMBER_NAME,\u000d\u000a       DR.RECEIVER RECEIVER_ID,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER\u000d\u000a  FROM DECISION_REQUEST DR, \u000d\u000a       PROJECT_MEMBER PMBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       ORGANIZATION MBR_ORG, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       MEMBER MBR,\u000d\u000a       MEMBER RCV_MBR,\u000d\u000a       CODE\u000d\u000a WHERE DR.RGST_MEMBER_ID = PMBR.MEMBER_ID\u000d\u000a   AND DR.PROJECT_ID = PMBR.PROJECT_ID\u000d\u000a   AND DR.PROJECT_ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND DR.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND PMBR.ORGANIZATION_ID = MBR_ORG.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND DR.DECISION_STATUS = CODE.ID\u000d\u000a   AND DR.GROUP_ID = DR.ID\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000a   AND DR.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_TITLE" operator="!=" value="null">\u000d\u000a   AND DR.TITLE LIKE CONCAT(CONCAT(''%'',:S_TITLE),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_DECISION_STATUS" operator="!=" value="null">\u000d\u000a   AND DR.DECISION_STATUS = :S_DECISION_STATUS\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RQ_TO_ME" operator="!=" value="null">\u000d\u000a   AND (DR.DECISION_STATUS = ''DCSSTPR001'' OR DR.DECISION_STATUS = ''DCSSTPR002'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(DR.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_MEMBER_NAME" operator="!=" value="null">\u000d\u000a   AND MBR.NAME = LIKE CONCAT(CONCAT(''%'',:S_MEMBER_NAME),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME = LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER_ID" operator="!=" value="null">\u000d\u000a   AND DR.RECEIVER = :S_RECEIVER_ID\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         DR.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         DR.TITLE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         DR.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         DR.DUE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         MBR_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="5">\u000d\u000a         MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="6">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="7">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength',3259)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_33',4,'DOCUMENT','false','SELECT SEQ(''DECISION_REQUEST'') AS ID',3058)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_34',4,'DOCUMENT','true ','SELECT DR.TITLE TITLE,\u000d\u000a       DR.DECISION_STATUS STATUS_CODE,\u000d\u000a       DR.GROUP_ID GROUP_ID,\u000d\u000a       CODE.NAME DECISION_STATUS,\u000d\u000a       DATE_FORMAT(DR.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       DATE_FORMAT(DR.DUE_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') DUE_DATE,\u000d\u000a       IF(DR.DECISION_DATE IS NULL, '''', DATE_FORMAT(DR.DECISION_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'')) DECISION_DATE,\u000d\u000a       DR.RGST_MEMBER_ID MEMBER_ID,\u000d\u000a       MBR_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       MBR.NAME MEMBER_NAME,\u000d\u000a       DR.RECEIVER RECEIVER_ID,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       IF(DR.CONTENTS IS NULL, '''', DR.CONTENTS) CONTENTS\u000d\u000a  FROM DECISION_REQUEST DR, \u000d\u000a       PROJECT_MEMBER PMBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       ORGANIZATION MBR_ORG, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       MEMBER MBR,\u000d\u000a       MEMBER RCV_MBR,\u000d\u000a       CODE\u000d\u000a WHERE DR.RGST_MEMBER_ID = PMBR.MEMBER_ID\u000d\u000a   AND DR.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND PMBR.ORGANIZATION_ID = MBR_ORG.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND DR.DECISION_STATUS = CODE.ID\u000d\u000a   AND DR.PROJECT_ID = :G_PROJECT_ID\u000d\u000a   AND DR.ID = :ID',3185)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_35',4,'DOCUMENT','true ','SELECT FILE_NAME, \u000d\u000a       SEQ, \u000d\u000a       IF(SIZE >= 1024*1024, CONCAT(FLOOR(SIZE/(1024*1024)),''MB''), IF(SIZE>=1024, CONCAT(FLOOR(SIZE/1024), ''KB''), CONCAT(SIZE, ''B''))) AS SIZE\u000d\u000a  FROM DECISION_ATTATCHMENT\u000d\u000a WHERE DECISION_REQUEST_ID = :ID\u000d\u000a ORDER BY SEQ ASC',3115)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_36',4,'DOCUMENT','true ','SELECT CONTENT, FILE_NAME FROM DECISION_ATTATCHMENT\u000d\u000aWHERE DECISION_REQUEST_ID = :DECISION_REQUEST_ID\u000d\u000a  AND SEQ = :SEQ',3116)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_37',4,'DOCUMENT','true ','SELECT GROUP_ID FROM DECISION_REQUEST\u000d\u000aWHERE ID = :ID',3162)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_38',4,'DOCUMENT','true ','SELECT DR.OPINION, ORG.NAME ORGANIZATION, CODE.NAME ROLE, MBR.NAME RECEIVER_NAME, DATE_FORMAT(OPINION_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i'') OPINION_DATE\u000d\u000a  FROM\u000d\u000a      (\u000d\u000a      SELECT IF(ID = GROUP_ID, OPINION, CONTENTS) OPINION, \u000d\u000a             IF(ID = GROUP_ID, RECEIVER, RGST_MEMBER_ID) RECEIVER_ID,\u000d\u000a             IF(ID = GROUP_ID, DECISION_DATE, RGST_DTTM) OPINION_DATE\u000d\u000a        FROM DECISION_REQUEST\u000d\u000a       WHERE GROUP_ID = :GROUP_ID\u000d\u000a      ) DR,\u000d\u000a      PROJECT_MEMBER PMBR, MEMBER MBR, ORGANIZATION ORG, ROLE, CODE\u000d\u000aWHERE DR.RECEIVER_ID = PMBR.MEMBER_ID\u000d\u000a  AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a  AND PMBR.ORGANIZATION_ID = ORG.ID\u000d\u000a  AND PMBR.ORGANIZATION_ID = ROLE.ORGANIZATION_ID\u000d\u000a  AND PMBR.MEMBER_ID = ROLE.MEMBER_ID \u000d\u000a  AND ROLE.ROLE_CODE = CODE.ID\u000d\u000a  AND OPINION IS NOT NULL\u000d\u000aORDER BY OPINION_DATE DESC',3195)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.select.project_r_39',4,'DOCUMENT','true ','SELECT SCHDL.ID ID, \u000d\u000a       TP_CD.NAME SCHDL_TYPE, \u000d\u000a       SCHDL.SCHDL_TYPE SCHDL_TYPE_CD,\u000d\u000a       DATE_FORMAT(SCHDL.FROM_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') FROM_DATE, \u000d\u000a       DATE_FORMAT(SCHDL.TO_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') TO_DATE, \u000d\u000a       SCHDL.TITLE TITLE, \u000d\u000a       MBR.NAME RGST_MEMBER_NAME,\u000d\u000a       SCHDL.RGST_MEMBER_ID RGST_MEMBER_ID, \u000d\u000a       DATE_FORMAT(SCHDL.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM\u000d\u000a  FROM PROJECT_SCHEDULE SCHDL, CODE TP_CD, MEMBER MBR\u000d\u000a WHERE SCHDL.SCHDL_TYPE = TP_CD.ID\u000d\u000a   AND SCHDL.RGST_MEMBER_ID = MBR.ID\u000d\u000a   AND ASSIGNEE = :ASSIGNEE\u000d\u000a   AND SCHDL_STATUS = ''ST002ST001''\u000d\u000a   AND SCHDL.TO_DATE <= CURRENT_DATE\u000d\u000aORDER BY \u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         SCHDL.TO_DATE DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         SCHDL.TITLE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         TP_CD.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         SCHDL.FROM_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         SCHDL.TO_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="5">\u000d\u000a         SCHDL.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>',3292)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.update',3,'FOLDER','false','',NULL)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.update.project_u_01',4,'DOCUMENT','true ','UPDATE PROJECT\u000d\u000aSET\u000d\u000a<dynamic parameter=":TITLE" operator="!=" value="null">\u000d\u000aTITLE=:TITLE,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SUMMARY" operator="!=" value="null">\u000d\u000aSUMMARY=REPLACE(REPLACE(REPLACE(REPLACE(:SUMMARY, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), " ","&nbsp;&nbsp;"),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MANAGER" operator="!=" value="null">\u000d\u000aMANAGER=:MANAGER,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MANAGER_ORGANIZATION_NAME" operator="!=" value="null">\u000d\u000aMANAGER_ORGANIZATION_NAME=:MANAGER_ORGANIZATION_NAME,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MANAGER_ROLE_NAME" operator="!=" value="null">\u000d\u000aMANAGER_ROLE_NAME=:MANAGER_ROLE_NAME,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":BUDGET_AMOUNT" operator="!=" value="null">\u000d\u000aBUDGET_AMOUNT=:BUDGET_AMOUNT,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":FROM_DATE" operator="!=" value="null">\u000d\u000aFROM_DATE=STR_TO_DATE(:FROM_DATE, ''%Y-%m-%d''),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":TO_DATE" operator="!=" value="null">\u000d\u000aTO_DATE=STR_TO_DATE(:TO_DATE, ''%Y-%m-%d''),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PRJ_STATUS" operator="!=" value="null">\u000d\u000aPRJ_STATUS=:PRJ_STATUS,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_YN" operator="!=" value="null">\u000d\u000aUSE_YN=:USE_YN,\u000d\u000a</dynamic>\u000d\u000aMDF_MEMBER_ID=:LOGIN_MEMBER, \u000d\u000aMDF_DTTM=CURRENT_TIMESTAMP\u000d\u000aWHERE ID = :ID',2259)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.update.project_u_02',4,'DOCUMENT','true ','UPDATE PROJECT_MEMBER\u000d\u000aSET \u000d\u000aMEMBER_ID = :MEMBER_ID, \u000d\u000aORGANIZATION_ID = :ORGANIZATION_ID\u000d\u000aWHERE 1=1\u000d\u000aAND PROJECT_ID = :PROJECT_ID\u000d\u000aAND MEMBER_ID = :OLD_MANAGER',2625)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.update.project_u_03',4,'DOCUMENT','true ','UPDATE PROJECT_SCHEDULE \u000d\u000aSET \u000d\u000a<dynamic parameter=":SCHDL_TYPE" operator="!=" value="null">\u000d\u000aSCHDL_TYPE = :SCHDL_TYPE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":TITLE" operator="!=" value="null">\u000d\u000aTITLE = :TITLE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCHDL_STATUS" operator="!=" value="null">\u000d\u000aSCHDL_STATUS = :SCHDL_STATUS, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":ASSIGNEE" operator="!=" value="null">\u000d\u000aASSIGNEE = :ASSIGNEE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":FROM_DATE" operator="!=" value="null">\u000d\u000aFROM_DATE = :FROM_DATE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":TO_DATE" operator="!=" value="null">\u000d\u000aTO_DATE = :TO_DATE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SUMMARY" operator="!=" value="null">\u000d\u000aSUMMARY = REPLACE(REPLACE(REPLACE(REPLACE(:SUMMARY, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), " ","&nbsp;&nbsp;"),\u000d\u000a</dynamic>\u000d\u000aMDF_MEMBER_ID=:LOGIN_MEMBER, \u000d\u000aMDF_DTTM=CURRENT_TIMESTAMP\u000d\u000aWHERE PROJECT_ID = :PROJECT_ID\u000d\u000aAND ID = :ID',2628)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.update.project_u_04',4,'DOCUMENT','true ','UPDATE BUDGET\u000d\u000a   SET BUDGET_CODE = :BUDGET_CODE,\u000d\u000a       AMOUNT = :BUDGET_AMOUNT,\u000d\u000a       SUMMARY = :SUMMARY,\u000d\u000a       MDF_MEMBER_ID = :LOGIN_MEMBER,\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE 1=1\u000d\u000a   AND PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a   AND BUDGET_CODE = :ORG_BUDGET_CODE',2735)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.update.project_u_05',4,'DOCUMENT','true ','UPDATE COST\u000d\u000a   SET BUDGET_CODE = :BUDGET_CODE,\u000d\u000a       USE_DTL = :USE_DTL,\u000d\u000a       PAYMENT_CODE = :PAYMENT_CODE,\u000d\u000a       PAYMENT_DATE = STR_TO_DATE(:PAYMENT_DATE, ''%Y-%m-%d'') ,\u000d\u000a       SUMMARY = REPLACE(REPLACE(REPLACE(REPLACE(:SUMMARY, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), " ","&nbsp;&nbsp;"),\u000d\u000a       AMOUNT = :AMOUNT,\u000d\u000a       EXECUTOR = :EXECUTOR,\u000d\u000a       RECEIVER = :RECEIVER,\u000d\u000a<dynamic parameter=":FILE_UPD" operator="==" value="Y">\u000d\u000a       ATTATCH_FILE = :CONTENT,\u000d\u000a       FILE_NAME = :CONTENT_FILE_NAME,\u000d\u000a       FILE_SIZE = :CONTENT_FILE_SIZE,\u000d\u000a</dynamic>\u000d\u000a       MDF_MEMBER_ID = :LOGIN_MEMBER,\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE ID = :COST_ID',3251)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.update.project_u_06',4,'DOCUMENT','true ','UPDATE CONFERENCE\u000d\u000a   SET TITLE = :TITLE,\u000d\u000a       CONFERENCE_DATE = STR_TO_DATE(:CONFERENCE_DATE, ''%Y-%m-%d''),\u000d\u000a       PARTICIPANTS = :PARTICIPANTS,\u000d\u000a       PLACE = :PLACE,\u000d\u000a       FROM_TIME = STR_TO_DATE(:FROM_TIME, ''%h:%i %p''),\u000d\u000a       TO_TIME = STR_TO_DATE(:TO_TIME, ''%h:%i %p''),\u000d\u000a       CONTENTS = REPLACE(REPLACE(REPLACE(:CONTENTS, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"'')\u000d\u000a WHERE PROJECT_ID = :G_PROJECT_ID\u000d\u000a   AND ID = :ID',2956)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.update.project_u_07',4,'DOCUMENT','true ','UPDATE REPORT\u000d\u000a   SET RECEIVER = :RECEIVER,\u000d\u000a       CURRENT = REPLACE(REPLACE(REPLACE(:CURRENT, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"'') ,\u000d\u000a       NEXT = REPLACE(REPLACE(REPLACE(:NEXT, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"'') ,\u000d\u000a       EVALUATION = REPLACE(REPLACE(REPLACE(:EVALUATION, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"'') ,\u000d\u000a       ISSUE = REPLACE(REPLACE(REPLACE(:ISSUE, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"'')\u000d\u000a WHERE ID = :ID\u000d\u000a   AND PROJECT_ID = :G_PROJECT_ID\u000d\u000a   AND REPORT_TYPE = :REPORT_TYPE',2993)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.update.project_u_08',4,'DOCUMENT','true ','UPDATE DECISION_REQUEST\u000d\u000aSET \u000d\u000aRECEIVER = :RECEIVER, \u000d\u000aDUE_DATE = STR_TO_DATE(:DUE_DATE, ''%Y-%m-%d''), \u000d\u000aTITLE = :TITLE, \u000d\u000aCONTENTS = REPLACE(REPLACE(REPLACE(:CONTENTS, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"''), \u000d\u000aMDF_MEMBER_ID = :LOGIN_MEMBER, \u000d\u000aMDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE ID = :ID\u000d\u000a',3133)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.update.project_u_09',4,'DOCUMENT','true ','UPDATE DECISION_REQUEST DR, \u000d\u000a       (SELECT GROUP_ID FROM DECISION_REQUEST WHERE ID = :ID) GI\u000d\u000aSET DR.DECISION_STATUS = :DECISION_STATUS,\u000d\u000a    DR.OPINION = REPLACE(REPLACE(REPLACE(:OPINION, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"''),\u000d\u000a    DR.MDF_MEMBER_ID = :LOGIN_MEMBER,\u000d\u000a    DR.DECISION_DATE = CURRENT_TIMESTAMP,\u000d\u000a    DR.MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE DR.GROUP_ID = GI.GROUP_ID;',3198)
INSERT INTO SQL_STORAGE VALUES('PMS','pms.project.update.project_u_10',4,'DOCUMENT','true ','UPDATE DECISION_REQUEST\u000d\u000aSET DECISION_STATUS = :DECISION_STATUS,\u000d\u000a    RECEIVER = :RECEIVER,\u000d\u000a    MDF_MEMBER_ID = :LOGIN_MEMBER,\u000d\u000a    MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE GROUP_ID = :GROUP_ID;',3201)
INSERT INTO SQL_STORAGE VALUES('ReadByLengthField','member_login',1,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member for login\u000d\u000a*/\u000d\u000aSELECT IF(COUNT(*) > 0, ''Y'', ''N'') AS ACCESS_YN\u000d\u000a  FROM ACCESS_LIST, ROLE\u000d\u000a WHERE ROLE.MEMBER_ID = ACCESS_LIST.ROLE_MEMBER_ID\u000d\u000a   AND ROLE.ORGANIZATION_ID = ACCESS_LIST.ORGANIZATION_ID\u000d\u000a   AND ACCESS_LIST.ROLE_MEMBER_ID = :ID\u000d\u000a   AND ROLE.USE_YN = ''Y''',2021)
INSERT INTO SQL_STORAGE_H VALUES('FlexibleTest','nist','2013-03-18 13:38:51.156000',1,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('FlexibleTest','nist.aaa','2013-03-18 13:38:51.156000',2,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('FlexibleTest','nist.aaa.ABD','2013-03-18 13:38:51.156000',3,'DOCUMENT','false','SELECT')
INSERT INTO SQL_STORAGE_H VALUES('FlexibleTest','nist.aaa.aa','2013-03-18 13:38:51.156000',3,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('FlexibleTest','nist.aaa.aa.adsf','2013-03-18 13:38:51.156000',4,'DOCUMENT','false','SELECT SELECT')
INSERT INTO SQL_STORAGE_H VALUES('FlexibleTest','nist.aaa.aa.asdf','2013-03-18 13:38:51.156000',4,'DOCUMENT','false','SELECT')
INSERT INTO SQL_STORAGE_H VALUES('FlexibleTest','nist.aaa.aa.sdfsdf','2013-03-18 13:38:51.156000',4,'DOCUMENT','false','SELECT')
INSERT INTO SQL_STORAGE_H VALUES('FlexibleTest','nist.aaa.test','2013-03-18 13:38:51.156000',3,'DOCUMENT','false','SELECT')
INSERT INTO SQL_STORAGE_H VALUES('FlexibleTest','nist.test','2013-03-18 13:38:51.156000',2,'DOCUMENT','false','\u000d\u000a\u000d\u000aSELECT')
INSERT INTO SQL_STORAGE_H VALUES('FlexibleTest','test','2013-03-18 13:38:51.156000',1,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('FlexibleTest','test.adfsde','2013-03-18 13:38:51.156000',2,'DOCUMENT','false','SELECT')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist','2013-03-18 13:38:51.156000',1,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board','2013-03-18 13:38:51.156000',2,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.delete','2013-03-18 13:38:51.156000',3,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.delete.board_comment_d_01','2013-04-04 15:53:54.384000',4,'DOCUMENT','true ','DELETE \u000d\u000a  FROM BOARD_COMMENT\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a<dynamic parameter=":SEQ" operator="!=" value="null">\u000d\u000a   AND SEQ = :SEQ\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.delete.board_d_01','2013-04-04 15:53:59.587000',4,'DOCUMENT','true ','DELETE FROM BOARD\u000d\u000aWHERE BOARD_ID = :BOARD_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.delete.board_file_d_01','2013-04-04 15:54:04.462000',4,'DOCUMENT','true ','DELETE FROM BOARD_FILE\u000d\u000aWHERE BOARD_ID = :BOARD_ID\u000d\u000a<dynamic parameter=":SEQ" operator="!=" value="null">\u000d\u000a  AND SEQ = :SEQ\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.insert','2013-03-18 13:38:51.156000',3,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.insert.board_comment_i_01','2013-04-04 15:54:12.743000',4,'DOCUMENT','true ','<dynamic parameter=":SEQ" operator="==" value="null">\u000d\u000aINSERT INTO BOARD_COMMENT\u000d\u000a(BOARD_ID, SEQ, CONTENT, MEMBER_ID, RGST_DTTM, MDF_DTTM)\u000d\u000aSELECT :BOARD_ID                            AS BOARD_ID, \u000d\u000a       IF(MAX(SEQ) IS NULL , 0, MAX(SEQ)+1) AS SEQ, \u000d\u000a       REPLACE(REPLACE(REPLACE(:CONTENT, ''\r\n'', ''<BR>''), ''\"'', ''\\"''), " ","&nbsp;&nbsp;") AS CONTENT, \u000d\u000a       :LOGIN_MEMBER                        AS MEMBER_ID, \u000d\u000a       CURRENT_TIMESTAMP                    AS RGST_DTTM, \u000d\u000a       CURRENT_TIMESTAMP                    AS MDF_DTTM\u000d\u000a  FROM BOARD_COMMENT\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SEQ" operator="!=" value="null">\u000d\u000aUPDATE BOARD_COMMENT\u000d\u000a   SET CONTENT = REPLACE(REPLACE(REPLACE(:CONTENT, ''\r\n'', ''<BR>''), ''\"'', ''\\"''), " ","&nbsp;&nbsp;"), \u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a   AND SEQ = :SEQ\u000d\u000a</dynamic>\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.insert.board_file_i_01','2013-04-04 15:54:17.509000',4,'DOCUMENT','true ','<dynamic parameter=":BOARD_ID" operator="==" value="null">\u000d\u000aINSERT INTO BOARD_FILE\u000d\u000a(BOARD_ID, SEQ, CONTENT, FILE_NAME, SIZE)\u000d\u000aSELECT F.BOARD_ID,\u000d\u000a       F.SEQ,\u000d\u000a       U.CONTENT,\u000d\u000a       U.FILE_NAME,\u000d\u000a       U.SIZE\u000d\u000a  FROM (SELECT :TMP_BOARD_ID AS BOARD_ID,\u000d\u000a                IF(MAX(F.SEQ) IS NULL , 0, MAX(F.SEQ)+1) AS SEQ,\u000d\u000a                :TMP_FILE_UP_ID AS ID\u000d\u000a                FROM BOARD_FILE F \u000d\u000a          WHERE F.BOARD_ID = :TMP_BOARD_ID) AS F,\u000d\u000a       TMP_UPLOAD_FILE U\u000d\u000a WHERE F.ID = U.ID\u000d\u000a   AND U.ID = :TMP_FILE_UP_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":BOARD_ID" operator="!=" value="null">\u000d\u000aINSERT INTO BOARD_FILE\u000d\u000a(BOARD_ID, SEQ, CONTENT, FILE_NAME, SIZE)\u000d\u000aSELECT F.BOARD_ID,\u000d\u000a       F.SEQ,\u000d\u000a       U.CONTENT,\u000d\u000a       U.FILE_NAME,\u000d\u000a       U.SIZE\u000d\u000a  FROM (SELECT :BOARD_ID AS BOARD_ID,\u000d\u000a                IF(MAX(F.SEQ) IS NULL , 0, MAX(F.SEQ)+1) AS SEQ,\u000d\u000a                :TMP_FILE_UP_ID AS ID\u000d\u000a                FROM BOARD_FILE F \u000d\u000a          WHERE F.BOARD_ID = :BOARD_ID) AS F,\u000d\u000a       TMP_UPLOAD_FILE U\u000d\u000a WHERE F.ID = U.ID\u000d\u000a   AND U.ID = :TMP_FILE_UP_ID\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.insert.board_i_01','2013-04-04 15:54:22.681000',4,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.23\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new article on board\u000d\u000a*/\u000d\u000a<dynamic parameter=":BOARD_ID" operator="==" value="null">\u000d\u000aINSERT INTO BOARD\u000d\u000a(\u000d\u000aBOARD_ID, AUTHOR, BOARD_MASTER_ID, CONTENT, TITLE, REVIEW_CNT, RGST_DTTM, MDF_DTTM\u000d\u000a)\u000d\u000aVALUES\u000d\u000a(\u000d\u000a:TMP_BOARD_ID, :LOGIN_MEMBER, :BOARD_MASTER_ID, REPLACE(REPLACE(:CONTENT, ''\r\n'', ''\\r\\n''), ''\"'', ''\\"''), :TITLE, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP\u000d\u000a)\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":BOARD_ID" operator="!=" value="null">\u000d\u000aUPDATE BOARD \u000d\u000a   SET TITLE = :TITLE,\u000d\u000a       CONTENT = REPLACE(REPLACE(:CONTENT, ''\r\n'', ''\\r\\n''), ''\"'', ''\\"''),\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.insert.board_master_i_01','2013-04-04 15:54:26.587000',4,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.27\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate board master.\u000d\u000a*/\u000d\u000aINSERT INTO BOARD_MASTER \u000d\u000a                        (\u000d\u000a                        ID, \u000d\u000a                        TITLE,\u000d\u000a                        MAX_ROW_NUM,\u000d\u000a                        USE_REPLY,\u000d\u000a                        USE_FILE_ATMT,\u000d\u000a                        BOARD_WIDTH,\u000d\u000a                        USE_YN,\u000d\u000a                        RGST_DTTM,\u000d\u000a                        MDF_DTTM\u000d\u000a                        ) \u000d\u000a                        VALUES\u000d\u000a                        (\u000d\u000a                        SEQ(''BOARD_MASTER''), \u000d\u000a                        :TITLE, \u000d\u000a                        :MAX_ROW_NUM,\u000d\u000a                        :USE_REPLY, \u000d\u000a                        :USE_FILE_ATMT,\u000d\u000a                        :BOARD_WIDTH, \u000d\u000a                        :USE_YN, \u000d\u000a                        CURRENT_TIMESTAMP,\u000d\u000a                        CURRENT_TIMESTAMP\u000d\u000a                        )')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.insert.boardmaster_i_01','2013-03-18 13:38:51.156000',4,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.27\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate board master.\u000d\u000a*/\u000d\u000aINSERT INTO BOARD_MASTER \u000d\u000a                        (\u000d\u000a                        ID, \u000d\u000a                        TITLE,\u000d\u000a                        MAX_ROW_NUM,\u000d\u000a                        USE_REPLY,\u000d\u000a                        USE_FILE_ATMT,\u000d\u000a                        BOARD_WIDTH,\u000d\u000a                        USE_YN,\u000d\u000a                        RGST_DTTM,\u000d\u000a                        MDF_DTTM\u000d\u000a                        ) \u000d\u000a                        VALUES\u000d\u000a                        (\u000d\u000a                        SEQ(''BOARD_MASTER''), \u000d\u000a                        :TITLE, \u000d\u000a                        :MAX_ROW_NUM,\u000d\u000a                        :USE_REPLY, \u000d\u000a                        :USE_FILE_ATMT,\u000d\u000a                        :BOARD_WIDTH, \u000d\u000a                        :USE_YN, \u000d\u000a                        CURRENT_TIMESTAMP,\u000d\u000a                        CURRENT_TIMESTAMP\u000d\u000a                        )')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.select','2013-03-18 13:38:51.156000',3,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.select.board_comment_r_01','2013-04-04 15:54:35.165000',4,'DOCUMENT','true ','SELECT COMMENT.SEQ, \u000d\u000a       MEMBER.NAME AS MEMBER_NAME,\u000d\u000a       MEMBER.PHOTO,\u000d\u000a       COMMENT.CONTENT, \u000d\u000a       COMMENT.MEMBER_ID, \u000d\u000a       DATE_FORMAT(COMMENT.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %r'') MDF_DTTM\u000d\u000a  FROM BOARD_COMMENT COMMENT\u000d\u000a       LEFT OUTER JOIN VW_MEMBER MEMBER ON MEMBER.ID   = COMMENT.MEMBER_ID\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a ORDER BY COMMENT.MDF_DTTM ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.select.board_file_r_01','2013-04-04 15:54:38.353000',4,'DOCUMENT','true ','SELECT FILE_NAME, \u000d\u000a       SEQ, \u000d\u000a       IF(SIZE >= 1024*1024, CONCAT(FLOOR(SIZE/(1024*1024)),''MB''), IF(SIZE>=1024, CONCAT(FLOOR(SIZE/1024), ''KB''), CONCAT(SIZE, ''B''))) AS SIZE\u000d\u000a  FROM BOARD_FILE\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a ORDER BY SEQ ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.select.board_file_r_02','2013-04-04 15:54:43.681000',4,'DOCUMENT','true ','SELECT CONTENT, FILE_NAME FROM BOARD_FILE\u000d\u000aWHERE BOARD_ID = :BOARD_ID\u000d\u000a  AND SEQ = :SEQ')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.select.board_master_r_01','2013-04-04 15:54:47.665000',4,'DOCUMENT','true ','<dynamic parameter=":EXC_ORDER" operator="==" value="null">\u000d\u000aSELECT COUNT(*) TOTAL_CNT, :page AS page,\u000d\u000a        ''1'' AS EXC_ORDER\u000d\u000a   FROM BOARD_MASTER\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXC_ORDER" operator="!=" value="null">\u000d\u000aSELECT ID,\u000d\u000a       TITLE,\u000d\u000a       MAX_ROW_NUM,\u000d\u000a       USE_REPLY,\u000d\u000a       USE_FILE_ATMT,\u000d\u000a       BOARD_WIDTH,\u000d\u000a       USE_YN,\u000d\u000a       RGST_DTTM,\u000d\u000a       MDF_DTTM\u000d\u000a  FROM BOARD_MASTER\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="TITLE">\u000d\u000aTITLE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="USE_YN">\u000d\u000aUSE_YN\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.select.board_master_r_02','2013-04-04 15:54:50.915000',4,'DOCUMENT','true ','SELECT *\u000d\u000aFROM BOARD_MASTER\u000d\u000aWHERE ID = :BOARD_MASTER_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.select.board_r_01','2013-04-04 15:54:55.196000',4,'DOCUMENT','true ','<dynamic parameter=":EXC_ORDER" operator="==" value="null">\u000d\u000aSELECT COUNT(*) TOTAL_CNT,\u000d\u000a        ''1'' AS EXC_ORDER\u000d\u000aFROM BOARD, MEMBER\u000d\u000aWHERE MEMBER.ID = BOARD.AUTHOR\u000d\u000a  AND BOARD.BOARD_MASTER_ID = :BOARD_MASTER_ID\u000d\u000a<dynamic parameter=":sSearch" operator="!=" value="">\u000d\u000a  AND (BOARD.TITLE   LIKE CONCAT(CONCAT(''%'', :sSearch), ''%'') OR\u000d\u000a       MEMBER.NAME   LIKE CONCAT(CONCAT(''%'', :sSearch), ''%'') OR\u000d\u000a       BOARD.CONTENT LIKE CONCAT(CONCAT(''%'', :sSearch), ''%''))\u000d\u000a</dynamic>\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXC_ORDER" operator="!=" value="null">\u000d\u000aSELECT BOARD_ID, \u000d\u000a       TITLE, \u000d\u000a       CONCAT(CONCAT(BOARD.AUTHOR, '':''), MEMBER.NAME) AS AUTHOR,\u000d\u000a       DATE_FORMAT(BOARD.RGST_DTTM,''%Y-%m-%d'') AS RGST_DTTM,\u000d\u000a       REVIEW_CNT\u000d\u000a  FROM BOARD, MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND MEMBER.ID = BOARD.AUTHOR\u000d\u000a   AND BOARD_MASTER_ID = :BOARD_MASTER_ID\u000d\u000a<dynamic parameter=":sSearch" operator="!=" value="">\u000d\u000a   AND (BOARD.TITLE   LIKE CONCAT(CONCAT(''%'', :sSearch), ''%'') OR\u000d\u000a       MEMBER.NAME   LIKE CONCAT(CONCAT(''%'', :sSearch), ''%'') OR\u000d\u000a       BOARD.CONTENT LIKE CONCAT(CONCAT(''%'', :sSearch), ''%''))\u000d\u000a</dynamic>\u000d\u000aORDER BY \u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a      BOARD.RGST_DTTM DESC\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a       BOARD.TITLE\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a       MEMBER.NAME\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a       BOARD.RGST_DTTM \u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a       ASC\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a       DESC\u000d\u000a    </dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.select.board_r_02','2013-04-04 15:54:58.962000',4,'DOCUMENT','true ','SELECT BOARD.TITLE, \u000d\u000a       IF(MEMBER.ID IS NULL, IF(LECTURER.ID IS NULL, '''', LECTURER.NAME), MEMBER.NAME) AUTHOR,\u000d\u000a       BOARD.AUTHOR ID,\u000d\u000a       DATE_FORMAT(BOARD.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %r'') RGST_DTTM,\u000d\u000a       DATE_FORMAT(BOARD.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %r'') MDF_DTTM,\u000d\u000a       BOARD.CONTENT\u000d\u000a  FROM BOARD\u000d\u000a       LEFT OUTER JOIN MEMBER   ON MEMBER.ID   = BOARD.AUTHOR\u000d\u000a       LEFT OUTER JOIN LECTURER ON LECTURER.ID = BOARD.AUTHOR\u000d\u000a WHERE BOARD_ID = :BOARD_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.select.board_r_03','2013-04-04 15:55:02.118000',4,'DOCUMENT','true ','SELECT TITLE, CONTENT\u000d\u000a  FROM BOARD\u000d\u000a WHERE BOARD_ID = :BOARD_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.select.board_r_04','2013-04-11 09:55:25.515000',4,'DOCUMENT','false','<dynamic parameter=":BOARD_ID" operator="==" value="null">\u000d\u000aSELECT SEQ(''BOARD'') AS TMP_BOARD_ID FROM DUAL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":BOARD_ID" operator="!=" value="null">\u000d\u000aSELECT '''' TMP FROM DUAL WHERE 1=2\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.select.board_r_04','2013-04-11 10:01:49.062000',4,'DOCUMENT','false','<dynamic parameter=":BOARD_ID" operator="==" value="null">\u000d\u000aSELECT SEQ(''BOARD'') AS TMP_BOARD_ID FROM DUAL\u000d\u000a</dynamic> \u000d\u000a<dynamic parameter=":BOARD_ID" operator="!=" value="null">\u000d\u000aSELECT '''' TMP FROM DUAL WHERE 1=2\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.select.board_r_04','2013-04-11 10:01:51.718000',4,'DOCUMENT','false','<dynamic parameter=":BOARD_ID" operator="==" value="null">\u000d\u000aSELECT SEQ(''BOARD'') AS TMP_BOARD_ID FROM DUAL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":BOARD_ID" operator="!=" value="null">\u000d\u000aSELECT '''' TMP FROM DUAL WHERE 1=2\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.select.board_r_04','2013-04-11 10:04:44.375000',4,'DOCUMENT','true ','<dynamic parameter=":BOARD_ID" operator="==" value="null">\u000d\u000aSELECT SEQ(''BOARD'') AS TMP_BOARD_ID, :BOARD_ID AS TT FROM DUAL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":BOARD_ID" operator="!=" value="null">\u000d\u000aSELECT '''' TMP FROM DUAL WHERE 1=2\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.select.board_r_04','2013-04-11 10:07:50.140000',4,'DOCUMENT','false','<dynamic parameter=":BOARD_ID" operator="==" value="null">\u000d\u000aSELECT SEQ(''BOARD'') AS TMP_BOARD_ID AS TT FROM DUAL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":BOARD_ID" operator="!=" value="null">\u000d\u000aSELECT '''' TMP FROM DUAL WHERE 1=2\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.select.board_r_04','2013-04-11 10:15:48.218000',4,'DOCUMENT','true ','<dynamic parameter=":BOARD_ID" operator="==" value="null">\u000d\u000aSELECT SEQ(''BOARD'') AS TMP_BOARD_ID FROM DUAL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":BOARD_ID" operator="!=" value="null">\u000d\u000aSELECT '''' TMP FROM DUAL WHERE 1=2\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.test','2013-04-18 18:03:02.830000',3,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.test','2013-04-18 18:03:13.955000',3,'DOCUMENT','false','SELECT * FROM BOARD')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.test.aaa','2013-03-18 13:50:20.218000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.test.sdfsdf','2013-03-18 13:54:31.296000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.test.ssdf','2013-03-18 13:54:35.531000',4,'FOLDER','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.test.ttest','2013-03-18 13:48:34.968000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.test.ttest','2013-03-18 13:48:40.968000',4,'DOCUMENT','false','SELECT')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.test.ttest','2013-03-18 13:54:00.718000',4,'DOCUMENT','false','SELECT  aesf')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.update','2013-03-18 13:38:51.156000',3,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.update.board_master_u_01','2013-04-04 15:55:16.712000',4,'DOCUMENT','true ','UPDATE BOARD_MASTER\u000d\u000a   SET\u000d\u000a<dynamic parameter=":TITLE" operator="!=" value="null">\u000d\u000a       TITLE = :TITLE,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MAX_ROW_NUM" operator="!=" value="null">\u000d\u000a       MAX_ROW_NUM = :MAX_ROW_NUM,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_REPLY" operator="!=" value="null">\u000d\u000a       USE_REPLY = :USE_REPLY,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_FILE_ATMT" operator="!=" value="null">\u000d\u000a       USE_FILE_ATMT = :USE_FILE_ATMT,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":BOARD_WIDTH" operator="!=" value="null">\u000d\u000a       BOARD_WIDTH = :BOARD_WIDTH,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_YN" operator="!=" value="null">\u000d\u000a       USE_YN = :USE_YN,\u000d\u000a</dynamic>\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.update.board_master_update','2013-03-18 13:38:51.156000',4,'DOCUMENT','false','UPDATE BOARD_MASTER\u000d\u000a   SET\u000d\u000a<dynamic parameter=":TITLE" operator="!=" value="null">\u000d\u000a       TITLE = :TITLE,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MAX_ROW_NUM" operator="!=" value="null">\u000d\u000a       MAX_ROW_NUM = :MAX_ROW_NUM,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_REPLY" operator="!=" value="null">\u000d\u000a       USE_REPLY = :USE_REPLY,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_FILE_ATMT" operator="!=" value="null">\u000d\u000a       USE_FILE_ATMT = :USE_FILE_ATMT,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":BOARD_WIDTH" operator="!=" value="null">\u000d\u000a       BOARD_WIDTH = :BOARD_WIDTH,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_YN" operator="!=" value="null">\u000d\u000a       USE_YN = :USE_YN,\u000d\u000a</dynamic>\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.update.board_u_01','2013-04-04 15:55:20.384000',4,'DOCUMENT','true ','UPDATE BOARD AS U, (SELECT REVIEW_CNT FROM BOARD WHERE BOARD_ID = :BOARD_ID) AS O\u000d\u000a   SET U.REVIEW_CNT = O.REVIEW_CNT + 1\u000d\u000a WHERE U.BOARD_ID = :BOARD_ID;')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.board.update.board_u_02','2013-04-04 15:55:23.571000',4,'DOCUMENT','true ','UPDATE BOARD\u000d\u000a   SET TITLE    = :TITLE,\u000d\u000a       CONTENT  = :CONTENT,\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE BOARD_ID = :BOARD_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.common','2013-03-18 13:38:51.156000',2,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.common.delete','2013-03-18 13:38:51.156000',3,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.common.delete.tmp_upload_file_d_01','2013-04-04 15:55:32.415000',4,'DOCUMENT','true ','DELETE FROM TMP_UPLOAD_FILE\u000d\u000aWHERE RGST_DTTM <= DATE_ADD(NOW(), INTERVAL - :INTERVAL HOUR) ')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.common.insert','2013-03-18 13:38:51.156000',3,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.common.insert.tmp_file_upload_i_01','2013-04-04 15:55:38.853000',4,'DOCUMENT','true ','INSERT INTO TMP_UPLOAD_FILE\u000d\u000a(ID, CONTENT, FILE_NAME, SIZE, RGST_DTTM)\u000d\u000aVALUES(:TMP_FILE_UP_ID, :CONTENT, :CONTENT_FILE_NAME, :CONTENT_FILE_SIZE, CURRENT_TIMESTAMP)\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.common.select','2013-03-18 13:38:51.156000',3,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.common.select.comm_r_01','2013-04-04 15:55:44.634000',4,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Common image call query\u000d\u000a*/\u000d\u000a\u000d\u000a<dynamic parameter=":TABLE" operator="==" value="MENU">\u000d\u000aSELECT IMAGE \u000d\u000a  FROM MENU\u000d\u000a WHERE ID = :ID \u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.common.select.comm_r_02','2013-05-02 14:01:35.736000',4,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Getting role code list\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT ID, NAME \u000d\u000a  FROM CODE \u000d\u000a/* WHERE CODE_GROUP_ID = ''RC001''*/\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.common.select.comm_r_02','2013-05-02 14:01:44.940000',4,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Getting role code list\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT ID, NAME \u000d\u000a  FROM CODE \u000d\u000a WHERE CODE_GROUP_ID = ''RC001''\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.common.select.comm_r_03','2013-04-04 15:55:51.149000',4,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Getting member type code list\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT ID, NAME \u000d\u000a  FROM CODE \u000d\u000a WHERE CODE_GROUP_ID = ''ET001''')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.common.select.comm_r_04','2013-04-04 15:55:54.134000',4,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.10\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Getting degree code list\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT ID, NAME \u000d\u000a  FROM CODE \u000d\u000a WHERE CODE_GROUP_ID = ''DG001''')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.common.select.comm_r_05','2013-04-04 15:55:57.024000',4,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.14\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Getting access level code list\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT ID, NAME \u000d\u000a  FROM CODE \u000d\u000a WHERE CODE_GROUP_ID = ''AR001''')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.common.select.tmp_file_upload_r_01','2013-04-04 15:56:00.181000',4,'DOCUMENT','false','SELECT SEQ(''TMP_UPLOAD_FILE'') AS TMP_FILE_UP_ID\u000d\u000a  FROM DUAL')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.common.test','2013-03-18 14:56:38.296000',3,'FOLDER','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.common.test.sdf','2013-03-18 14:56:42.515000',4,'FOLDER','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.common.test.sdf.sdf','2013-03-18 14:56:53.093000',5,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.common.test.sdfsdf','2013-03-18 14:56:47.593000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.common.ttt','2013-03-18 14:56:59.078000',3,'FOLDER','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.common.ttt.sdf','2013-03-18 14:56:59.078000',4,'FOLDER','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.common.ttt.sdf.sdf','2013-03-18 14:56:59.078000',5,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.common.ttt.sdfsdf','2013-03-18 14:56:59.078000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.common.update','2013-03-18 13:38:51.156000',3,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.common.update.free_fk','2013-04-04 15:56:05.978000',4,'DOCUMENT','false','SET FOREIGN_KEY_CHECKS=0')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.common.update.set_fk','2013-04-04 15:56:08.962000',4,'DOCUMENT','false','SET FOREIGN_KEY_CHECKS=1')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal','2013-03-18 13:38:51.156000',2,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.code','2013-03-18 13:38:51.156000',3,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.code.insert','2013-03-18 13:38:51.156000',4,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.code.insert.code_c_01','2013-05-02 14:13:10.440000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new code.\u000d\u000a*/\u000d\u000aINSERT INTO CODE \u000d\u000a                (\u000d\u000a                ID, \u000d\u000a                CODE_GROUP_ID, \u000d\u000a                NAME, \u000d\u000a                EXP_NOTE, \u000d\u000a                UPDATABLE_YN,\u000d\u000a                RGST_DTTM, \u000d\u000a                RGST_MEMBER_ID, \u000d\u000a                MDF_DTTM, \u000d\u000a                MDF_MEMBER_ID\u000d\u000a                ) \u000d\u000a                VALUES(\u000d\u000a                :ID, \u000d\u000a                :GROUP_ID,\u000d\u000a                :NAME, \u000d\u000a                :EXP_NOTE, \u000d\u000a                ''Y'',\u000d\u000a                CURRENT_TIMESTAMP, -- :CURRENT_TIMESTAMP\u000d\u000a                :LOGIN_MEMBER, \u000d\u000a                CURRENT_TIMESTAMP, \u000d\u000a                :LOGIN_MEMBER\u000d\u000a                )')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.code.insert.codegroup_c_01','2013-04-04 15:56:27.196000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new code group.\u000d\u000a*/\u000d\u000aINSERT INTO CODE_GROUP \u000d\u000a                      (\u000d\u000a                      ID, \u000d\u000a                      NAME, \u000d\u000a                      EXP_NOTE, \u000d\u000a                      UPDATABLE_YN,\u000d\u000a                      RGST_DTTM, \u000d\u000a                      RGST_MEMBER_ID,\u000d\u000a                      MDF_DTTM, \u000d\u000a                      MDF_MEMBER_ID \u000d\u000a                      ) \u000d\u000a                      VALUES(\u000d\u000a                      :ID,\u000d\u000a                      :NAME, \u000d\u000a                      :EXP_NOTE, /*:EXP_NOTE*/ \u000d\u000a                      ''Y'',\u000d\u000a                      CURRENT_TIMESTAMP,\u000d\u000a                      :LOGIN_MEMBER, \u000d\u000a                      CURRENT_TIMESTAMP, \u000d\u000a                      :LOGIN_MEMBER\u000d\u000a                      )')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.code.select','2013-03-18 13:38:51.156000',4,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.code.select.code_s_01','2013-04-04 15:56:38.806000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code list count \u000d\u000a*/\u000d\u000aSELECT COUNT(*) TOTAL_CNT, :page AS page \u000d\u000aFROM CODE, CODE_GROUP\u000d\u000a WHERE 1=1\u000d\u000a   AND CODE.CODE_GROUP_ID = CODE_GROUP.ID \u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_ID">\u000d\u000a   AND CODE_GROUP.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_NAME">\u000d\u000a   AND CODE_GROUP.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_EXP_NOTE">\u000d\u000a   AND CODE_GROUP.EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND CODE.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND CODE.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="EXP_NOTE">\u000d\u000a   AND CODE.EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.code.select.code_s_02','2013-04-04 15:56:42.837000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code list search\u000d\u000a*/\u000d\u000aSELECT ID, \u000d\u000a       NAME, \u000d\u000a       EXP_NOTE, \u000d\u000a       UPDATABLE_YN \u000d\u000a  FROM CODE \u000d\u000a WHERE CODE_GROUP_ID = :CODE_GROUP_ID\u000d\u000a ORDER BY ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.code.select.code_s_03','2013-04-04 15:56:46.071000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code keyword search\u000d\u000a*/\u000d\u000aSELECT CODE.CODE_GROUP_ID GROUP_ID, \u000d\u000a       CODE_GROUP.NAME GROUP_NAME, \u000d\u000a       CODE_GROUP.EXP_NOTE GROUP_EXP_NOTE, \u000d\u000a       CODE.ID, CODE.NAME, \u000d\u000a       CODE.EXP_NOTE, \u000d\u000a       CODE.UPDATABLE_YN, \u000d\u000a       CODE.RGST_DTTM, \u000d\u000a       CODE.RGST_MEMBER_ID, \u000d\u000a       CODE.MDF_DTTM, \u000d\u000a       CODE.MDF_MEMBER_ID\u000d\u000aFROM CODE, CODE_GROUP\u000d\u000a WHERE 1=1\u000d\u000a   AND CODE.CODE_GROUP_ID = CODE_GROUP.ID \u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_ID">\u000d\u000a   AND CODE_GROUP.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_NAME">\u000d\u000a   AND CODE_GROUP.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_EXP_NOTE">\u000d\u000a   AND CODE_GROUP.EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND CODE.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND CODE.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="EXP_NOTE">\u000d\u000a   AND CODE.EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="GROUP_ID">\u000d\u000aCODE_GROUP.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="GROUP_NAME">\u000d\u000aCODE_GROUP.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="GROUP_EXP_NOTE">\u000d\u000aCODE_GROUP.EXP_NOTE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aCODE.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aCODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXP_NOTE">\u000d\u000aCODE.EXP_NOTE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="UPDATABLE_YN">\u000d\u000aCODE.UPDATABLE_YN\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_MEMBER_ID">\u000d\u000aCODE.RGST_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aCODE.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_MEMBER_ID">\u000d\u000aCODE.MDF_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aCODE.MDF_DTTM \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.code.select.codegroup_s_01','2013-04-04 15:56:49.368000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code group duplication check\u000d\u000a*/\u000d\u000aSELECT COUNT(*) TOTAL_CNT, :page AS page \u000d\u000a  FROM CODE_GROUP\u000d\u000a WHERE 1=1\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="EXP_NOTE">\u000d\u000a   AND EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.code.select.codegroup_s_02','2013-04-30 14:45:23.859000',5,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code group list search\u000d\u000a*/\u000d\u000aSELECT ID, \u000d\u000a       NAME, \u000d\u000a       EXP_NOTE, \u000d\u000a       UPDATABLE_YN \u000d\u000a  FROM CODE_GROUP\u000d\u000a ORDER BY ID\u000d\u000a/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code group list search\u000d\u000a*/')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.code.select.codegroup_s_02','2013-04-30 14:45:30.203000',5,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code group list search\u000d\u000a*/\u000d\u000aSELECT ID, \u000d\u000a       NAME, \u000d\u000a       EXP_NOTE, \u000d\u000a       UPDATABLE_YN \u000d\u000a  FROM CODE_GROUP\u000d\u000a ORDER BY ID\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.code.select.codegroup_s_03','2013-04-30 14:42:39.656000',5,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code group keyword search\u000d\u000a*/\u000d\u000aSELECT ID, \u000d\u000a       NAME, \u000d\u000a       EXP_NOTE, \u000d\u000a       UPDATABLE_YN, \u000d\u000a       RGST_MEMBER_ID, \u000d\u000a       RGST_DTTM, \u000d\u000a       MDF_MEMBER_ID, \u000d\u000a       MDF_DTTM\u000d\u000a  FROM CODE_GROUP \u000d\u000a WHERE 1=1\u000d\u000a/*<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="EXP_NOTE">\u000d\u000a   AND EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY \u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aNAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXP_NOTE">\u000d\u000aEXP_NOTE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="UPDATABLE_YN">\u000d\u000aUPDATABLE_YN\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_MEMBER_ID">\u000d\u000aRGST_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aRGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_MEMBER_ID">\u000d\u000aMDF_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aMDF_DTTM \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp*/')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.code.select.codegroup_s_03','2013-04-30 14:43:17.687000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code group keyword search\u000d\u000a*/\u000d\u000aSELECT ID, \u000d\u000a       NAME, \u000d\u000a       EXP_NOTE, \u000d\u000a       UPDATABLE_YN, \u000d\u000a       RGST_MEMBER_ID, \u000d\u000a       RGST_DTTM, \u000d\u000a       MDF_MEMBER_ID, \u000d\u000a       MDF_DTTM\u000d\u000a  FROM CODE_GROUP \u000d\u000a WHERE 1=1\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="EXP_NOTE">\u000d\u000a   AND EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY \u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aNAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXP_NOTE">\u000d\u000aEXP_NOTE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="UPDATABLE_YN">\u000d\u000aUPDATABLE_YN\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_MEMBER_ID">\u000d\u000aRGST_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aRGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_MEMBER_ID">\u000d\u000aMDF_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aMDF_DTTM \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.code.select.codegroup_s_03','2013-04-30 14:43:39.156000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code group keyword search\u000d\u000a*/\u000d\u000aSELECT ID, \u000d\u000a       NAME, \u000d\u000a       EXP_NOTE, \u000d\u000a       UPDATABLE_YN, \u000d\u000a       RGST_MEMBER_ID, \u000d\u000a       RGST_DTTM, \u000d\u000a       MDF_MEMBER_ID, \u000d\u000a       MDF_DTTM\u000d\u000a  FROM CODE_GROUP \u000d\u000a WHERE 1=1\u000d\u000a/*<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>*/\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="EXP_NOTE">\u000d\u000a   AND EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY \u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aNAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXP_NOTE">\u000d\u000aEXP_NOTE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="UPDATABLE_YN">\u000d\u000aUPDATABLE_YN\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_MEMBER_ID">\u000d\u000aRGST_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aRGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_MEMBER_ID">\u000d\u000aMDF_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aMDF_DTTM \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.code.select.codegroup_s_03','2013-04-30 14:43:56.984000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code group keyword search\u000d\u000a*/\u000d\u000aSELECT ID, \u000d\u000a       NAME, \u000d\u000a       EXP_NOTE, \u000d\u000a       UPDATABLE_YN, \u000d\u000a       RGST_MEMBER_ID, \u000d\u000a       RGST_DTTM, \u000d\u000a       MDF_MEMBER_ID, \u000d\u000a       MDF_DTTM\u000d\u000a  FROM CODE_GROUP \u000d\u000a WHERE 1=1\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="EXP_NOTE">\u000d\u000a   AND EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY \u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aNAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXP_NOTE">\u000d\u000aEXP_NOTE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="UPDATABLE_YN">\u000d\u000aUPDATABLE_YN\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_MEMBER_ID">\u000d\u000aRGST_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aRGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_MEMBER_ID">\u000d\u000aMDF_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aMDF_DTTM \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.code.select.codegroup_s_03','2013-04-30 14:44:22.359000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code group keyword search\u000d\u000a*/\u000d\u000aSELECT ID, \u000d\u000a       NAME, \u000d\u000a       EXP_NOTE, \u000d\u000a       UPDATABLE_YN, \u000d\u000a       RGST_MEMBER_ID, \u000d\u000a       RGST_DTTM, \u000d\u000a       MDF_MEMBER_ID, \u000d\u000a       MDF_DTTM\u000d\u000a  FROM CODE_GROUP \u000d\u000a WHERE 1=1\u000d\u000a/*<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="EXP_NOTE">\u000d\u000a   AND EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>*/\u000d\u000aORDER BY \u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aNAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXP_NOTE">\u000d\u000aEXP_NOTE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="UPDATABLE_YN">\u000d\u000aUPDATABLE_YN\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_MEMBER_ID">\u000d\u000aRGST_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aRGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_MEMBER_ID">\u000d\u000aMDF_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aMDF_DTTM \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.code.select.codegroup_s_03','2013-04-30 14:44:31.296000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code group keyword search\u000d\u000a*/\u000d\u000aSELECT ID, \u000d\u000a       NAME, \u000d\u000a       EXP_NOTE, \u000d\u000a       UPDATABLE_YN, \u000d\u000a       RGST_MEMBER_ID, \u000d\u000a       RGST_DTTM, \u000d\u000a       MDF_MEMBER_ID, \u000d\u000a       MDF_DTTM\u000d\u000a  FROM CODE_GROUP \u000d\u000a WHERE 1=1\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="EXP_NOTE">\u000d\u000a   AND EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY \u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aNAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXP_NOTE">\u000d\u000aEXP_NOTE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="UPDATABLE_YN">\u000d\u000aUPDATABLE_YN\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_MEMBER_ID">\u000d\u000aRGST_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aRGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_MEMBER_ID">\u000d\u000aMDF_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aMDF_DTTM \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.code.select.codegroup_s_03','2013-04-30 14:45:01.984000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code group keyword search\u000d\u000a*/\u000d\u000aSELECT ID, \u000d\u000a       NAME, \u000d\u000a       EXP_NOTE, \u000d\u000a       UPDATABLE_YN, \u000d\u000a       RGST_MEMBER_ID, \u000d\u000a       RGST_DTTM, \u000d\u000a       MDF_MEMBER_ID, \u000d\u000a       MDF_DTTM\u000d\u000a  FROM CODE_GROUP \u000d\u000a WHERE 1=1\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="EXP_NOTE">\u000d\u000a   --AND EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY \u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aNAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXP_NOTE">\u000d\u000aEXP_NOTE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="UPDATABLE_YN">\u000d\u000aUPDATABLE_YN\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_MEMBER_ID">\u000d\u000aRGST_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aRGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_MEMBER_ID">\u000d\u000aMDF_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aMDF_DTTM \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.code.select.codegroup_s_03','2013-04-30 14:45:10.093000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code group keyword search\u000d\u000a*/\u000d\u000aSELECT ID, \u000d\u000a       NAME, \u000d\u000a       EXP_NOTE, \u000d\u000a       UPDATABLE_YN, \u000d\u000a       RGST_MEMBER_ID, \u000d\u000a       RGST_DTTM, \u000d\u000a       MDF_MEMBER_ID, \u000d\u000a       MDF_DTTM\u000d\u000a  FROM CODE_GROUP \u000d\u000a WHERE 1=1\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="EXP_NOTE">\u000d\u000a   AND EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY \u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aNAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXP_NOTE">\u000d\u000aEXP_NOTE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="UPDATABLE_YN">\u000d\u000aUPDATABLE_YN\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_MEMBER_ID">\u000d\u000aRGST_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aRGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_MEMBER_ID">\u000d\u000aMDF_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aMDF_DTTM \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.code.update','2013-03-18 13:38:51.156000',4,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.code.update.code_u_01','2013-04-04 15:57:08.774000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code update\u000d\u000a*/\u000d\u000aUPDATE CODE\u000d\u000a   SET \u000d\u000a<dynamic parameter=":NAME" operator="!=" value="">\u000d\u000a       NAME          = :NAME,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXP_NOTE" operator="!=" value="">\u000d\u000a       EXP_NOTE      = :EXP_NOTE,\u000d\u000a</dynamic>\u000d\u000a       MDF_DTTM      = CURRENT_TIMESTAMP,\u000d\u000a       MDF_MEMBER_ID = :LOGIN_MEMBER\u000d\u000a WHERE ID = :ID\u000d\u000a   AND UPDATABLE_YN <> ''N''')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.code.update.codegroup_u_01','2013-04-04 15:57:12.149000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code group update\u000d\u000a*/\u000d\u000aUPDATE CODE_GROUP\u000d\u000a   SET \u000d\u000a<dynamic parameter=":NAME" operator="!=" value="">\u000d\u000a       NAME          = :NAME,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXP_NOTE" operator="!=" value="">\u000d\u000a       EXP_NOTE      = :EXP_NOTE,\u000d\u000a</dynamic>\u000d\u000a       MDF_DTTM      = CURRENT_TIMESTAMP,\u000d\u000a       MDF_MEMBER_ID = :LOGIN_MEMBER\u000d\u000a WHERE ID = :ID\u000d\u000a   AND UPDATABLE_YN <> ''N''')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member','2013-03-18 13:38:51.156000',3,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.create','2013-03-18 13:38:51.156000',4,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.create.access_list_c_01','2013-04-04 15:57:22.540000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.15\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Create new access list\u000d\u000a*/\u000d\u000a\u000d\u000aINSERT INTO ACCESS_LIST\u000d\u000a            (MENU_ID,\u000d\u000a             ORGANIZATION_ID,\u000d\u000a             ROLE_MEMBER_ID,\u000d\u000a             ACCESS_LEVEL)\u000d\u000aSELECT MENU.ID AS MENU_ID, :ORGANIZATION_ID, :ROLE_MEMBER_ID, :ACCESS_LEVEL\u000d\u000a  FROM \u000d\u000a       (SELECT MENU.ID, LEVEL, NAME, IF(MENU.LINK_VALUE IS NULL OR MENU.LINK_VALUE = '''', ''Y'', ''N'') AS ISFOLDER\u000d\u000a          FROM(\u000d\u000a               SELECT @id := MENU_HIERARCHY() AS ID, \u000d\u000a                      @level AS LEVEL\u000d\u000a                 FROM (\u000d\u000a                       SELECT @start_with := :MENU_ID, \u000d\u000a                              @id := @start_with,\u000d\u000a                              @level := 0\u000d\u000a                       )VARS, MENU\u000d\u000a                 WHERE @id IS NOT NULL\u000d\u000a              ) HIERARCHY\u000d\u000a               JOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000a       )MENU\u000d\u000a       LEFT OUTER JOIN \u000d\u000a       ACCESS_LIST\u000d\u000a       ON MENU.ID = ACCESS_LIST.MENU_ID\u000d\u000a       AND ACCESS_LIST.ORGANIZATION_ID = :ORGANIZATION_ID\u000d\u000a       AND ACCESS_LIST.ROLE_MEMBER_ID  = :ROLE_MEMBER_ID\u000d\u000aWHERE 1=1\u000d\u000a  AND MENU.ISFOLDER = ''N''\u000d\u000a  AND ACCESS_LIST.MENU_ID IS NULL')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.create.access_log_c_01','2013-04-04 15:57:26.696000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.27\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate access log.\u000d\u000a*/\u000d\u000aINSERT INTO ACCESS_LOG \u000d\u000a                      (\u000d\u000a                      MEMBER_ID, \u000d\u000a                      SEQ, \u000d\u000a                      ACCESS_DTTM, \u000d\u000a                      ACCESS_IP, \u000d\u000a                      ACCESS_PAGE\u000d\u000a                      ) \u000d\u000a                      VALUES\u000d\u000a                      ( \u000d\u000a                      :MEMBER_ID, \u000d\u000a                      SEQ(''ACCESS_LOG''),\u000d\u000a                      CURRENT_TIMESTAMP, \u000d\u000a                      :ACCESS_IP, \u000d\u000a                      :ACCESS_PAGE\u000d\u000a                      )')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.create.access_member_c_01','2013-04-04 15:57:30.493000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new access member.\u000d\u000a*/\u000d\u000a\u000d\u000aINSERT INTO ACCESS_MEMBER \u000d\u000a                        (\u000d\u000a                        ID, \u000d\u000a                        PWD, \u000d\u000a                        MEMBER_TYPE,\u000d\u000a                        MAIL, \u000d\u000a                        EXPIRE_DATE, \u000d\u000a                        RGST_DTTM,\u000d\u000a                        MDF_DTTM,\u000d\u000a                        USE_YN\u000d\u000a                        )\u000d\u000a                        VALUES\u000d\u000a                        (\u000d\u000a                        :ID, \u000d\u000a                        MD5(''new1234!''),\u000d\u000a                        :MEMBER_TYPE,\u000d\u000a                        :MAIL, \u000d\u000a<dynamic parameter=":EXPIRE_DATE" operator="==" value="">\u000d\u000a                        DATE_ADD(SYSDATE(), INTERVAL 90 DAY), \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXPIRE_DATE" operator="!=" value="">\u000d\u000a                        STR_TO_DATE(:EXPIRE_DATE, ''%Y-%m-%d''), \u000d\u000a</dynamic>\u000d\u000a                        CURRENT_TIMESTAMP,\u000d\u000a                        CURRENT_TIMESTAMP,\u000d\u000a                        ''Y''\u000d\u000a                        )')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.create.lecturer_c_01','2013-04-04 15:57:34.196000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new lecturer.\u000d\u000a*/\u000d\u000aINSERT INTO LECTURER\u000d\u000a\u0009\u0009\u0009\u0009\u0009(\u000d\u000a\u0009\u0009\u0009\u0009\u0009ID, \u000d\u000a\u0009\u0009\u0009\u0009\u0009NAME, \u000d\u000a\u0009\u0009\u0009\u0009\u0009PHONE, \u000d\u000a\u0009\u0009\u0009\u0009\u0009MOBILE_PHONE, \u000d\u000a\u0009\u0009\u0009\u0009\u0009FAX, \u000d\u000a\u0009\u0009\u0009\u0009\u0009WEB_SITE, \u000d\u000a\u0009\u0009\u0009\u0009\u0009ZIP_CODE,\u000d\u000a\u0009\u0009\u0009\u0009\u0009ADDR1, \u000d\u000a\u0009\u0009\u0009\u0009\u0009ADDR2, \u000d\u000a\u0009\u0009\u0009\u0009\u0009DEGREE, /*\ud559\uc704*/\u000d\u000a\u0009\u0009\u0009\u0009\u0009ORGANIZATION, /*\uc18c\uc18d*/\u000d\u000a\u0009\u0009\u0009\u0009\u0009MAJOR, /*\uc804\uacf5*/\u000d\u000a\u0009\u0009\u0009\u0009\u0009CAREER, /*\uacbd\ub825*/\u000d\u000a\u0009\u0009\u0009\u0009\u0009SPECIALISM, /*\uc804\ubb38\ubd84\uc57c*/\u000d\u000a\u0009\u0009\u0009\u0009\u0009EXP_NOTE, /*\ube44\uace0*/\u000d\u000a<dynamic parameter=":PHOTO" operator="!=" value="null">\u000d\u000a\u0009\u0009\u0009\u0009\u0009PHOTO, \u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009\u0009GOOGLE_ID, \u000d\u000a<dynamic parameter=":GOOGLE_PW" operator="!=" value="">\u000d\u000a\u0009\u0009\u0009\u0009\u0009GOOGLE_PW, \u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009\u0009RGST_DTTM, \u000d\u000a\u0009\u0009\u0009\u0009\u0009MDF_DTTM, \u000d\u000a\u0009\u0009\u0009\u0009\u0009USE_YN\u000d\u000a\u0009\u0009\u0009\u0009\u0009) \u000d\u000a\u0009\u0009\u0009\u0009\u0009VALUES(\u000d\u000a\u0009\u0009\u0009\u0009\u0009:ID, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:NAME, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:PHONE, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:MOBILE_PHONE, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:FAX, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:WEB_SITE, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:ZIP_CODE, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:ADDR1, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:ADDR2, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:DEGREE, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:ORGANIZATION, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:MAJOR, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:CAREER, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:SPECIALISM, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:EXP_NOTE, \u000d\u000a<dynamic parameter=":PHOTO" operator="!=" value="null">\u000d\u000a\u0009\u0009\u0009\u0009\u0009:PHOTO, \u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009\u0009:GOOGLE_ID, \u000d\u000a<dynamic parameter=":GOOGLE_PW" operator="!=" value="">\u000d\u000a\u0009\u0009\u0009\u0009\u0009HEX(AES_ENCRYPT(:GOOGLE_PW, MD5(''#!%''))), \u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009\u0009CURRENT_TIMESTAMP, \u000d\u000a\u0009\u0009\u0009\u0009\u0009CURRENT_TIMESTAMP, \u000d\u000a\u0009\u0009\u0009\u0009\u0009''Y''\u000d\u000a\u0009\u0009\u0009\u0009\u0009)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.create.member_c_01','2013-04-04 15:57:40.931000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new member.\u000d\u000a*/\u000d\u000aINSERT INTO MEMBER \u000d\u000a\u0009\u0009\u0009\u0009(\u000d\u000a\u0009\u0009\u0009\u0009ID, \u000d\u000a\u0009\u0009\u0009\u0009NAME, \u000d\u000a\u0009\u0009\u0009\u0009PHONE, \u000d\u000a\u0009\u0009\u0009\u0009MOBILE_PHONE, \u000d\u000a<dynamic parameter=":PHOTO" operator="!=" value="null">\u000d\u000a\u0009\u0009\u0009\u0009PHOTO, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":JOIN_DATE" operator="!=" value="">\u000d\u000a\u0009\u0009\u0009\u0009JOIN_DATE, \u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009RETIRED_DATE, \u000d\u000a\u0009\u0009\u0009\u0009GOOGLE_ID, \u000d\u000a<dynamic parameter=":GOOGLE_PW" operator="!=" value="">\u000d\u000a\u0009\u0009\u0009\u0009GOOGLE_PW, \u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009RGST_DTTM, \u000d\u000a\u0009\u0009\u0009\u0009MDF_DTTM, \u000d\u000a\u0009\u0009\u0009\u0009USE_YN\u000d\u000a\u0009\u0009\u0009\u0009) \u000d\u000a\u0009\u0009\u0009\u0009VALUES(\u000d\u000a\u0009\u0009\u0009\u0009:ID, \u000d\u000a\u0009\u0009\u0009\u0009:NAME, \u000d\u000a\u0009\u0009\u0009\u0009:PHONE, \u000d\u000a\u0009\u0009\u0009\u0009:MOBILE_PHONE, \u000d\u000a<dynamic parameter=":PHOTO" operator="!=" value="null">\u000d\u000a\u0009\u0009\u0009\u0009:PHOTO, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":JOIN_DATE" operator="!=" value="">\u000d\u000a\u0009\u0009\u0009\u0009STR_TO_DATE(:JOIN_DATE, ''%Y-%m-%d''), \u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009NULL, \u000d\u000a\u0009\u0009\u0009\u0009:GOOGLE_ID, \u000d\u000a<dynamic parameter=":GOOGLE_PW" operator="!=" value="">\u000d\u000a                HEX(AES_ENCRYPT(:GOOGLE_PW, MD5(''#!%''))),\u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009CURRENT_TIMESTAMP, \u000d\u000a\u0009\u0009\u0009\u0009CURRENT_TIMESTAMP, \u000d\u000a\u0009\u0009\u0009\u0009''Y''\u000d\u000a\u0009\u0009\u0009\u0009)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.create.organization_c_01','2013-04-04 15:57:45.681000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new organization.\u000d\u000a*/\u000d\u000aINSERT INTO ORGANIZATION\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009(\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009ID, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009PARENT_ID, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009NAME, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009RGST_DTTM, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009MDF_DTTM, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009USE_YN\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009) \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009VALUES(\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009:ID,\u000d\u000a<dynamic parameter=":PARENT_ID" operator="==" value="">\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009:ID, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PARENT_ID" operator="!=" value="">\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009:PARENT_ID, \u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009:NAME, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009CURRENT_TIMESTAMP, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009CURRENT_TIMESTAMP, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009''Y''\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.create.organization_c_01','2013-04-04 15:57:53.899000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new organization.\u000d\u000a*/\u000d\u000aINSERT INTO ORGANIZATION \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009(\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009ID, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009PARENT_ID, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009NAME, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009RGST_DTTM, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009MDF_DTTM, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009USE_YN\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009) \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009VALUES(\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009:ID,\u000d\u000a<dynamic parameter=":PARENT_ID" operator="==" value="">\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009:ID, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PARENT_ID" operator="!=" value="">\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009:PARENT_ID, \u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009:NAME, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009CURRENT_TIMESTAMP, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009CURRENT_TIMESTAMP, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009''Y''\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.create.role_c_01','2013-04-04 15:57:49.774000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.08\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new role.\u000d\u000a*/\u000d\u000a\u000d\u000aINSERT INTO ROLE (ORGANIZATION_ID,\u000d\u000a                  MEMBER_ID,\u000d\u000a                  ROLE_CODE,\u000d\u000a                  RGST_DTTM,\u000d\u000a                  MDF_DTTM,\u000d\u000a                  USE_YN)\u000d\u000a          VALUES (:ORGANIZATION_ID,\u000d\u000a                  :MEMBER_ID,\u000d\u000a                  :ROLE_CODE,\u000d\u000a                  CURRENT_TIMESTAMP, \u000d\u000a                  CURRENT_TIMESTAMP, \u000d\u000a                  ''Y'')')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.delete','2013-03-18 13:38:51.156000',4,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.delete.access_list_d_01','2013-04-04 15:58:01.290000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.16\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Remove access list, Role \uc744 \uc0ad\uc81c\ud560 \ub54c \uac19\uc774 \uc0ad\uc81c Case->ROLE_MEMBER_ID, \u000d\u000a                  Access List\ub9cc \uc0ad\uc81c->MEMBER_ID\u000d\u000a*/\u000d\u000aDELETE FROM ACCESS_LIST\u000d\u000aWHERE 1=1\u000d\u000a<dynamic parameter=":MENU_ID" operator="!=" value="null">\u000d\u000a  AND MENU_ID         = :MENU_ID\u000d\u000a</dynamic>\u000d\u000a  AND ORGANIZATION_ID = :ORGANIZATION_ID\u000d\u000a<dynamic parameter=":ROLE_MEMBER_ID" operator="!=" value="null">\u000d\u000a  AND ROLE_MEMBER_ID  = :ROLE_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MEMBER_ID" operator="!=" value="null">\u000d\u000a  AND ROLE_MEMBER_ID  = :MEMBER_ID\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.select','2013-03-18 13:38:51.156000',4,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.select.access_r_01','2013-04-04 15:58:09.712000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search access members of a menu\u000d\u000a*/\u000d\u000aSELECT MENU.NAME                  AS MENU_NAME,\u000d\u000a       MENU.ID                    AS MENU_ID,\u000d\u000a       ORGANIZATION.NAME          AS ORGANIZATION_NAME,\u000d\u000a       ORGANIZATION.ID            AS ORGANIZATION_ID,\u000d\u000a       ACCESS_LIST.ROLE_MEMBER_ID AS MEMBER_ID,\u000d\u000a       MEMBER.NAME                AS MEMBER_NAME,\u000d\u000a       CODE_RC.NAME               AS ROLE_NAME,\u000d\u000a       CODE_LV.NAME               AS ACCESS_LEVEL\u000d\u000a  FROM ACCESS_LIST, \u000d\u000a       ORGANIZATION, \u000d\u000a       ROLE,\u000d\u000a       MEMBER, \u000d\u000a       CODE CODE_LV, \u000d\u000a       CODE CODE_RC, \u000d\u000a       (SELECT MENU.ID, LEVEL, NAME, IF(MENU.LINK_VALUE IS NULL OR MENU.LINK_VALUE = '''', ''Y'', ''N'') AS ISFOLDER\u000d\u000a          FROM(\u000d\u000a               SELECT @id := MENU_HIERARCHY() AS ID, \u000d\u000a                      @level AS LEVEL\u000d\u000a                 FROM (\u000d\u000a                       SELECT @start_with := :MENU_ID, \u000d\u000a                              @id := @start_with,\u000d\u000a                              @level := 0\u000d\u000a                       )VARS, MENU\u000d\u000a                 WHERE @id IS NOT NULL\u000d\u000a              ) HIERARCHY\u000d\u000a               JOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000a       )MENU\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_LIST.ORGANIZATION_ID = ROLE.ORGANIZATION_ID\u000d\u000a   AND ACCESS_LIST.ROLE_MEMBER_ID  = ROLE.MEMBER_ID\u000d\u000a   AND ACCESS_LIST.MENU_ID         = MENU.ID\u000d\u000a   AND ROLE.ORGANIZATION_ID        = ORGANIZATION.ID\u000d\u000a   AND ROLE.MEMBER_ID              = MEMBER.ID\u000d\u000a   AND CODE_LV.ID                  = ACCESS_LIST.ACCESS_LEVEL\u000d\u000a   AND CODE_RC.ID                  = ROLE.ROLE_CODE\u000d\u000a   AND ORGANIZATION.USE_YN         = ''Y''\u000d\u000a   AND ROLE.USE_YN                 = ''Y''\u000d\u000a   AND MEMBER.USE_YN               = ''Y''\u000d\u000a   AND MENU.ISFOLDER               = ''N''\u000d\u000a   AND (MEMBER.RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000a<dynamic parameter=":query" operator="!=" value="">\u000d\u000a<dynamic parameter=":qtype" operator="==" value="ORGANIZATION_NAME">\u000d\u000a   AND ORGANIZATION.NAME LIKE CONCAT(CONCAT(''%'', :query), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":qtype" operator="==" value="MEMBER_ID">\u000d\u000a   AND ACCESS_LIST.ROLE_MEMBER_ID LIKE CONCAT(CONCAT(''%'', :query), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":qtype" operator="==" value="MEMBER_NAME">\u000d\u000a   AND MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :query), ''%'')\u000d\u000a</dynamic>\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMENU.NAME DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MENU_NAME">\u000d\u000aMENU.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ORGANIZATION_NAME">\u000d\u000aORGANIZATION.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_ID">\u000d\u000aACCESS_LIST.ROLE_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_NAME">\u000d\u000aMEMBER.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ROLE_NAME">\u000d\u000aCODE_RC.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ACCESS_LEVEL">\u000d\u000aCODE_LV.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.select.access_r_02','2013-04-04 15:58:14.149000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search access members of a menu\u000d\u000a*/\u000d\u000aSELECT COUNT(*) TOTAL_CNT, :page AS page\u000d\u000a  FROM ACCESS_LIST, \u000d\u000a       ORGANIZATION, \u000d\u000a       ROLE, \u000d\u000a       MEMBER, \u000d\u000a       CODE CODE_LV, \u000d\u000a       CODE CODE_RC,\u000d\u000a       (SELECT MENU.ID, LEVEL, NAME, IF(MENU.LINK_VALUE IS NULL OR MENU.LINK_VALUE = '''', ''Y'', ''N'') AS ISFOLDER\u000d\u000a          FROM(\u000d\u000a               SELECT @id := MENU_HIERARCHY() AS ID, \u000d\u000a                      @level AS LEVEL\u000d\u000a                 FROM (\u000d\u000a                       SELECT @start_with := :MENU_ID, \u000d\u000a                              @id := @start_with,\u000d\u000a                              @level := 0\u000d\u000a                       )VARS, MENU\u000d\u000a                 WHERE @id IS NOT NULL\u000d\u000a              ) HIERARCHY\u000d\u000a               JOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000a       )MENU\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_LIST.ORGANIZATION_ID = ROLE.ORGANIZATION_ID\u000d\u000a   AND ACCESS_LIST.ROLE_MEMBER_ID  = ROLE.MEMBER_ID\u000d\u000a   AND ACCESS_LIST.MENU_ID         = MENU.ID\u000d\u000a   AND ROLE.ORGANIZATION_ID        = ORGANIZATION.ID\u000d\u000a   AND ROLE.MEMBER_ID              = MEMBER.ID\u000d\u000a   AND CODE_LV.ID                  = ACCESS_LIST.ACCESS_LEVEL\u000d\u000a   AND CODE_RC.ID                  = ROLE.ROLE_CODE\u000d\u000a   AND ORGANIZATION.USE_YN         = ''Y''\u000d\u000a   AND ROLE.USE_YN                 = ''Y''\u000d\u000a   AND MEMBER.USE_YN               = ''Y''\u000d\u000a   AND MENU.ISFOLDER               = ''N''\u000d\u000a   AND (MEMBER.RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000a<dynamic parameter=":query" operator="!=" value="">\u000d\u000a<dynamic parameter=":qtype" operator="==" value="ORGANIZATION_NAME">\u000d\u000a   AND ORGANIZATION.NAME LIKE CONCAT(CONCAT(''%'', :query), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":qtype" operator="==" value="MEMBER_ID">\u000d\u000a   AND ACCESS_LIST.ROLE_MEMBER_ID LIKE CONCAT(CONCAT(''%'', :query), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":qtype" operator="==" value="MEMBER_NAME">\u000d\u000a   AND MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :query), ''%'')\u000d\u000a</dynamic>\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.select.lecturer_r_01','2013-04-04 15:58:18.165000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search lecturer for management\u000d\u000a*/\u000d\u000aSELECT LECTURER.ID, \u000d\u000a       LECTURER.NAME, \u000d\u000a       CODE_MT.NAME AS MEMBER_TYPE,\u000d\u000a       ACCESS_MEMBER.MAIL,\u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE,\u000d\u000a       LECTURER.PHONE, \u000d\u000a       LECTURER.MOBILE_PHONE,\u000d\u000a       LECTURER.PHOTO,\u000d\u000a       LECTURER.GOOGLE_ID,\u000d\u000a       LECTURER.FAX,\u000d\u000a       LECTURER.WEB_SITE,\u000d\u000a       LECTURER.ZIP_CODE,\u000d\u000a       LECTURER.ADDR1,\u000d\u000a       LECTURER.ADDR2,\u000d\u000a       LECTURER.DEGREE,\u000d\u000a       LECTURER.ORGANIZATION,\u000d\u000a       LECTURER.MAJOR,\u000d\u000a       REPLACE(LECTURER.CAREER, ''\r\n'', ''\\r\\n'') AS CAREER,\u000d\u000a       LECTURER.SPECIALISM,\u000d\u000a       LECTURER.EXP_NOTE,\u000d\u000a       LECTURER.RGST_DTTM,\u000d\u000a       LECTURER.MDF_DTTM\u000d\u000a  FROM LECTURER, ACCESS_MEMBER, CODE CODE_MT, CODE CODE_DG\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.ID     = LECTURER.ID\u000d\u000a   AND CODE_MT.ID           = ACCESS_MEMBER.MEMBER_TYPE\u000d\u000a   AND CODE_DG.ID           = LECTURER.DEGREE\u000d\u000a   AND ACCESS_MEMBER.USE_YN = ''Y''\u000d\u000a   AND LECTURER.USE_YN      = ''Y''\u000d\u000a   AND LECTURER.ID          = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.select.member_r_01','2013-07-22 14:30:54.728000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member for login\u000d\u000a*/\u000d\u000aSELECT IF(COUNT(*) > 0, ''Y'', ''N'') AS ACCESS_YN\u000d\u000a  FROM ACCESS_LIST, ROLE\u000d\u000a WHERE ROLE.MEMBER_ID = ACCESS_LIST.ROLE_MEMBER_ID\u000d\u000a   AND ROLE.ORGANIZATION_ID = ACCESS_LIST.ORGANIZATION_ID\u000d\u000a   AND ACCESS_LIST.ROLE_MEMBER_ID = :ID\u000d\u000a   AND ROLE.USE_YN = ''Y''')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.select.member_r_01','2013-07-22 14:33:06.134000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member for login\u000d\u000a*/\u000d\u000a<dynamic parameter=":EXC_ORDER" operator="==" value="null">\u000d\u000a SELECT ACCESS_MEMBER.MEMBER_TYPE, \u000d\u000a        IF(MEMBER.ID IS NOT NULL,''Y'', IF(LECTURER.ID IS NOT NULL, ''Y'', ''N'')) AS REG_INFO,\u000d\u000a        DATE_FORMAT(CURRENT_TIMESTAMP, ''%Y%m%d%k%i%s'') LOGIN_TIME,\u000d\u000a        ''1'' AS EXC_ORDER\u000d\u000a   FROM ACCESS_MEMBER\u000d\u000a        LEFT OUTER JOIN\u000d\u000a\u0009MEMBER\u000d\u000a\u0009ON MEMBER.ID = ACCESS_MEMBER.ID\u000d\u000a\u0009LEFT OUTER JOIN\u000d\u000a        LECTURER\u000d\u000a        ON LECTURER.ID = ACCESS_MEMBER.ID    \u000d\u000a  WHERE 1=1\u000d\u000a    AND ACCESS_MEMBER.ID = :ID\u000d\u000a    AND ACCESS_MEMBER.PWD = MD5(:PWD)\u000d\u000a    AND ACCESS_MEMBER.USE_YN = ''Y''\u000d\u000a    AND ACCESS_MEMBER.EXPIRE_DATE >= CURRENT_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXC_ORDER" operator="!=" value="null">\u000d\u000a<dynamic parameter=":MEMBER_TYPE" operator="!=" value="ET001ET004">\u000d\u000aSELECT IF(COUNT(*) > 0, ''Y'', ''N'') AS ACCESS_YN\u000d\u000a  FROM ACCESS_LIST, ROLE\u000d\u000a WHERE ROLE.MEMBER_ID = ACCESS_LIST.ROLE_MEMBER_ID\u000d\u000a   AND ROLE.ORGANIZATION_ID = ACCESS_LIST.ORGANIZATION_ID\u000d\u000a   AND ACCESS_LIST.ROLE_MEMBER_ID = :ID\u000d\u000a   AND ROLE.USE_YN = ''Y''\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MEMBER_TYPE" operator="==" value="ET001ET004">\u000d\u000aSELECT IF(COUNT(*) > 0, ''Y'', ''N'') AS ACCESS_YN\u000d\u000a  FROM MENU\u000d\u000a WHERE LECTURE_ACCESS_YN = ''Y''\u000d\u000a</dynamic>\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.select.member_r_01','2013-07-22 14:33:53.803000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member for login\u000d\u000a*/\u000d\u000a<dynamic parameter=":EXC_ORDER" operator="==" value="null">\u000d\u000a SELECT ACCESS_MEMBER.MEMBER_TYPE, \u000d\u000a        IF(MEMBER.ID IS NOT NULL,''Y'', ''N'') AS REG_INFO,\u000d\u000a        DATE_FORMAT(CURRENT_TIMESTAMP, ''%Y%m%d%k%i%s'') LOGIN_TIME,\u000d\u000a        ''1'' AS EXC_ORDER\u000d\u000a   FROM ACCESS_MEMBER\u000d\u000a        LEFT OUTER JOIN\u000d\u000a\u0009MEMBER\u000d\u000a\u0009ON MEMBER.ID = ACCESS_MEMBER.ID\u000d\u000a\u0009LEFT OUTER JOIN\u000d\u000a        LECTURER\u000d\u000a        ON LECTURER.ID = ACCESS_MEMBER.ID    \u000d\u000a  WHERE 1=1\u000d\u000a    AND ACCESS_MEMBER.ID = :ID\u000d\u000a    AND ACCESS_MEMBER.PWD = MD5(:PWD)\u000d\u000a    AND ACCESS_MEMBER.USE_YN = ''Y''\u000d\u000a    AND ACCESS_MEMBER.EXPIRE_DATE >= CURRENT_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXC_ORDER" operator="!=" value="null">\u000d\u000aSELECT IF(COUNT(*) > 0, ''Y'', ''N'') AS ACCESS_YN\u000d\u000a  FROM ACCESS_LIST, ROLE\u000d\u000a WHERE ROLE.MEMBER_ID = ACCESS_LIST.ROLE_MEMBER_ID\u000d\u000a   AND ROLE.ORGANIZATION_ID = ACCESS_LIST.ORGANIZATION_ID\u000d\u000a   AND ACCESS_LIST.ROLE_MEMBER_ID = :ID\u000d\u000a   AND ROLE.USE_YN = ''Y''\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.select.member_r_01','2013-07-22 14:41:19.811000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member for login\u000d\u000a*/\u000d\u000a<dynamic parameter=":EXC_ORDER" operator="==" value="null">\u000d\u000a SELECT ACCESS_MEMBER.MEMBER_TYPE, \u000d\u000a        IF(MEMBER.ID IS NOT NULL,''Y'', ''N'') AS REG_INFO,\u000d\u000a        DATE_FORMAT(CURRENT_TIMESTAMP, ''%Y%m%d%k%i%s'') LOGIN_TIME,\u000d\u000a        ''1'' AS EXC_ORDER\u000d\u000a   FROM ACCESS_MEMBER\u000d\u000a        LEFT OUTER JOIN\u000d\u000a\u0009MEMBER\u000d\u000a\u0009ON MEMBER.ID = ACCESS_MEMBER.ID \u000d\u000a  WHERE 1=1\u000d\u000a    AND ACCESS_MEMBER.ID = :ID\u000d\u000a    AND ACCESS_MEMBER.PWD = MD5(:PWD)\u000d\u000a    AND ACCESS_MEMBER.USE_YN = ''Y''\u000d\u000a    AND ACCESS_MEMBER.EXPIRE_DATE >= CURRENT_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXC_ORDER" operator="!=" value="null">\u000d\u000aSELECT IF(COUNT(*) > 0, ''Y'', ''N'') AS ACCESS_YN\u000d\u000a  FROM ACCESS_LIST, ROLE\u000d\u000a WHERE ROLE.MEMBER_ID = ACCESS_LIST.ROLE_MEMBER_ID\u000d\u000a   AND ROLE.ORGANIZATION_ID = ACCESS_LIST.ORGANIZATION_ID\u000d\u000a   AND ACCESS_LIST.ROLE_MEMBER_ID = :ID\u000d\u000a   AND ROLE.USE_YN = ''Y''\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.select.member_r_01','2013-07-22 14:43:50.473000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member for login\u000d\u000a*/\u000d\u000a<dynamic parameter=":EXC_ORDER" operator="==" value="null">\u000d\u000a SELECT ACCESS_MEMBER.MEMBER_TYPE, \u000d\u000a        IF(MEMBER.ID IS NOT NULL,''Y'', ''N'') AS REG_INFO,\u000d\u000a        DATE_FORMAT(CURRENT_TIMESTAMP, ''%Y%m%d%k%i%s'') LOGIN_TIME,\u000d\u000a        ''1'' AS EXC_ORDER\u000d\u000a   FROM ACCESS_MEMBER\u000d\u000a        LEFT OUTER JOIN\u000d\u000a\u0009MEMBER\u000d\u000a\u0009ON MEMBER.ID = ACCESS_MEMBER.ID \u000d\u000a  WHERE 1=1\u000d\u000a    AND ACCESS_MEMBER.ID = :ID\u000d\u000a    AND ACCESS_MEMBER.PWD = MD5(:PWD)\u000d\u000a    AND ACCESS_MEMBER.USE_YN = ''Y''\u000d\u000a    AND ACCESS_MEMBER.EXPIRE_DATE >= CURRENT_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXC_ORDER" operator="==" value="1">\u000d\u000aSELECT IF(COUNT(*) > 0, ''Y'', ''N'') AS ACCESS_YN\u000d\u000a  FROM ACCESS_LIST, ROLE\u000d\u000a WHERE ROLE.MEMBER_ID = ACCESS_LIST.ROLE_MEMBER_ID\u000d\u000a   AND ROLE.ORGANIZATION_ID = ACCESS_LIST.ORGANIZATION_ID\u000d\u000a   AND ACCESS_LIST.ROLE_MEMBER_ID = :ID\u000d\u000a   AND ROLE.USE_YN = ''Y''\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.select.member_r_01','2013-07-22 14:45:22.809000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member for login\u000d\u000a*/\u000d\u000a<dynamic parameter=":EXC_ORDER" operator="==" value="null">\u000d\u000a SELECT ACCESS_MEMBER.MEMBER_TYPE, \u000d\u000a        IF(MEMBER.ID IS NOT NULL,''Y'', ''N'') AS REG_INFO,\u000d\u000a        DATE_FORMAT(CURRENT_TIMESTAMP, ''%Y%m%d%k%i%s'') LOGIN_TIME,\u000d\u000a        ''1'' AS EXC_ORDER\u000d\u000a   FROM ACCESS_MEMBER\u000d\u000a        LEFT OUTER JOIN\u000d\u000a\u0009MEMBER\u000d\u000a\u0009ON MEMBER.ID = ACCESS_MEMBER.ID \u000d\u000a  WHERE 1=1\u000d\u000a    AND ACCESS_MEMBER.ID = :ID\u000d\u000a    AND ACCESS_MEMBER.PWD = MD5(:PWD)\u000d\u000a    AND ACCESS_MEMBER.USE_YN = ''Y''\u000d\u000a    AND ACCESS_MEMBER.EXPIRE_DATE >= CURRENT_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXC_ORDER" operator="!=" value="null">\u000d\u000aSELECT IF(COUNT(*) > 0, ''Y'', ''N'') AS ACCESS_YN\u000d\u000a  FROM ACCESS_LIST, ROLE\u000d\u000a WHERE ROLE.MEMBER_ID = ACCESS_LIST.ROLE_MEMBER_ID\u000d\u000a   AND ROLE.ORGANIZATION_ID = ACCESS_LIST.ORGANIZATION_ID\u000d\u000a   AND ACCESS_LIST.ROLE_MEMBER_ID = :ID\u000d\u000a   AND ROLE.USE_YN = ''Y''\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.select.member_r_02','2013-04-04 15:58:30.196000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) under organization\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID,\u000d\u000a       MEMBER.NAME, \u000d\u000a       ACCESS_MEMBER.MAIL,\u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE,\u000d\u000a       MEMBER.PHONE, \u000d\u000a       MEMBER.MOBILE_PHONE, \u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, '''', MEMBER.JOIN_DATE) AS JOIN_DATE,\u000d\u000a       MEMBER.RETIRED_DATE, \u000d\u000a       EP_CODE.NAME AS MEMBER_TYPE, \u000d\u000a       MEMBER.GOOGLE_ID, \u000d\u000a       MEMBER.RGST_DTTM,\u000d\u000a       MEMBER.MDF_DTTM\u000d\u000a  FROM MEMBER, \u000d\u000a       CODE AS EP_CODE, \u000d\u000a       ACCESS_MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.MEMBER_TYPE = EP_CODE.ID \u000d\u000a   AND ACCESS_MEMBER.ID       = MEMBER.ID\u000d\u000a   AND MEMBER.USE_YN          = ''Y''\u000d\u000a   AND ACCESS_MEMBER.USE_YN   = ''Y''\u000d\u000a   AND (RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMEMBER.MDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMEMBER.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMEMBER.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACCESS_MEMBER.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACCESS_MEMBER.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMEMBER.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMEMBER.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="JOIN_DATE">\u000d\u000aMEMBER.JOIN_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RETIRED_DATE">\u000d\u000aMEMBER.RETIRED_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aEP_CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="GOOGLE_ID">\u000d\u000aMEMBER.GOOGLE_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aMEMBER.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aMEMBER.MDF_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.select.member_r_03','2013-04-04 15:58:33.634000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) under organization\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT COUNT(*) TOTAL_CNT, :page AS page \u000d\u000a  FROM MEMBER, ACCESS_MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.ID       = MEMBER.ID\u000d\u000a   AND MEMBER.USE_YN          = ''Y''\u000d\u000a   AND ACCESS_MEMBER.USE_YN   = ''Y''\u000d\u000a   AND (RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.select.member_r_04','2013-04-04 15:58:37.118000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search access member for management\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT IF(MEMBER.NAME IS NOT NULL, ''Y'', IF(LECTURER.NAME IS NOT NULL, ''Y'', ''N'')) AS RGST_YN,\u000d\u000a       ACCESS_MEMBER.ID, \u000d\u000a       IF(MEMBER.NAME IS NOT NULL, MEMBER.NAME, IF(LECTURER.NAME IS NOT NULL, LECTURER.NAME, ''<![CDATA[<font color=red>\ub4f1\ub85d\uc548\ub428</font>]]>'')) AS NAME,\u000d\u000a       CODE.NAME AS MEMBER_TYPE, \u000d\u000a       ACCESS_MEMBER.MAIL, \u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE, \u000d\u000a       ACCESS_MEMBER.RGST_DTTM, \u000d\u000a       ACCESS_MEMBER.MDF_DTTM \u000d\u000a  FROM ACCESS_MEMBER\u000d\u000a       LEFT OUTER JOIN MEMBER \u000d\u000a       ON MEMBER.ID = ACCESS_MEMBER.ID  \u000d\u000a       AND MEMBER.USE_YN = ''Y''\u000d\u000a       LEFT OUTER JOIN LECTURER \u000d\u000a       ON LECTURER.ID = ACCESS_MEMBER.ID \u000d\u000a       AND LECTURER.USE_YN = ''Y''\u000d\u000a       , CODE\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_ID">\u000d\u000a       , (SELECT DISTINCT ROLE.MEMBER_ID AS MEMBER_ID\u000d\u000a            FROM (SELECT ORGANIZATION.ID, NAME\u000d\u000a                    FROM(SELECT @id := ORGANIZATION_HIERARCHY() AS ID, \u000d\u000a                                 @level AS LEVEL\u000d\u000a                           FROM (SELECT @start_with := :KEYWORD, \u000d\u000a                                        @id := @start_with,\u000d\u000a                                        @level := 0\u000d\u000a                                 )VARS, MENU\u000d\u000a                           WHERE @id IS NOT NULL\u000d\u000a                         ) HIERARCHY\u000d\u000a                    JOIN ORGANIZATION ON ORGANIZATION.ID = HIERARCHY.ID\u000d\u000a                   WHERE ORGANIZATION.USE_YN = ''Y'') ORGN, ROLE\u000d\u000a           WHERE ORGN.ID = ROLE.ORGANIZATION_ID\u000d\u000a             AND ROLE.USE_YN = ''Y'') ORGN \u000d\u000a</dynamic>\u000d\u000a WHERE CODE.ID = ACCESS_MEMBER.MEMBER_TYPE\u000d\u000a   AND ACCESS_MEMBER.USE_YN = ''Y''\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND ACCESS_MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND (MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a        OR\u000d\u000a        LECTURER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a        )\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_ID">\u000d\u000a   AND ORGN.MEMBER_ID = ACCESS_MEMBER.ID\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aACCESS_MEMBER.MDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aACCESS_MEMBER.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aNAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aCODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACCESS_MEMBER.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACCESS_MEMBER.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aACCESS_MEMBER.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aACCESS_MEMBER.MDF_DTTM \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.select.member_r_05','2013-04-04 15:58:40.915000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search access member for management\u000d\u000a*/\u000d\u000aSELECT COUNT(*) TOTAL_CNT, :page AS page \u000d\u000a  FROM ACCESS_MEMBER\u000d\u000a       LEFT OUTER JOIN MEMBER \u000d\u000a       ON MEMBER.ID = ACCESS_MEMBER.ID  \u000d\u000a       AND MEMBER.USE_YN = ''Y''\u000d\u000a       LEFT OUTER JOIN LECTURER \u000d\u000a       ON LECTURER.ID = ACCESS_MEMBER.ID \u000d\u000a       AND LECTURER.USE_YN = ''Y''\u000d\u000a       , CODE\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_ID">\u000d\u000a       , (SELECT DISTINCT ROLE.MEMBER_ID AS MEMBER_ID\u000d\u000a            FROM (SELECT ORGANIZATION.ID, NAME\u000d\u000a                    FROM(SELECT @id := ORGANIZATION_HIERARCHY() AS ID, \u000d\u000a                                 @level AS LEVEL\u000d\u000a                           FROM (SELECT @start_with := :KEYWORD, \u000d\u000a                                        @id := @start_with,\u000d\u000a                                        @level := 0\u000d\u000a                                 )VARS, MENU\u000d\u000a                           WHERE @id IS NOT NULL\u000d\u000a                         ) HIERARCHY\u000d\u000a                    JOIN ORGANIZATION ON ORGANIZATION.ID = HIERARCHY.ID\u000d\u000a                   WHERE ORGANIZATION.USE_YN = ''Y'') ORGN, ROLE\u000d\u000a           WHERE ORGN.ID = ROLE.ORGANIZATION_ID\u000d\u000a             AND ROLE.USE_YN = ''Y'') ORGN \u000d\u000a</dynamic>\u000d\u000a WHERE CODE.ID = ACCESS_MEMBER.MEMBER_TYPE\u000d\u000a   AND ACCESS_MEMBER.USE_YN = ''Y''\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND ACCESS_MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND (MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a        OR\u000d\u000a        LECTURER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a        )\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_ID">\u000d\u000a   AND ORGN.MEMBER_ID = ACCESS_MEMBER.ID\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.select.member_r_06','2013-04-04 15:58:44.196000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member for management\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID, \u000d\u000a       MEMBER.NAME, \u000d\u000a       CODE.NAME AS MEMBER_TYPE,\u000d\u000a       ACCESS_MEMBER.MAIL,\u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE,\u000d\u000a       MEMBER.PHONE,\u000d\u000a       MEMBER.MOBILE_PHONE,\u000d\u000a       MEMBER.PHOTO,\u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, '''', MEMBER.JOIN_DATE) AS JOIN_DATE,\u000d\u000a       IF(MEMBER.RETIRED_DATE IS NULL, '''', MEMBER.RETIRED_DATE) AS RETIRED_DATE,\u000d\u000a       MEMBER.GOOGLE_ID,\u000d\u000a       MEMBER.RGST_DTTM,\u000d\u000a       MEMBER.MDF_DTTM\u000d\u000a  FROM MEMBER, ACCESS_MEMBER, CODE\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.ID = MEMBER.ID\u000d\u000a   AND CODE.ID = ACCESS_MEMBER.MEMBER_TYPE\u000d\u000a   AND ACCESS_MEMBER.USE_YN = ''Y''\u000d\u000a   AND MEMBER.USE_YN = ''Y''\u000d\u000a   AND MEMBER.ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.select.member_r_07','2013-04-04 15:58:47.868000',5,'DOCUMENT','true ','SELECT NAME, MAIL, PHONE, MOBILE_PHONE, PHOTO\u000d\u000a  FROM VW_MEMBER\u000d\u000a WHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.select.organization_r_01','2013-04-04 15:59:18.837000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.19\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Orgamization search\u000d\u000a*/\u000d\u000aSELECT CHILD.ID, \u000d\u000a       IF(CHILD.ID <> CHILD.PARENT_ID, CHILD.PARENT_ID, ''[N/A]'') AS PARENT_ID, \u000d\u000a       IF(CHILD.ID <> CHILD.PARENT_ID, PARENT.NAME, ''[N/A]'') AS PARENT_NAME, \u000d\u000a       CHILD.NAME, \u000d\u000a       CHILD.RGST_DTTM, \u000d\u000a       CHILD.MDF_DTTM\u000d\u000a  FROM ORGANIZATION PARENT, ORGANIZATION CHILD\u000d\u000a WHERE 1=1\u000d\u000a   AND CHILD.PARENT_ID = PARENT.ID\u000d\u000a   AND CHILD.USE_YN <> ''N''\u000d\u000a   AND PARENT.USE_YN <> ''N''\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND CHILD.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND CHILD.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="PARENT_ID">\u000d\u000a   AND CHILD.PARENT_ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="PARENT_NAME">\u000d\u000a   AND PARENT.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aCHILD.PARENT_ID ASC, CHILD.MDF_DTTM ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aCHILD.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PARENT_ID">\u000d\u000aCHILD.PARENT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PARENT_NAME">\u000d\u000aPARENT.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aCHILD.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aCHILD.MDF_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aCHILD.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.select.organization_r_02','2013-04-04 15:59:22.665000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.19\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Orgamization list count\u000d\u000a*/\u000d\u000aSELECT COUNT(*) TOTAL_CNT, :page AS page \u000d\u000a  FROM ORGANIZATION PARENT, ORGANIZATION CHILD\u000d\u000a WHERE 1=1\u000d\u000a   AND CHILD.PARENT_ID = PARENT.ID\u000d\u000a   AND CHILD.USE_YN <> ''N''\u000d\u000a   AND PARENT.USE_YN <> ''N''\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND CHILD.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND CHILD.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="PARENT_ID">\u000d\u000a   AND CHILD.PARENT_ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="PARENT_NAME">\u000d\u000a   AND PARENT.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.select.organization_r_03','2013-04-04 15:59:26.181000',5,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.10\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Orgamization search for select box\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT ID, NAME\u000d\u000a  FROM ORGANIZATION\u000d\u000aORDER BY NAME ASC\u000d\u000aLIMIT 0, 30')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.select.role_r_01','2013-04-04 15:59:30.181000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) under organization\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID, \u000d\u000a       MEMBER.NAME, \u000d\u000a       RL_CODE.NAME AS ROLE_NAME,\u000d\u000a       ACCESS_MEMBER.MAIL,\u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE,\u000d\u000a       MEMBER.PHONE, \u000d\u000a       MEMBER.MOBILE_PHONE, \u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, '''', MEMBER.JOIN_DATE) AS JOIN_DATE,\u000d\u000a       MEMBER.RETIRED_DATE, \u000d\u000a       EP_CODE.NAME AS MEMBER_TYPE, \u000d\u000a       MEMBER.GOOGLE_ID, \u000d\u000a       ROLE.RGST_DTTM, \u000d\u000a       ROLE.MDF_DTTM\u000d\u000a  FROM ROLE, MEMBER, \u000d\u000a       CODE AS EP_CODE, \u000d\u000a       CODE AS RL_CODE, \u000d\u000a       ACCESS_MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.MEMBER_TYPE = EP_CODE.ID \u000d\u000a   AND ACCESS_MEMBER.ID       = MEMBER.ID\u000d\u000a   AND ROLE.MEMBER_ID         = MEMBER.ID\u000d\u000a   AND RL_CODE.ID             = ROLE.ROLE_CODE\u000d\u000a   AND ROLE.ORGANIZATION_ID   = :ORGANIZATION_ID\u000d\u000a   AND ROLE.USE_YN            = ''Y''\u000d\u000a   AND MEMBER.USE_YN          = ''Y''\u000d\u000a   AND ACCESS_MEMBER.USE_YN   = ''Y''\u000d\u000a   AND (RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aROLE.MDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMEMBER.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMEMBER.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ROLE_NAME">\u000d\u000aRL_CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACCESS_MEMBER.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACCESS_MEMBER.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMEMBER.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMEMBER.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="JOIN_DATE">\u000d\u000aMEMBER.JOIN_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RETIRED_DATE">\u000d\u000aMEMBER.RETIRED_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EMPLOYMENT_TYPE">\u000d\u000aEP_CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="GOOGLE_ID">\u000d\u000aMEMBER.GOOGLE_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aROLE.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aROLE.MDF_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.select.role_r_02','2013-04-04 15:59:33.696000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) under organization\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT COUNT(*) TOTAL_CNT, :page AS page \u000d\u000a  FROM ROLE, MEMBER, ACCESS_MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.ID       = MEMBER.ID\u000d\u000a   AND ROLE.MEMBER_ID         = MEMBER.ID\u000d\u000a   AND ROLE.ORGANIZATION_ID   = :ORGANIZATION_ID\u000d\u000a   AND ROLE.USE_YN            = ''Y''\u000d\u000a   AND MEMBER.USE_YN          = ''Y''\u000d\u000a   AND ACCESS_MEMBER.USE_YN   = ''Y''\u000d\u000a   AND (RETIRED_DATE IS NULL OR RETIRED_DATE = '''')')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.select.role_r_03','2013-04-04 15:59:37.321000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) which isn''t registered on access list of a specific menu\u000d\u000a*/\u000d\u000aSELECT DISTINCT ROLE.MEMBER_ID    AS MEMBER_ID,\u000d\u000a                MEMBER.NAME       AS MEMBER_NAME,\u000d\u000a                ORGANIZATION.NAME AS ORGANIZATION_NAME,\u000d\u000a                ORGANIZATION.ID   AS ORGANIZATION_ID,\u000d\u000a                CODE_RC.NAME      AS ROLE_NAME\u000d\u000a  FROM ROLE, MEMBER, ORGANIZATION, CODE CODE_RC,\u000d\u000a       (SELECT DISTINCT B.ORGANIZATION_ID, B.MEMBER_ID\u000d\u000a          FROM (SELECT MENU.ID, LEVEL, NAME\u000d\u000a                  FROM (SELECT @id := MENU_HIERARCHY() AS ID, \u000d\u000a                               @level AS LEVEL\u000d\u000a                          FROM (SELECT @start_with := :MENU_ID, \u000d\u000a                                       @id := @start_with,\u000d\u000a                                       @level := 0\u000d\u000a                               )VARS, MENU\u000d\u000a                        WHERE @id IS NOT NULL\u000d\u000a                       ) HIERARCHY\u000d\u000a                       JOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000a                 WHERE MENU.LINK_VALUE != '''' AND MENU.LINK_VALUE IS NOT NULL\u000d\u000a               ) A ,\u000d\u000a               (SELECT BASE.ORGANIZATION_ID, BASE.MEMBER_ID, BASE.MENU_ID\u000d\u000a                  FROM (SELECT ROLE.ORGANIZATION_ID, ROLE.MEMBER_ID, ACCESS_LIST.MENU_ID\u000d\u000a                          FROM ROLE,ACCESS_LIST\u000d\u000a                         WHERE ROLE.USE_YN = ''Y''\u000d\u000a                       ) BASE \u000d\u000a                       LEFT OUTER JOIN\u000d\u000a                       (SELECT ACCESS_LIST.ORGANIZATION_ID, ACCESS_LIST.MEMBER_ID, ACCESS_LIST.MENU_ID, MENU.ID\u000d\u000a                          FROM MENU\u000d\u000a                               LEFT OUTER JOIN \u000d\u000a                               (SELECT ROLE.ORGANIZATION_ID, ROLE.MEMBER_ID, ACCESS_LIST.MENU_ID\u000d\u000a                                  FROM ROLE\u000d\u000a                                       LEFT OUTER JOIN ACCESS_LIST\u000d\u000a                                       ON ROLE.MEMBER_ID        = ACCESS_LIST.ROLE_MEMBER_ID\u000d\u000a                                       AND ROLE.ORGANIZATION_ID = ACCESS_LIST.ORGANIZATION_ID\u000d\u000a                                 WHERE ROLE.USE_YN = ''Y''\u000d\u000a                               ) ACCESS_LIST\u000d\u000a                               ON ACCESS_LIST.MENU_ID = MENU.ID\u000d\u000a                         WHERE MENU.LINK_VALUE != '''' AND MENU.LINK_VALUE IS NOT NULL\u000d\u000a                       ) CPTR \u000d\u000a                        ON BASE.ORGANIZATION_ID  = CPTR.ORGANIZATION_ID\u000d\u000a                       AND BASE.MEMBER_ID       = CPTR.MEMBER_ID\u000d\u000a                       AND BASE.MENU_ID         = CPTR.MENU_ID\u000d\u000a                 WHERE CPTR.MEMBER_ID IS NULL\u000d\u000a                 UNION ALL\u000d\u000a                SELECT BASE.ORGANIZATION_ID, BASE.MEMBER_ID, CPTR.MENU_ID\u000d\u000a                  FROM (SELECT ROLE.ORGANIZATION_ID, ROLE.MEMBER_ID, ACCESS_LIST.MENU_ID\u000d\u000a                          FROM ROLE,ACCESS_LIST\u000d\u000a                         WHERE ROLE.USE_YN = ''Y''\u000d\u000a                       ) BASE \u000d\u000a                       RIGHT OUTER JOIN\u000d\u000a                       (SELECT ACCESS_LIST.ORGANIZATION_ID, ACCESS_LIST.MEMBER_ID, MENU.ID AS MENU_ID\u000d\u000a                          FROM MENU\u000d\u000a                               LEFT OUTER JOIN \u000d\u000a                               (SELECT ROLE.ORGANIZATION_ID, ROLE.MEMBER_ID, ACCESS_LIST.MENU_ID\u000d\u000a                                  FROM ROLE\u000d\u000a                                       LEFT OUTER JOIN ACCESS_LIST\u000d\u000a                                       ON ROLE.MEMBER_ID        = ACCESS_LIST.ROLE_MEMBER_ID\u000d\u000a                                       AND ROLE.ORGANIZATION_ID = ACCESS_LIST.ORGANIZATION_ID\u000d\u000a                                 WHERE ROLE.USE_YN = ''Y''\u000d\u000a                               ) ACCESS_LIST\u000d\u000a                               ON ACCESS_LIST.MENU_ID = MENU.ID\u000d\u000a                         WHERE MENU.LINK_VALUE != '''' AND MENU.LINK_VALUE IS NOT NULL\u000d\u000a                       ) CPTR \u000d\u000a                        ON BASE.ORGANIZATION_ID = CPTR.ORGANIZATION_ID\u000d\u000a                       AND BASE.MEMBER_ID       = CPTR.MEMBER_ID\u000d\u000a                       AND BASE.MENU_ID         = CPTR.MENU_ID\u000d\u000a                     WHERE CPTR.MEMBER_ID IS NULL\u000d\u000a               ) B\u000d\u000a         WHERE A.ID = B.MENU_ID\u000d\u000a       ) BASE\u000d\u000a WHERE ROLE.MEMBER_ID       = IF(BASE.MEMBER_ID IS NULL, ROLE.MEMBER_ID, BASE.MEMBER_ID)\u000d\u000a   AND ROLE.ORGANIZATION_ID = IF(BASE.ORGANIZATION_ID IS NULL, ROLE.ORGANIZATION_ID, BASE.ORGANIZATION_ID)\u000d\u000a   AND ROLE.ORGANIZATION_ID = ORGANIZATION.ID\u000d\u000a   AND ROLE.MEMBER_ID       = MEMBER.ID\u000d\u000a   AND CODE_RC.ID           = ROLE.ROLE_CODE\u000d\u000a   AND ORGANIZATION.USE_YN  = ''Y''\u000d\u000a   AND ROLE.USE_YN          = ''Y''\u000d\u000a   AND MEMBER.USE_YN        = ''Y''\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="MEMBER_ID">\u000d\u000a   AND ROLE.MEMBER_ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="MEMBER_NAME">\u000d\u000a   AND MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_ID">\u000d\u000a   AND ORGANIZATION.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_NAME">\u000d\u000a   AND ORGANIZATION.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aORGANIZATION.NAME ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_ID">\u000d\u000aROLE.MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_NAME">\u000d\u000aMEMBER.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ORGANIZATION_NAME">\u000d\u000aORGANIZATION.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ROLE_NAME">\u000d\u000aCODE_RC.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.select.role_r_04','2013-04-04 15:59:40.946000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) which isn''t registered on access list of a specific menu\u000d\u000a*/\u000d\u000aSELECT DISTINCT COUNT(*) TOTAL_CNT, :page AS page\u000d\u000a  FROM ROLE, MEMBER, ORGANIZATION, CODE CODE_RC,\u000d\u000a       (SELECT DISTINCT B.ORGANIZATION_ID, B.MEMBER_ID\u000d\u000a          FROM (SELECT MENU.ID, LEVEL, NAME\u000d\u000a                  FROM (SELECT @id := MENU_HIERARCHY() AS ID, \u000d\u000a                               @level AS LEVEL\u000d\u000a                          FROM (SELECT @start_with := :MENU_ID, \u000d\u000a                                       @id := @start_with,\u000d\u000a                                       @level := 0\u000d\u000a                               )VARS, MENU\u000d\u000a                        WHERE @id IS NOT NULL\u000d\u000a                       ) HIERARCHY\u000d\u000a                       JOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000a                 WHERE MENU.LINK_VALUE != '''' AND MENU.LINK_VALUE IS NOT NULL\u000d\u000a               ) A ,\u000d\u000a               (SELECT BASE.ORGANIZATION_ID, BASE.MEMBER_ID, BASE.MENU_ID\u000d\u000a                  FROM (SELECT ROLE.ORGANIZATION_ID, ROLE.MEMBER_ID, ACCESS_LIST.MENU_ID\u000d\u000a                          FROM ROLE,ACCESS_LIST\u000d\u000a                         WHERE ROLE.USE_YN = ''Y''\u000d\u000a                       ) BASE \u000d\u000a                       LEFT OUTER JOIN\u000d\u000a                       (SELECT ACCESS_LIST.ORGANIZATION_ID, ACCESS_LIST.MEMBER_ID, ACCESS_LIST.MENU_ID, MENU.ID\u000d\u000a                          FROM MENU\u000d\u000a                               LEFT OUTER JOIN \u000d\u000a                               (SELECT ROLE.ORGANIZATION_ID, ROLE.MEMBER_ID, ACCESS_LIST.MENU_ID\u000d\u000a                                  FROM ROLE\u000d\u000a                                       LEFT OUTER JOIN ACCESS_LIST\u000d\u000a                                       ON ROLE.MEMBER_ID        = ACCESS_LIST.ROLE_MEMBER_ID\u000d\u000a                                       AND ROLE.ORGANIZATION_ID = ACCESS_LIST.ORGANIZATION_ID\u000d\u000a                                 WHERE ROLE.USE_YN = ''Y''\u000d\u000a                               ) ACCESS_LIST\u000d\u000a                               ON ACCESS_LIST.MENU_ID = MENU.ID\u000d\u000a                         WHERE MENU.LINK_VALUE != '''' AND MENU.LINK_VALUE IS NOT NULL\u000d\u000a                       ) CPTR \u000d\u000a                        ON BASE.ORGANIZATION_ID  = CPTR.ORGANIZATION_ID\u000d\u000a                       AND BASE.MEMBER_ID       = CPTR.MEMBER_ID\u000d\u000a                       AND BASE.MENU_ID         = CPTR.MENU_ID\u000d\u000a                 WHERE CPTR.MEMBER_ID IS NULL\u000d\u000a                 UNION ALL\u000d\u000a                SELECT BASE.ORGANIZATION_ID, BASE.MEMBER_ID, CPTR.MENU_ID\u000d\u000a                  FROM (SELECT ROLE.ORGANIZATION_ID, ROLE.MEMBER_ID, ACCESS_LIST.MENU_ID\u000d\u000a                          FROM ROLE,ACCESS_LIST\u000d\u000a                         WHERE ROLE.USE_YN = ''Y''\u000d\u000a                       ) BASE \u000d\u000a                       RIGHT OUTER JOIN\u000d\u000a                       (SELECT ACCESS_LIST.ORGANIZATION_ID, ACCESS_LIST.MEMBER_ID, MENU.ID AS MENU_ID\u000d\u000a                          FROM MENU\u000d\u000a                               LEFT OUTER JOIN \u000d\u000a                               (SELECT ROLE.ORGANIZATION_ID, ROLE.MEMBER_ID, ACCESS_LIST.MENU_ID\u000d\u000a                                  FROM ROLE\u000d\u000a                                       LEFT OUTER JOIN ACCESS_LIST\u000d\u000a                                       ON ROLE.MEMBER_ID        = ACCESS_LIST.ROLE_MEMBER_ID\u000d\u000a                                       AND ROLE.ORGANIZATION_ID = ACCESS_LIST.ORGANIZATION_ID\u000d\u000a                                 WHERE ROLE.USE_YN = ''Y''\u000d\u000a                               ) ACCESS_LIST\u000d\u000a                               ON ACCESS_LIST.MENU_ID = MENU.ID\u000d\u000a                         WHERE MENU.LINK_VALUE != '''' AND MENU.LINK_VALUE IS NOT NULL\u000d\u000a                       ) CPTR \u000d\u000a                        ON BASE.ORGANIZATION_ID = CPTR.ORGANIZATION_ID\u000d\u000a                       AND BASE.MEMBER_ID       = CPTR.MEMBER_ID\u000d\u000a                       AND BASE.MENU_ID         = CPTR.MENU_ID\u000d\u000a                     WHERE CPTR.MEMBER_ID IS NULL\u000d\u000a               ) B\u000d\u000a         WHERE A.ID = B.MENU_ID\u000d\u000a       ) BASE\u000d\u000a WHERE ROLE.MEMBER_ID       = IF(BASE.MEMBER_ID IS NULL, ROLE.MEMBER_ID, BASE.MEMBER_ID)\u000d\u000a   AND ROLE.ORGANIZATION_ID = IF(BASE.ORGANIZATION_ID IS NULL, ROLE.ORGANIZATION_ID, BASE.ORGANIZATION_ID)\u000d\u000a   AND ROLE.ORGANIZATION_ID = ORGANIZATION.ID\u000d\u000a   AND ROLE.MEMBER_ID       = MEMBER.ID\u000d\u000a   AND CODE_RC.ID           = ROLE.ROLE_CODE\u000d\u000a   AND ORGANIZATION.USE_YN  = ''Y''\u000d\u000a   AND ROLE.USE_YN          = ''Y''\u000d\u000a   AND MEMBER.USE_YN        = ''Y''\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="MEMBER_ID">\u000d\u000a   AND ROLE.MEMBER_ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="MEMBER_NAME">\u000d\u000a   AND MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_ID">\u000d\u000a   AND ORGANIZATION.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_NAME">\u000d\u000a   AND ORGANIZATION.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.update','2013-03-18 13:38:51.156000',4,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.update.access_list_u_01','2013-04-04 15:59:56.774000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.16\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Modify access list\u000d\u000a*/\u000d\u000a\u000d\u000aUPDATE ACCESS_LIST\u000d\u000a   SET ACCESS_LEVEL    = :ACCESS_LEVEL\u000d\u000a WHERE MENU_ID         = :MENU_ID\u000d\u000a   AND ORGANIZATION_ID = :ORGANIZATION_ID\u000d\u000a   AND ROLE_MEMBER_ID  = :ROLE_MEMBER_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.update.access_member_u_01','2013-04-04 16:00:00.212000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Modify access member.\u000d\u000a*/\u000d\u000aUPDATE ACCESS_MEMBER \u000d\u000a   SET\u000d\u000a<dynamic parameter=":PWD" operator="!=" value="">\u000d\u000a       PWD = MD5(:PWD),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MAIL" operator="!=" value="">\u000d\u000a       MAIL = :MAIL,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MEMBER_TYPE" operator="!=" value="">\u000d\u000a       MEMBER_TYPE = :MEMBER_TYPE,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXPIRE_DATE" operator="!=" value="">\u000d\u000a       EXPIRE_DATE = STR_TO_DATE(:EXPIRE_DATE, ''%Y-%m-%d''),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_YN" operator="!=" value="">\u000d\u000a       USE_YN = :USE_YN,\u000d\u000a</dynamic>\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.update.init_password_u_01','2013-04-04 16:00:03.603000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.10\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Initialize password\u000d\u000a*/\u000d\u000aUPDATE ACCESS_MEMBER\u000d\u000a  SET PWD = MD5(''new1234!'')\u000d\u000aWHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.update.lecturer_u_01','2013-04-04 16:00:07.478000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Modify lecturer information.\u000d\u000a*/\u000d\u000aUPDATE LECTURER\u000d\u000a   SET \u000d\u000a<dynamic parameter=":NAME" operator="!=" value="">\u000d\u000a       NAME = :NAME,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PHONE" operator="!=" value="">\u000d\u000a       PHONE = :PHONE,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MOBILE_PHONE" operator="!=" value="">\u000d\u000a       MOBILE_PHONE = :MOBILE_PHONE,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":FAX" operator="!=" value="">\u000d\u000a       FAX = :FAX, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":WEB_SITE" operator="!=" value="">\u000d\u000a       WEB_SITE = :WEB_SITE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":ZIP_CODE" operator="!=" value="">\u000d\u000a       ZIP_CODE = :ZIP_CODE,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":ADDR1" operator="!=" value="">\u000d\u000a       ADDR1 = :ADDR1, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":ADDR2" operator="!=" value="">\u000d\u000a       ADDR2 = :ADDR2, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":DEGREE" operator="!=" value="">\u000d\u000a       DEGREE = :DEGREE, /*\ud559\uc704*/\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":ORGANIZATION" operator="!=" value="">\u000d\u000a       ORGANIZATION = :ORGANIZATION, /*\uc18c\uc18d*/\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MAJOR" operator="!=" value="">\u000d\u000a       MAJOR = :MAJOR, /*\uc804\uacf5*/\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":CAREER" operator="!=" value="">\u000d\u000a       CAREER = :CAREER, /*\uacbd\ub825*/\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SPECIALISM" operator="!=" value="">\u000d\u000a       SPECIALISM = :SPECIALISM, /*\uc804\ubb38\ubd84\uc57c*/\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXP_NOTE" operator="!=" value="">\u000d\u000a       EXP_NOTE = :EXP_NOTE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PHOTO" operator="!=" value="null">\u000d\u000a       PHOTO = :PHOTO,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":GOOGLE_ID" operator="!=" value="">\u000d\u000a       GOOGLE_ID = :GOOGLE_ID,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":GOOGLE_PW" operator="!=" value="">\u000d\u000a       GOOGLE_PW = HEX(AES_ENCRYPT(:GOOGLE_PW, MD5(''#!%''))),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_YN" operator="!=" value="">\u000d\u000a       USE_YN = :USE_YN,\u000d\u000a</dynamic>\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.update.member_u_01','2013-04-04 16:00:11.212000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Modify member information.\u000d\u000a*/\u000d\u000aUPDATE MEMBER\u000d\u000a   SET \u000d\u000a<dynamic parameter=":NAME" operator="!=" value="">\u000d\u000a       NAME = :NAME,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PHONE" operator="!=" value="">\u000d\u000a       PHONE = :PHONE,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MOBILE_PHONE" operator="!=" value="">\u000d\u000a       MOBILE_PHONE = :MOBILE_PHONE,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PHOTO" operator="!=" value="null">\u000d\u000a       PHOTO = :PHOTO,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":JOIN_DATE" operator="!=" value="">\u000d\u000a       JOIN_DATE = STR_TO_DATE(:JOIN_DATE, ''%Y-%m-%d''),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":RETIRE_DATE" operator="!=" value="">\u000d\u000a       RETIRE_DATE = STR_TO_DATE(:RETIRE_DATE, ''%Y-%m-%d''),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":GOOGLE_ID" operator="!=" value="">\u000d\u000a       GOOGLE_ID = :GOOGLE_ID,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":GOOGLE_PW" operator="!=" value="">\u000d\u000a       GOOGLE_PW = HEX(AES_ENCRYPT(:GOOGLE_PW, MD5(''#!%''))),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_YN" operator="!=" value="">\u000d\u000a       USE_YN = :USE_YN,\u000d\u000a</dynamic>\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.update.organization_u_01','2013-04-04 16:00:14.462000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.04\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Update organization\u000d\u000a*/\u000d\u000a\u000d\u000aUPDATE ORGANIZATION AS ORG\u000d\u000aSET\u000d\u000a<dynamic parameter=":PARENT_ID" operator="!=" value="">\u000d\u000aORG.PARENT_ID = :PARENT_ID,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":NAME" operator="!=" value="">\u000d\u000aORG.NAME = :NAME,\u000d\u000a</dynamic>\u000d\u000aORG.MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.update.organization_u_02','2013-04-04 16:00:17.743000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.04\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Disable organization\u000d\u000a\u0009:TEST_VALUE\u000d\u000a*/\u000d\u000a\u000d\u000aUPDATE ORGANIZATION AS ORG,\u000d\u000a       (\u000d\u000a       SELECT ORGANIZATION.ID\u000d\u000a        FROM(\u000d\u000a             SELECT @id := ORGANIZATION_HIERARCHY() AS ID, \u000d\u000a                    @level AS LEVEL\u000d\u000a                    FROM (\u000d\u000a                          SELECT @start_with := :ID, \u000d\u000a                                 @id := @start_with,\u000d\u000a                                 @level := 0\u000d\u000a                         )VARS, MENU\u000d\u000a                   WHERE @id IS NOT NULL\u000d\u000a            ) HIERARCHY\u000d\u000a            JOIN ORGANIZATION ON ORGANIZATION.ID = HIERARCHY.ID\u000d\u000a      WHERE ORGANIZATION.USE_YN = ''Y''\u000d\u000a       ) AS HRY\u000d\u000aSET ORG.USE_YN = ''N'',\u000d\u000a    ORG.MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE ORG.ID = HRY.ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.member.update.role_u_01','2013-04-04 16:00:20.931000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.08\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Modify role.\u000d\u000a*/\u000d\u000a\u000d\u000aUPDATE ROLE \u000d\u000a   SET \u000d\u000a<dynamic parameter=":ROLE_CODE" operator="!=" value="">\u000d\u000a       ROLE_CODE = :ROLE_CODE,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_YN" operator="!=" value="">\u000d\u000a       USE_YN = :USE_YN,\u000d\u000a</dynamic>\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE ORGANIZATION_ID = :ORGANIZATION_ID\u000d\u000a   AND MEMBER_ID       = :MEMBER_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.menu','2013-03-18 13:38:51.156000',3,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.menu.delete','2013-03-18 13:38:51.156000',4,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.menu.delete.menu_d_01','2013-04-04 16:00:36.415000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.18\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : \uc120\ud0dd \uba54\ub274, \ud558\uc704 \uba54\ub274\uc640 \uc5f0\uad00\ub41c \ubaa8\ub4e0 \uc811\uadfc\uc815\ubcf4 \uc0ad\uc81c\u000d\u000a*/\u000d\u000aDELETE ACC\u000d\u000a  FROM ACCESS_LIST ACC,\u000d\u000a       (SELECT MENU.ID, LEVEL\u000d\u000a          FROM(SELECT @id := MENU_HIERARCHY() AS ID, \u000d\u000a                      @level AS LEVEL\u000d\u000a                 FROM (SELECT @start_with := :ID, \u000d\u000a                              @id := @start_with,\u000d\u000a                              @level := 0\u000d\u000a                      )VARS, MENU\u000d\u000a                WHERE @id IS NOT NULL\u000d\u000a               ) HIERARCHY\u000d\u000a               JOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000a       ) M\u000d\u000aWHERE ACC.MENU_ID = M.ID\u000d\u000a\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.menu.delete.menu_d_02','2013-04-04 16:00:44.556000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.18\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : \uc120\ud0dd \uba54\ub274, \ud558\uc704 \uba54\ub274 \ubaa8\ub450 \uc0ad\uc81c. foreign key \uc81c\uc57d \ub54c\ubb38\uc5d0,\u000d\u000a                  common.free_fk, common.set_fk \uac19\uc774 \uc2e4\ud589 \ud574\uc57c \ub428.\u000d\u000a*/\u000d\u000aDELETE M1\u000d\u000a  FROM MENU M1,\u000d\u000a       (SELECT MENU.ID, LEVEL\u000d\u000a          FROM(SELECT @id := MENU_HIERARCHY() AS ID, \u000d\u000a                      @level AS LEVEL\u000d\u000a                 FROM (SELECT @start_with := :ID, \u000d\u000a                              @id := @start_with,\u000d\u000a                              @level := 0\u000d\u000a                      )VARS, MENU\u000d\u000a                WHERE @id IS NOT NULL\u000d\u000a               ) HIERARCHY\u000d\u000a               JOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000a       ) M2\u000d\u000aWHERE M1.ID = M2.ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.menu.insert','2013-03-18 13:38:51.156000',4,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.menu.insert.menu_i_01','2013-04-04 16:00:52.696000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.10\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Insert new menu\u000d\u000a*/\u000d\u000a\u000d\u000aINSERT INTO MENU \u000d\u000a\u0009\u0009(\u000d\u000a        ID, \u000d\u000a        PARENT_ID, \u000d\u000a        NAME, \u000d\u000a        MENU_ORDER,\u000d\u000a<dynamic parameter=":IMAGE" operator="!=" value="null">\u000d\u000a        IMAGE, \u000d\u000a</dynamic>\u000d\u000a        LINK_VALUE, \u000d\u000a        LECTURE_ACCESS_YN, \u000d\u000a        ACCESS_ALL_YN, \u000d\u000a        RGST_DTTM, \u000d\u000a        RGST_MEMBER_ID, \u000d\u000a        MDF_DTTM, \u000d\u000a        MDF_MEMBER_ID\u000d\u000a        ) \u000d\u000a<dynamic parameter=":PARENT_ID" operator="==" value = "">\u000d\u000aSELECT  :ID                AS ID, \u000d\u000a        :ID                AS PARENT_ID, \u000d\u000a        :NAME              AS NAME, \u000d\u000a        IF(MAX(MENU_ORDER) IS NULL ,  0, MAX(MENU_ORDER)+1)  AS MENU_ORDER,\u000d\u000a<dynamic parameter=":IMAGE" operator="!=" value="null">\u000d\u000a        :IMAGE             AS IMAGE, \u000d\u000a</dynamic>\u000d\u000a        :LINK_VALUE        AS LINK_VALUE, \u000d\u000a        :LECTURE_ACCESS_YN AS LECTURE_ACCESS_YN, \u000d\u000a        :ACCESS_ALL_YN     AS ACCESS_ALL_YN, \u000d\u000a        CURRENT_TIMESTAMP, \u000d\u000a        :LOGIN_MEMBER      AS RGST_MEMBER, \u000d\u000a        CURRENT_TIMESTAMP, \u000d\u000a        :LOGIN_MEMBER      AS MDF_MEMBER\u000d\u000a   FROM MENU\u000d\u000a  WHERE PARENT_ID = ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PARENT_ID" operator="!=" value="">\u000d\u000aSELECT  :ID                AS ID, \u000d\u000a        :PARENT_ID         AS PARENT_ID, \u000d\u000a        :NAME              AS NAME, \u000d\u000a        IF(MAX(MENU_ORDER) IS NULL ,  0, MAX(MENU_ORDER)+1)  AS MENU_ORDER,\u000d\u000a<<dynamic parameter=":IMAGE" operator="!=" value="null">\u000d\u000a        :IMAGE             AS IMAGE, \u000d\u000a</dynamic>\u000d\u000a        :LINK_VALUE        AS LINK_VALUE, \u000d\u000a        :LECTURE_ACCESS_YN AS LECTURE_ACCESS_YN, \u000d\u000a        :ACCESS_ALL_YN     AS ACCESS_ALL_YN, \u000d\u000a        CURRENT_TIMESTAMP, \u000d\u000a        :LOGIN_MEMBER      AS RGST_MEMBER, \u000d\u000a        CURRENT_TIMESTAMP, \u000d\u000a        :LOGIN_MEMBER      AS MDF_MEMBER\u000d\u000a   FROM MENU\u000d\u000aWHERE PARENT_ID = :PARENT_ID\u000d\u000a  AND PARENT_ID <> ID\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.menu.select','2013-03-18 13:38:51.156000',4,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.menu.select.menu_r_01','2013-04-04 16:00:59.228000',5,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.26\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Retrieve top menu list for login\u000d\u000a*/\u000d\u000aSELECT ID, NAME, LINK_VALUE, IMAGE\u000d\u000a  FROM MENU\u000d\u000a WHERE ID = PARENT_ID\u000d\u000aORDER BY MENU_ORDER ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.menu.select.menu_r_02','2013-04-04 16:01:03.634000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.26\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Retrieve top menu list for login\u000d\u000a*/\u000d\u000aSELECT ID, NAME, LINK_VALUE, IMAGE\u000d\u000a  FROM MENU\u000d\u000a WHERE PARENT_ID = :PARENT_ID\u000d\u000a   AND ID <> PARENT_ID\u000d\u000aORDER BY MENU_ORDER ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.menu.select.menu_r_03','2013-04-04 16:01:07.634000',5,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.06\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Retrieve top menu list for management\u000d\u000a*/\u000d\u000aSELECT ID, \u000d\u000a       PARENT_ID, \u000d\u000a       NAME, \u000d\u000a       MENU_ORDER, \u000d\u000a       LINK_VALUE, \u000d\u000a       IF(IMAGE IS NULL, ''N'', ''Y'') AS IMAGE,\u000d\u000a       IF(LECTURE_ACCESS_YN IS NULL, ''N'', LECTURE_ACCESS_YN) AS LECTURE_ACCESS_YN, \u000d\u000a       IF(ACCESS_ALL_YN IS NULL, ''N'', ACCESS_ALL_YN) AS ACCESS_ALL_YN, \u000d\u000a       RGST_DTTM,\u000d\u000a       RGST_MEMBER_ID,\u000d\u000a       MDF_DTTM,\u000d\u000a       MDF_MEMBER_ID\u000d\u000a  FROM MENU\u000d\u000a WHERE ID = PARENT_ID\u000d\u000aORDER BY MENU_ORDER ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.menu.select.menu_r_04','2013-04-04 16:01:11.321000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.26\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Retrieve top menu list for management\u000d\u000a*/\u000d\u000aSELECT CHILD.ID, \u000d\u000a       CHILD.PARENT_ID, \u000d\u000a       PARENT.NAME AS PARENT_NAME,\u000d\u000a       CHILD.NAME, \u000d\u000a       IF(CHILD.IMAGE IS NULL, ''N'', ''Y'') AS IMAGE,\u000d\u000a       CHILD.MENU_ORDER, \u000d\u000a       CHILD.LINK_VALUE, \u000d\u000a       IF(CHILD.LECTURE_ACCESS_YN IS NULL, ''N'', CHILD.LECTURE_ACCESS_YN) AS LECTURE_ACCESS_YN, \u000d\u000a       IF(CHILD.ACCESS_ALL_YN IS NULL, ''N'', CHILD.ACCESS_ALL_YN) AS ACCESS_ALL_YN, \u000d\u000a       CHILD.RGST_DTTM,\u000d\u000a       CHILD.RGST_MEMBER_ID,\u000d\u000a       CHILD.MDF_DTTM,\u000d\u000a       CHILD.MDF_MEMBER_ID\u000d\u000a  FROM MENU AS PARENT, MENU AS CHILD\u000d\u000a WHERE CHILD.PARENT_ID = :PARENT_ID\u000d\u000a   AND CHILD.ID <> CHILD.PARENT_ID\u000d\u000a   AND CHILD.PARENT_ID = PARENT.ID\u000d\u000aORDER BY CHILD.MENU_ORDER ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.menu.select.menu_r_05','2013-04-04 16:01:14.587000',5,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.12\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Retrieve hierarchy menu list for login\u000d\u000a\u000d\u000a    2012.12.26  : SimpleQuery.hierarchySelect() -> SimpleQuery.select() \ub85c \ubcc0\ud658 \ubc0f SQL \ubcc0\uacbd\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT MENU.ID, \u000d\u000a       MENU.PARENT_ID, \u000d\u000a       LEVEL, \u000d\u000a       IMAGE,\u000d\u000a       NAME, \u000d\u000a       MENU.LINK_VALUE, \u000d\u000a       MENU_ORDER\u000d\u000a  FROM(\u000d\u000a       SELECT @id := MENU_HIERARCHY_ALL() AS ID, \u000d\u000a              @level AS LEVEL, PARENT_ID\u000d\u000a         FROM (\u000d\u000a               SELECT @level := 0\u000d\u000a              )VARS, MENU\u000d\u000a        WHERE ID IS NOT NULL\u000d\u000a      ) HIERARCHY\u000d\u000aJOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000a\u000d\u000a/* SimpleQuery.hierarchySelect() \uc0ac\uc6a9\uc2dc \uc544\ub798 SQL \uc0ac\uc6a9\u000d\u000a   SELECT ID, NAME, LINK_VALUE\u000d\u000a     FROM MENU\u000d\u000a    WHERE 1=1\u000d\u000a<dynamic parameter=":RSV_ISTOP" operator="==" value="Y">\u000d\u000a      AND ID = PARENT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":RSV_ISTOP" operator="==" value="N">\u000d\u000a      AND ID <> PARENT_ID\u000d\u000a      AND PARENT_ID = :PARENT_ID\u000d\u000a</dynamic>\u000d\u000a ORDER BY MENU_ORDER ASC*/')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.menu.select.menu_r_06','2013-04-04 16:01:19.399000',5,'DOCUMENT','true ','SELECT COUNT(*) COUNT FROM MENU\u000d\u000aWHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.menu.select.menu_r_07','2013-07-13 14:45:00.737000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.12\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Retrieve hierarchy menu list for login\u000d\u000a\u000d\u000a    2012.12.26  : SimpleQuery.select() \ub85c \ubcc0\ud658 \ubc0f SQL \ubcc0\uacbd\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT MENU.ID, \u000d\u000a       MENU.PARENT_ID, \u000d\u000a       HIERARCHY.LEVEL,\u000d\u000a       MENU.IMAGE,\u000d\u000a       MENU.NAME, \u000d\u000a       MENU.LINK_VALUE, \u000d\u000a       MENU_ORDER,\u000d\u000a/*\u000d\u000aSELECT TEST\u000d\u000a*/\u000d\u000a       IF(ACCESS_LEVEL IS NULL, ''AR001AR001'', ACCESS_LEVEL) AS ACCESS_LEVEL\u000d\u000a  FROM  \u000d\u000a       (\u000d\u000a        SELECT @id := MENU_HIERARCHY_ALL() AS ID, \u000d\u000a               @level AS LEVEL, PARENT_ID\u000d\u000a          FROM (\u000d\u000a                SELECT @level := 0\u000d\u000a               )VARS, MENU\u000d\u000a         WHERE ID IS NOT NULL\u000d\u000a       ) HIERARCHY\u000d\u000a       JOIN MENU \u000d\u000a       ON MENU.ID = HIERARCHY.ID\u000d\u000a       LEFT OUTER JOIN     \u000d\u000a        (\u000d\u000a       SELECT MENU_ID, MAX(ACCESS_LEVEL) ACCESS_LEVEL\u000d\u000a         FROM ACCESS_LIST\u000d\u000a        WHERE ROLE_MEMBER_ID = :LOGIN_MEMBER\u000d\u000a     GROUP BY MENU_ID\u000d\u000a        ) ACCESS_LIST\u000d\u000a       ON HIERARCHY.ID = ACCESS_LIST.MENU_ID\u000d\u000a WHERE ACCESS_LIST.MENU_ID IS NOT NULL OR LINK_VALUE IS NULL OR LINK_VALUE = ''''')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.menu.select.menu_r_07','2013-07-13 14:45:11.080000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.12\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Retrieve hierarchy menu list for login\u000d\u000a\u000d\u000a    2012.12.26  : SimpleQuery.select() \ub85c \ubcc0\ud658 \ubc0f SQL \ubcc0\uacbd\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT MENU.ID, \u000d\u000a       MENU.PARENT_ID, \u000d\u000a       HIERARCHY.LEVEL,\u000d\u000a       MENU.IMAGE,\u000d\u000a       MENU.NAME, \u000d\u000a       MENU.LINK_VALUE, \u000d\u000a       MENU_ORDER,\u000d\u000a/*\u000d\u000aSELECT TEST :TEST\u000d\u000a*/\u000d\u000a       IF(ACCESS_LEVEL IS NULL, ''AR001AR001'', ACCESS_LEVEL) AS ACCESS_LEVEL\u000d\u000a  FROM  \u000d\u000a       (\u000d\u000a        SELECT @id := MENU_HIERARCHY_ALL() AS ID, \u000d\u000a               @level AS LEVEL, PARENT_ID\u000d\u000a          FROM (\u000d\u000a                SELECT @level := 0\u000d\u000a               )VARS, MENU\u000d\u000a         WHERE ID IS NOT NULL\u000d\u000a       ) HIERARCHY\u000d\u000a       JOIN MENU \u000d\u000a       ON MENU.ID = HIERARCHY.ID\u000d\u000a       LEFT OUTER JOIN     \u000d\u000a        (\u000d\u000a       SELECT MENU_ID, MAX(ACCESS_LEVEL) ACCESS_LEVEL\u000d\u000a         FROM ACCESS_LIST\u000d\u000a        WHERE ROLE_MEMBER_ID = :LOGIN_MEMBER\u000d\u000a     GROUP BY MENU_ID\u000d\u000a        ) ACCESS_LIST\u000d\u000a       ON HIERARCHY.ID = ACCESS_LIST.MENU_ID\u000d\u000a WHERE ACCESS_LIST.MENU_ID IS NOT NULL OR LINK_VALUE IS NULL OR LINK_VALUE = ''''')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.menu.select.menu_r_07','2013-07-13 14:45:22.921000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.12\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Retrieve hierarchy menu list for login\u000d\u000a\u000d\u000a    2012.12.26  : SimpleQuery.select() \ub85c \ubcc0\ud658 \ubc0f SQL \ubcc0\uacbd\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT MENU.ID, \u000d\u000a       MENU.PARENT_ID, \u000d\u000a       HIERARCHY.LEVEL,\u000d\u000a       MENU.IMAGE,\u000d\u000a       MENU.NAME, \u000d\u000a       MENU.LINK_VALUE, \u000d\u000a       MENU_ORDER,\u000d\u000a--TEST\u000d\u000a       IF(ACCESS_LEVEL IS NULL, ''AR001AR001'', ACCESS_LEVEL) AS ACCESS_LEVEL\u000d\u000a  FROM  \u000d\u000a       (\u000d\u000a        SELECT @id := MENU_HIERARCHY_ALL() AS ID, \u000d\u000a               @level AS LEVEL, PARENT_ID\u000d\u000a          FROM (\u000d\u000a                SELECT @level := 0\u000d\u000a               )VARS, MENU\u000d\u000a         WHERE ID IS NOT NULL\u000d\u000a       ) HIERARCHY\u000d\u000a       JOIN MENU \u000d\u000a       ON MENU.ID = HIERARCHY.ID\u000d\u000a       LEFT OUTER JOIN     \u000d\u000a        (\u000d\u000a       SELECT MENU_ID, MAX(ACCESS_LEVEL) ACCESS_LEVEL\u000d\u000a         FROM ACCESS_LIST\u000d\u000a        WHERE ROLE_MEMBER_ID = :LOGIN_MEMBER\u000d\u000a     GROUP BY MENU_ID\u000d\u000a        ) ACCESS_LIST\u000d\u000a       ON HIERARCHY.ID = ACCESS_LIST.MENU_ID\u000d\u000a WHERE ACCESS_LIST.MENU_ID IS NOT NULL OR LINK_VALUE IS NULL OR LINK_VALUE = ''''')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.menu.select.menu_r_07','2013-07-13 14:45:33.391000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.12\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Retrieve hierarchy menu list for login\u000d\u000a\u000d\u000a    2012.12.26  : SimpleQuery.select() \ub85c \ubcc0\ud658 \ubc0f SQL \ubcc0\uacbd\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT MENU.ID, \u000d\u000a       MENU.PARENT_ID, \u000d\u000a       HIERARCHY.LEVEL,\u000d\u000a       MENU.IMAGE,\u000d\u000a       MENU.NAME, \u000d\u000a       MENU.LINK_VALUE, \u000d\u000a       MENU_ORDER,\u000d\u000a       IF(ACCESS_LEVEL IS NULL, ''AR001AR001'', ACCESS_LEVEL) AS ACCESS_LEVEL\u000d\u000a  FROM  \u000d\u000a       (\u000d\u000a        SELECT @id := MENU_HIERARCHY_ALL() AS ID, \u000d\u000a               @level AS LEVEL, PARENT_ID\u000d\u000a          FROM (\u000d\u000a                SELECT @level := 0\u000d\u000a               )VARS, MENU\u000d\u000a         WHERE ID IS NOT NULL\u000d\u000a       ) HIERARCHY\u000d\u000a       JOIN MENU \u000d\u000a       ON MENU.ID = HIERARCHY.ID\u000d\u000a       LEFT OUTER JOIN     \u000d\u000a        (\u000d\u000a       SELECT MENU_ID, MAX(ACCESS_LEVEL) ACCESS_LEVEL\u000d\u000a         FROM ACCESS_LIST\u000d\u000a        WHERE ROLE_MEMBER_ID = :LOGIN_MEMBER\u000d\u000a     GROUP BY MENU_ID\u000d\u000a        ) ACCESS_LIST\u000d\u000a       ON HIERARCHY.ID = ACCESS_LIST.MENU_ID\u000d\u000a WHERE ACCESS_LIST.MENU_ID IS NOT NULL OR LINK_VALUE IS NULL OR LINK_VALUE = ''''')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.menu.update','2013-03-18 13:38:51.156000',4,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.portal.menu.update.menu_u_01','2013-04-04 16:01:30.696000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.10\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Update new menu\u000d\u000a*/\u000d\u000a\u000d\u000aUPDATE MENU\u000d\u000a<dynamic parameter=":MENU_ORDER" operator="==" value="-1">\u000d\u000a     ,(SELECT IF(MAX(MENU_ORDER) IS NULL , 0, MAX(MENU_ORDER)+1)  AS MENU_ORDER\u000d\u000a         FROM MENU\u000d\u000a        WHERE PARENT_ID = :PARENT_ID) AS TMP\u000d\u000a</dynamic>\u000d\u000a   SET \u000d\u000a<dynamic parameter=":ID" operator="!=" value="">\u000d\u000a       MENU.ID                  = :ID, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PARENT_ID" operator="!=" value="">\u000d\u000a       MENU.PARENT_ID           = :PARENT_ID, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MENU_ORDER" operator="==" value="-1">\u000d\u000a       MENU.MENU_ORDER          = TMP.MENU_ORDER,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MENU_ORDER" operator="!=" value="-1">\u000d\u000a<dynamic parameter=":MENU_ORDER" operator="!=" value="">\u000d\u000a       MENU.MENU_ORDER          = :MENU_ORDER,\u000d\u000a</dynamic>\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":NAME" operator="!=" value="">\u000d\u000a       MENU.NAME                = :NAME, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":IMAGE" operator="!=" value="null">\u000d\u000a       MENU.IMAGE               = :IMAGE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":LINK_VALUE" operator="!=" value="">\u000d\u000a       MENU.LINK_VALUE          = :LINK_VALUE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":LECTURE_ACCESS_YN" operator="!=" value="">\u000d\u000a       MENU.LECTURE_ACCESS_YN   = :LECTURE_ACCESS_YN, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":ACCESS_ALL_YN" operator="!=" value="">\u000d\u000a       MENU.ACCESS_ALL_YN       = :ACCESS_ALL_YN, \u000d\u000a</dynamic>\u000d\u000a       MENU.MDF_DTTM            = CURRENT_TIMESTAMP, \u000d\u000a       MENU.MDF_MEMBER_ID       = :LOGIN_MEMBER\u000d\u000a WHERE MENU.ID = :OLD_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 10:26:45.609000',2,'DOCUMENT','false','/*AND ID = :ID*/')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 11:29:36.081000',2,'DOCUMENT','true ','<dynamic parameter=":MEMBER_TYPE" operator="!=" value="ET001ET004">\u000d\u000aSELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1\u000d\u000aAND ID = :ID\u000d\u000aAND ROLE.USE_YN = ''Y''\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 11:55:22.534000',2,'DOCUMENT','true ','<dynamic parameter=":MEMBER_TYPE" operator="!=" value="ET001ET004">\u000d\u000aSELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1\u000d\u000aAND ID = :ID\u000d\u000aAND ROLE.USE_YN = ''Y''\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 11:55:29.503000',2,'DOCUMENT','true ','<dynamic parameter=":MEMBER_TYPE" operator="!=" value="ET001ET004">\u000d\u000aSELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1\u000d\u000a/*AND ID = :ID*/\u000d\u000aAND ROLE.USE_YN = ''Y''\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 12:12:35.972000',2,'DOCUMENT','true ','<dynamic parameter=":MEMBER_TYPE" operator="!=" value="ET001ET004">\u000d\u000aSELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1\u000d\u000a/*AND ID = :ID*/\u000d\u000aAND ROLE.USE_YN = ''Y''\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 12:12:56.268000',2,'DOCUMENT','true ','<dynamic parameter=":MEMBER_TYPE" operator="!=" value="ET001ET004">\u000d\u000aSELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1\u000d\u000a/*AND ID = :ID*/\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 12:13:59.128000',2,'DOCUMENT','true ','<dynamic parameter=":MEMBER_TYPE" operator="!=" value="ET001ET004">\u000d\u000aSELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 12:14:07.565000',2,'DOCUMENT','true ','<dynamic parameter=":MEMBER_TYPE" operator="!=" value="ET001ET004">\u000d\u000aSELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 12:15:31.253000',2,'DOCUMENT','false','SELECT *\u000d\u000aFROM MEMBER\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 12:15:35.675000',2,'DOCUMENT','false','SELECT *\u000d\u000aFROM MEMBER\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 12:16:28.815000',2,'DOCUMENT','false','SELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 12:16:45.206000',2,'DOCUMENT','true ','SELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1\u000d\u000aAND ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 12:16:58.175000',2,'DOCUMENT','false','SELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1\u000d\u000a/*AND ID = :ID*/')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 12:17:27.643000',2,'DOCUMENT','true ','<dynamic parameter=":MEMBER_TYPE" operator="!=" value="ET001ET004">\u000d\u000aSELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1\u000d\u000a/*AND ID = :ID*/\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 12:17:46.065000',2,'DOCUMENT','true ','<dynamic parameter=":MEMBER_TYPE" operator="!=" value="ET001ET004">\u000d\u000aSELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1\u000d\u000a/*AND ID = :ID*/\u000d\u000aAND ID = :ID\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 12:49:04.847000',2,'DOCUMENT','false','SELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1\u000d\u000a/*AND ID = :ID\u000d\u000aAND ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 12:49:34.065000',2,'DOCUMENT','false','SELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1\u000d\u000a/*AND ID = :ID\u000d\u000aAND ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 12:49:44.112000',2,'DOCUMENT','false','SELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1\u000d\u000a/*AND ID = :ID\u000d\u000aAND ID = :ID*/')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 12:49:57.940000',2,'DOCUMENT','false','SELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1\u000d\u000a/*AND ID = :ID\u000d\u000aAND ID = :ID*/')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 12:50:24.706000',2,'DOCUMENT','false','SELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1\u000d\u000a/*AND ID = :ID*/\u000d\u000aAND ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 12:50:57.284000',2,'DOCUMENT','true ','SELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1\u000d\u000a\u000d\u000aAND ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 12:51:01.550000',2,'DOCUMENT','false','SELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1\u000d\u000a/*AND ID = :ID*/\u000d\u000aAND ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 12:55:58.206000',2,'DOCUMENT','true ','SELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1\u000d\u000a/*AND ID = :ID*/\u000d\u000aAND ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 12:56:06.065000',2,'DOCUMENT','false','SELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1\u000d\u000a/*AND ID = :ID\u000d\u000aAND ID = :ID*/')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 12:56:15.550000',2,'DOCUMENT','true ','SELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1\u000d\u000a/*AND ID = :ID*/\u000d\u000aAND ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 12:56:26.440000',2,'DOCUMENT','false','SELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1\u000d\u000a/*AND ID = :ID\u000d\u000aAND ID = :ID*/')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 13:45:56.080000',2,'DOCUMENT','true ','SELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1\u000d\u000a/*AND ID = :ID*/\u000d\u000aAND ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 13:46:00.158000',2,'DOCUMENT','false','SELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1\u000d\u000a/*AND ID = :ID\u000d\u000aAND ID = :ID*/')
INSERT INTO SQL_STORAGE_H VALUES('PMS','nist.test','2013-05-02 13:46:28.783000',2,'DOCUMENT','true ','SELECT *\u000d\u000aFROM MEMBER\u000d\u000aWHERE 1=1\u000d\u000a/*AND ID = :ID*/\u000d\u000aAND ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms','2013-07-22 14:47:33.848000',1,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board','2013-07-22 14:47:33.848000',2,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.delete','2013-07-22 14:47:33.848000',3,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.delete.board_comment_d_01','2013-07-22 14:47:33.848000',4,'DOCUMENT','true ','DELETE \u000d\u000a  FROM BOARD_COMMENT\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a<dynamic parameter=":SEQ" operator="!=" value="null">\u000d\u000a   AND SEQ = :SEQ\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.delete.board_d_01','2013-07-22 14:47:33.848000',4,'DOCUMENT','true ','DELETE FROM BOARD\u000d\u000aWHERE BOARD_ID = :BOARD_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.delete.board_file_d_01','2013-07-22 14:47:33.848000',4,'DOCUMENT','true ','DELETE FROM BOARD_FILE\u000d\u000aWHERE BOARD_ID = :BOARD_ID\u000d\u000a<dynamic parameter=":SEQ" operator="!=" value="null">\u000d\u000a  AND SEQ = :SEQ\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.insert','2013-07-22 14:47:33.848000',3,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.insert.board_comment_i_01','2013-08-26 18:26:55.730000',4,'DOCUMENT','true ','<dynamic parameter=":SEQ" operator="==" value="null">\u000d\u000aINSERT INTO BOARD_COMMENT\u000d\u000a(BOARD_ID, SEQ, CONTENT, MEMBER_ID, RGST_DTTM, MDF_DTTM)\u000d\u000aSELECT :BOARD_ID                            AS BOARD_ID, \u000d\u000a       IF(MAX(SEQ) IS NULL , 0, MAX(SEQ)+1) AS SEQ, \u000d\u000a       REPLACE(REPLACE(REPLACE(:CONTENT, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"'') AS CONTENT, \u000d\u000a       :LOGIN_MEMBER                        AS MEMBER_ID, \u000d\u000a       CURRENT_TIMESTAMP                    AS RGST_DTTM, \u000d\u000a       CURRENT_TIMESTAMP                    AS MDF_DTTM\u000d\u000a  FROM BOARD_COMMENT\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SEQ" operator="!=" value="null">\u000d\u000aUPDATE BOARD_COMMENT\u000d\u000a   SET CONTENT = REPLACE(REPLACE(REPLACE(:CONTENT, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), \u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a   AND SEQ = :SEQ\u000d\u000a</dynamic>\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.insert.board_file_i_01','2013-07-22 14:47:33.848000',4,'DOCUMENT','true ','<dynamic parameter=":BOARD_ID" operator="==" value="null">\u000d\u000aINSERT INTO BOARD_FILE\u000d\u000a(BOARD_ID, SEQ, CONTENT, FILE_NAME, SIZE)\u000d\u000aSELECT F.BOARD_ID,\u000d\u000a       F.SEQ,\u000d\u000a       U.CONTENT,\u000d\u000a       U.FILE_NAME,\u000d\u000a       U.SIZE\u000d\u000a  FROM (SELECT :TMP_BOARD_ID AS BOARD_ID,\u000d\u000a                IF(MAX(F.SEQ) IS NULL , 0, MAX(F.SEQ)+1) AS SEQ,\u000d\u000a                :TMP_FILE_UP_ID AS ID\u000d\u000a                FROM BOARD_FILE F \u000d\u000a          WHERE F.BOARD_ID = :TMP_BOARD_ID) AS F,\u000d\u000a       TMP_UPLOAD_FILE U\u000d\u000a WHERE F.ID = U.ID\u000d\u000a   AND U.ID = :TMP_FILE_UP_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":BOARD_ID" operator="!=" value="null">\u000d\u000aINSERT INTO BOARD_FILE\u000d\u000a(BOARD_ID, SEQ, CONTENT, FILE_NAME, SIZE)\u000d\u000aSELECT F.BOARD_ID,\u000d\u000a       F.SEQ,\u000d\u000a       U.CONTENT,\u000d\u000a       U.FILE_NAME,\u000d\u000a       U.SIZE\u000d\u000a  FROM (SELECT :BOARD_ID AS BOARD_ID,\u000d\u000a                IF(MAX(F.SEQ) IS NULL , 0, MAX(F.SEQ)+1) AS SEQ,\u000d\u000a                :TMP_FILE_UP_ID AS ID\u000d\u000a                FROM BOARD_FILE F \u000d\u000a          WHERE F.BOARD_ID = :BOARD_ID) AS F,\u000d\u000a       TMP_UPLOAD_FILE U\u000d\u000a WHERE F.ID = U.ID\u000d\u000a   AND U.ID = :TMP_FILE_UP_ID\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.insert.board_i_01','2013-07-22 14:47:33.848000',4,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.23\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new article on board\u000d\u000a*/\u000d\u000a<dynamic parameter=":BOARD_ID" operator="==" value="null">\u000d\u000aINSERT INTO BOARD\u000d\u000a(\u000d\u000aBOARD_ID, AUTHOR, BOARD_MASTER_ID, CONTENT, TITLE, REVIEW_CNT, RGST_DTTM, MDF_DTTM\u000d\u000a)\u000d\u000aVALUES\u000d\u000a(\u000d\u000a:TMP_BOARD_ID, :LOGIN_MEMBER, :BOARD_MASTER_ID, REPLACE(REPLACE(:CONTENT, ''\r\n'', ''\\r\\n''), ''\"'', ''\\"''), :TITLE, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP\u000d\u000a)\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":BOARD_ID" operator="!=" value="null">\u000d\u000aUPDATE BOARD \u000d\u000a   SET TITLE = :TITLE,\u000d\u000a       CONTENT = REPLACE(REPLACE(:CONTENT, ''\r\n'', ''\\r\\n''), ''\"'', ''\\"''),\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.insert.board_master_i_01','2013-07-22 14:47:33.848000',4,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.27\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate board master.\u000d\u000a*/\u000d\u000aINSERT INTO BOARD_MASTER \u000d\u000a                        (\u000d\u000a                        ID, \u000d\u000a                        TITLE,\u000d\u000a                        MAX_ROW_NUM,\u000d\u000a                        USE_REPLY,\u000d\u000a                        USE_FILE_ATMT,\u000d\u000a                        BOARD_WIDTH,\u000d\u000a                        USE_YN,\u000d\u000a                        RGST_DTTM,\u000d\u000a                        MDF_DTTM\u000d\u000a                        ) \u000d\u000a                        VALUES\u000d\u000a                        (\u000d\u000a                        SEQ(''BOARD_MASTER''), \u000d\u000a                        :TITLE, \u000d\u000a                        :MAX_ROW_NUM,\u000d\u000a                        :USE_REPLY, \u000d\u000a                        :USE_FILE_ATMT,\u000d\u000a                        :BOARD_WIDTH, \u000d\u000a                        :USE_YN, \u000d\u000a                        CURRENT_TIMESTAMP,\u000d\u000a                        CURRENT_TIMESTAMP\u000d\u000a                        )')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.insert.board_master_i_02','2013-08-12 17:29:34.138000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.insert.board_master_i_02','2013-08-12 17:36:11.838000',4,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.08.12\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate board master for project.\u000d\u000a*/\u000d\u000aINSERT INTO BOARD_MASTER \u000d\u000a                        (\u000d\u000a                        ID, \u000d\u000a                        TITLE,\u000d\u000a                        MAX_ROW_NUM,\u000d\u000a                        USE_REPLY,\u000d\u000a                        USE_FILE_ATMT,\u000d\u000a                        BOARD_WIDTH,\u000d\u000a                        USE_YN,\u000d\u000a                        RGST_DTTM,\u000d\u000a                        MDF_DTTM\u000d\u000a                        ) \u000d\u000a                        VALUES\u000d\u000a                        (\u000d\u000a                        :BOARD_ID, \u000d\u000a                        :TITLE, \u000d\u000a                        :MAX_ROW_NUM,\u000d\u000a                        :USE_REPLY, \u000d\u000a                        :USE_FILE_ATMT,\u000d\u000a                        :BOARD_WIDTH, \u000d\u000a                        :USE_YN, \u000d\u000a                        CURRENT_TIMESTAMP,\u000d\u000a                        CURRENT_TIMESTAMP\u000d\u000a                        )')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.insert.board_master_i_02','2013-08-12 17:43:28.281000',4,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.08.12\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate board master for project.\u000d\u000a*/\u000d\u000aINSERT INTO BOARD_MASTER \u000d\u000a                        (\u000d\u000a                        ID, \u000d\u000a                        TITLE,\u000d\u000a                        MAX_ROW_NUM,\u000d\u000a                        USE_REPLY,\u000d\u000a                        USE_FILE_ATMT,\u000d\u000a                        BOARD_WIDTH,\u000d\u000a                        USE_YN,\u000d\u000a                        RGST_DTTM,\u000d\u000a                        MDF_DTTM\u000d\u000a                        ) \u000d\u000a                        VALUES\u000d\u000a                        (\u000d\u000a                        :BOARD_ID, \u000d\u000a                        :TITLE,\u000d\u000a                        10,\u000d\u000a                        ''Y'', \u000d\u000a                        ''Y'',\u000d\u000a                        730, \u000d\u000a                        ''Y'', \u000d\u000a                        CURRENT_TIMESTAMP,\u000d\u000a                        CURRENT_TIMESTAMP\u000d\u000a                        )')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.insert.board_master_i_02','2013-08-12 20:29:05.400000',4,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.08.12\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate board master for project.\u000d\u000a*/\u000d\u000aINSERT INTO BOARD_MASTER \u000d\u000a                        (\u000d\u000a                        ID, \u000d\u000a                        TITLE,\u000d\u000a                        MAX_ROW_NUM,\u000d\u000a                        USE_REPLY,\u000d\u000a                        USE_FILE_ATMT,\u000d\u000a                        BOARD_WIDTH,\u000d\u000a                        USE_YN,\u000d\u000a                        RGST_DTTM,\u000d\u000a                        MDF_DTTM\u000d\u000a                        ) \u000d\u000a                        VALUES\u000d\u000a                        (\u000d\u000a                        :BOARD_ID, \u000d\u000a                        ''\ud504\ub85c\uc81d\ud2b8 \uacf5\uc9c0\uc0ac\ud56d'',\u000d\u000a                        10,\u000d\u000a                        ''Y'', \u000d\u000a                        ''Y'',\u000d\u000a                        730, \u000d\u000a                        ''Y'', \u000d\u000a                        CURRENT_TIMESTAMP,\u000d\u000a                        CURRENT_TIMESTAMP\u000d\u000a                        )')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.select','2013-07-22 14:47:33.848000',3,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.select.board_comment_r_01','2013-07-22 14:47:33.848000',4,'DOCUMENT','true ','SELECT COMMENT.SEQ, \u000d\u000a       MEMBER.NAME AS MEMBER_NAME,\u000d\u000a       MEMBER.PHOTO,\u000d\u000a       COMMENT.CONTENT, \u000d\u000a       COMMENT.MEMBER_ID, \u000d\u000a       DATE_FORMAT(COMMENT.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %r'') MDF_DTTM\u000d\u000a  FROM BOARD_COMMENT COMMENT\u000d\u000a       LEFT OUTER JOIN VW_MEMBER MEMBER ON MEMBER.ID   = COMMENT.MEMBER_ID\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a ORDER BY COMMENT.MDF_DTTM ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.select.board_file_r_01','2013-07-22 14:47:33.848000',4,'DOCUMENT','true ','SELECT FILE_NAME, \u000d\u000a       SEQ, \u000d\u000a       IF(SIZE >= 1024*1024, CONCAT(FLOOR(SIZE/(1024*1024)),''MB''), IF(SIZE>=1024, CONCAT(FLOOR(SIZE/1024), ''KB''), CONCAT(SIZE, ''B''))) AS SIZE\u000d\u000a  FROM BOARD_FILE\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a ORDER BY SEQ ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.select.board_file_r_02','2013-07-22 14:47:33.848000',4,'DOCUMENT','true ','SELECT CONTENT, FILE_NAME FROM BOARD_FILE\u000d\u000aWHERE BOARD_ID = :BOARD_ID\u000d\u000a  AND SEQ = :SEQ')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.select.board_master_r_01','2013-07-22 14:47:33.848000',4,'DOCUMENT','true ','<dynamic parameter=":EXC_ORDER" operator="==" value="null">\u000d\u000aSELECT COUNT(*) TOTAL_CNT, :page AS page,\u000d\u000a        ''1'' AS EXC_ORDER\u000d\u000a   FROM BOARD_MASTER\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXC_ORDER" operator="!=" value="null">\u000d\u000aSELECT ID,\u000d\u000a       TITLE,\u000d\u000a       MAX_ROW_NUM,\u000d\u000a       USE_REPLY,\u000d\u000a       USE_FILE_ATMT,\u000d\u000a       BOARD_WIDTH,\u000d\u000a       USE_YN,\u000d\u000a       RGST_DTTM,\u000d\u000a       MDF_DTTM\u000d\u000a  FROM BOARD_MASTER\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="TITLE">\u000d\u000aTITLE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="USE_YN">\u000d\u000aUSE_YN\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.select.board_master_r_02','2013-07-22 14:47:33.848000',4,'DOCUMENT','true ','SELECT *\u000d\u000aFROM BOARD_MASTER\u000d\u000aWHERE ID = :BOARD_MASTER_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.select.board_master_r_03','2013-08-12 17:33:37.716000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.select.board_master_r_03','2013-08-12 17:35:58.402000',4,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.08.12\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate board master ID for project.\u000d\u000a*/\u000d\u000aSELECT SEQ(''BOARD_MASTER'') BOARD_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.select.board_r_01','2013-09-27 16:12:48.143000',4,'DOCUMENT','true ','SELECT BOARD_ID, \u000d\u000a       TITLE, \u000d\u000a       CONCAT(CONCAT(BOARD.AUTHOR, '':''), MEMBER.NAME) AS AUTHOR,\u000d\u000a       DATE_FORMAT(BOARD.RGST_DTTM,''%Y-%m-%d'') AS RGST_DTTM,\u000d\u000a       REVIEW_CNT\u000d\u000a  FROM BOARD, MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND MEMBER.ID = BOARD.AUTHOR\u000d\u000a   AND BOARD_MASTER_ID = :BOARD_MASTER_ID\u000d\u000a<dynamic parameter=":sSearch" operator="!=" value="">\u000d\u000a   AND (BOARD.TITLE   LIKE CONCAT(CONCAT(''%'', :sSearch), ''%'') OR\u000d\u000a       MEMBER.NAME   LIKE CONCAT(CONCAT(''%'', :sSearch), ''%'') OR\u000d\u000a       BOARD.CONTENT LIKE CONCAT(CONCAT(''%'', :sSearch), ''%''))\u000d\u000a</dynamic>\u000d\u000aORDER BY \u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a      BOARD.RGST_DTTM DESC\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a       BOARD.TITLE\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a       MEMBER.NAME\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a       BOARD.RGST_DTTM \u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a       ASC\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a       DESC\u000d\u000a    </dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.select.board_r_02','2013-07-22 14:47:33.848000',4,'DOCUMENT','true ','SELECT BOARD.TITLE, \u000d\u000a       IF(MEMBER.ID IS NULL, IF(LECTURER.ID IS NULL, '''', LECTURER.NAME), MEMBER.NAME) AUTHOR,\u000d\u000a       BOARD.AUTHOR ID,\u000d\u000a       DATE_FORMAT(BOARD.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %r'') RGST_DTTM,\u000d\u000a       DATE_FORMAT(BOARD.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %r'') MDF_DTTM,\u000d\u000a       BOARD.CONTENT\u000d\u000a  FROM BOARD\u000d\u000a       LEFT OUTER JOIN MEMBER   ON MEMBER.ID   = BOARD.AUTHOR\u000d\u000a       LEFT OUTER JOIN LECTURER ON LECTURER.ID = BOARD.AUTHOR\u000d\u000a WHERE BOARD_ID = :BOARD_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.select.board_r_02','2013-07-22 17:49:37.895000',4,'DOCUMENT','true ','SELECT BOARD.TITLE, \u000d\u000a       IF(MEMBER.ID IS NULL, '''', MEMBER.NAME) AUTHOR,\u000d\u000a       BOARD.AUTHOR ID,\u000d\u000a       DATE_FORMAT(BOARD.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %r'') RGST_DTTM,\u000d\u000a       DATE_FORMAT(BOARD.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %r'') MDF_DTTM,\u000d\u000a       BOARD.CONTENT\u000d\u000a  FROM BOARD\u000d\u000a       LEFT OUTER JOIN MEMBER   ON MEMBER.ID   = BOARD.AUTHOR\u000d\u000a       LEFT OUTER JOIN LECTURER ON LECTURER.ID = BOARD.AUTHOR\u000d\u000a WHERE BOARD_ID = :BOARD_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.select.board_r_02','2013-07-22 17:50:24.710000',4,'DOCUMENT','true ','SELECT BOARD.TITLE, \u000d\u000a       IF(MEMBER.ID IS NULL, '''', MEMBER.NAME) AUTHOR,\u000d\u000a       BOARD.AUTHOR ID,\u000d\u000a       DATE_FORMAT(BOARD.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %r'') RGST_DTTM,\u000d\u000a       DATE_FORMAT(BOARD.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %r'') MDF_DTTM,\u000d\u000a       BOARD.CONTENT\u000d\u000a  FROM BOARD\u000d\u000a       LEFT OUTER JOIN MEMBER   ON MEMBER.ID   = BOARD.AUTHOR\u000d\u000a WHERE BOARD_ID = :BOARD_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.select.board_r_03','2013-07-22 14:47:33.848000',4,'DOCUMENT','true ','SELECT TITLE, CONTENT\u000d\u000a  FROM BOARD\u000d\u000a WHERE BOARD_ID = :BOARD_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.select.board_r_04','2013-07-22 14:47:33.848000',4,'DOCUMENT','true ','<dynamic parameter=":BOARD_ID" operator="==" value="null">\u000d\u000aSELECT SEQ(''BOARD'') AS TMP_BOARD_ID FROM DUAL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":BOARD_ID" operator="!=" value="null">\u000d\u000aSELECT '''' TMP FROM DUAL WHERE 1=2\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.update','2013-07-22 14:47:33.848000',3,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.update.board_master_u_01','2013-07-22 14:47:33.848000',4,'DOCUMENT','true ','UPDATE BOARD_MASTER\u000d\u000a   SET\u000d\u000a<dynamic parameter=":TITLE" operator="!=" value="null">\u000d\u000a       TITLE = :TITLE,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MAX_ROW_NUM" operator="!=" value="null">\u000d\u000a       MAX_ROW_NUM = :MAX_ROW_NUM,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_REPLY" operator="!=" value="null">\u000d\u000a       USE_REPLY = :USE_REPLY,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_FILE_ATMT" operator="!=" value="null">\u000d\u000a       USE_FILE_ATMT = :USE_FILE_ATMT,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":BOARD_WIDTH" operator="!=" value="null">\u000d\u000a       BOARD_WIDTH = :BOARD_WIDTH,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_YN" operator="!=" value="null">\u000d\u000a       USE_YN = :USE_YN,\u000d\u000a</dynamic>\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.update.board_u_01','2013-07-22 14:47:33.848000',4,'DOCUMENT','true ','UPDATE BOARD AS U, (SELECT REVIEW_CNT FROM BOARD WHERE BOARD_ID = :BOARD_ID) AS O\u000d\u000a   SET U.REVIEW_CNT = O.REVIEW_CNT + 1\u000d\u000a WHERE U.BOARD_ID = :BOARD_ID;')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.board.update.board_u_02','2013-07-22 14:47:33.848000',4,'DOCUMENT','true ','UPDATE BOARD\u000d\u000a   SET TITLE    = :TITLE,\u000d\u000a       CONTENT  = :CONTENT,\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE BOARD_ID = :BOARD_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.common','2013-07-22 14:47:33.848000',2,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.common.delete','2013-07-22 14:47:33.848000',3,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.common.delete.tmp_upload_file_d_01','2013-07-22 14:47:33.848000',4,'DOCUMENT','true ','DELETE FROM TMP_UPLOAD_FILE\u000d\u000aWHERE RGST_DTTM <= DATE_ADD(NOW(), INTERVAL - :INTERVAL HOUR) ')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.common.insert','2013-07-22 14:47:33.848000',3,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.common.insert.tmp_file_upload_i_01','2013-07-22 14:47:33.848000',4,'DOCUMENT','true ','INSERT INTO TMP_UPLOAD_FILE\u000d\u000a(ID, CONTENT, FILE_NAME, SIZE, RGST_DTTM)\u000d\u000aVALUES(:TMP_FILE_UP_ID, :CONTENT, :CONTENT_FILE_NAME, :CONTENT_FILE_SIZE, CURRENT_TIMESTAMP)\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.common.select','2013-07-22 14:47:33.848000',3,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.common.select.comm_r_01','2013-07-22 14:47:33.848000',4,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Common image call query\u000d\u000a*/\u000d\u000a\u000d\u000a<dynamic parameter=":TABLE" operator="==" value="MENU">\u000d\u000aSELECT IMAGE \u000d\u000a  FROM MENU\u000d\u000a WHERE ID = :ID \u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.common.select.comm_r_02','2013-07-22 14:47:33.848000',4,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Getting role code list\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT ID, NAME \u000d\u000a  FROM CODE \u000d\u000a WHERE CODE_GROUP_ID = ''RC001''\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.common.select.comm_r_03','2013-07-22 14:47:33.848000',4,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Getting member type code list\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT ID, NAME \u000d\u000a  FROM CODE \u000d\u000a WHERE CODE_GROUP_ID = ''ET001''')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.common.select.comm_r_04','2013-07-22 14:47:33.848000',4,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.10\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Getting degree code list\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT ID, NAME \u000d\u000a  FROM CODE \u000d\u000a WHERE CODE_GROUP_ID = ''DG001''')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.common.select.comm_r_05','2013-07-22 14:47:33.848000',4,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.14\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Getting access level code list\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT ID, NAME \u000d\u000a  FROM CODE \u000d\u000a WHERE CODE_GROUP_ID = ''AR001''')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.common.select.comm_r_06','2013-08-16 11:25:22.427000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.common.select.comm_r_06','2013-08-16 11:27:15.111000',4,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) under organization\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID,\u000d\u000a       MEMBER.NAME, \u000d\u000a       ACCESS_MEMBER.MAIL,\u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE,\u000d\u000a       MEMBER.PHONE, \u000d\u000a       MEMBER.MOBILE_PHONE, \u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, '''', MEMBER.JOIN_DATE) AS JOIN_DATE,\u000d\u000a       IF(MEMBER.RETIRED_DATE IS NULL, '''', MEMBER.RETIRED_DATE) AS RETIRED_DATE,\u000d\u000a       EP_CODE.NAME AS MEMBER_TYPE, \u000d\u000a       MEMBER.GOOGLE_ID, \u000d\u000a       MEMBER.RGST_DTTM,\u000d\u000a       MEMBER.MDF_DTTM\u000d\u000a  FROM MEMBER, \u000d\u000a       CODE AS EP_CODE, \u000d\u000a       ACCESS_MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.MEMBER_TYPE = EP_CODE.ID \u000d\u000a   AND ACCESS_MEMBER.ID       = MEMBER.ID\u000d\u000a   AND MEMBER.USE_YN          = ''Y''\u000d\u000a   AND ACCESS_MEMBER.USE_YN   = ''Y''\u000d\u000a   AND (RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMEMBER.MDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMEMBER.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMEMBER.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACCESS_MEMBER.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACCESS_MEMBER.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMEMBER.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMEMBER.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="JOIN_DATE">\u000d\u000aMEMBER.JOIN_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RETIRED_DATE">\u000d\u000aMEMBER.RETIRED_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aEP_CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="GOOGLE_ID">\u000d\u000aMEMBER.GOOGLE_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aMEMBER.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aMEMBER.MDF_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.common.select.comm_r_06','2013-08-16 11:29:54.570000',4,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) under organization\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID,\u000d\u000a       MEMBER.NAME, \u000d\u000a       ACCESS_MEMBER.MAIL,\u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE,\u000d\u000a       MEMBER.PHONE, \u000d\u000a       MEMBER.MOBILE_PHONE, \u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, '''', MEMBER.JOIN_DATE) AS JOIN_DATE,\u000d\u000a       IF(MEMBER.RETIRED_DATE IS NULL, '''', MEMBER.RETIRED_DATE) AS RETIRED_DATE,\u000d\u000a       EP_CODE.NAME AS MEMBER_TYPE, \u000d\u000a       MEMBER.GOOGLE_ID, \u000d\u000a       MEMBER.RGST_DTTM,\u000d\u000a       MEMBER.MDF_DTTM\u000d\u000a  FROM MEMBER, \u000d\u000a       CODE AS EP_CODE, \u000d\u000a       ACCESS_MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.MEMBER_TYPE = EP_CODE.ID \u000d\u000a   AND ACCESS_MEMBER.ID       = MEMBER.ID\u000d\u000a   AND MEMBER.USE_YN          = ''Y''\u000d\u000a   AND ACCESS_MEMBER.USE_YN   = ''Y''\u000d\u000a   AND (RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMEMBER.NAME ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMEMBER.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMEMBER.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACCESS_MEMBER.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACCESS_MEMBER.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMEMBER.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMEMBER.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="JOIN_DATE">\u000d\u000aMEMBER.JOIN_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RETIRED_DATE">\u000d\u000aMEMBER.RETIRED_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aEP_CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.common.select.comm_r_06','2013-08-16 11:30:19.556000',4,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) under organization\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID,\u000d\u000a       MEMBER.NAME, \u000d\u000a       ACCESS_MEMBER.MAIL,\u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE,\u000d\u000a       MEMBER.PHONE, \u000d\u000a       MEMBER.MOBILE_PHONE, \u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, '''', MEMBER.JOIN_DATE) AS JOIN_DATE,\u000d\u000a       IF(MEMBER.RETIRED_DATE IS NULL, '''', MEMBER.RETIRED_DATE) AS RETIRED_DATE,\u000d\u000a       EP_CODE.NAME AS MEMBER_TYPE, \u000d\u000a       MEMBER.GOOGLE_ID, \u000d\u000a       MEMBER.RGST_DTTM,\u000d\u000a       MEMBER.MDF_DTTM\u000d\u000a  FROM MEMBER, \u000d\u000a       CODE AS EP_CODE, \u000d\u000a       ACCESS_MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.MEMBER_TYPE = EP_CODE.ID \u000d\u000a   AND ACCESS_MEMBER.ID       = MEMBER.ID\u000d\u000a   AND MEMBER.USE_YN          = ''Y''\u000d\u000a   AND ACCESS_MEMBER.USE_YN   = ''Y''\u000d\u000a   AND (RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000a   AND (MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a       OR MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%''))\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMEMBER.NAME ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMEMBER.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMEMBER.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACCESS_MEMBER.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACCESS_MEMBER.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMEMBER.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMEMBER.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="JOIN_DATE">\u000d\u000aMEMBER.JOIN_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RETIRED_DATE">\u000d\u000aMEMBER.RETIRED_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aEP_CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.common.select.tmp_file_upload_r_01','2013-07-22 14:47:33.848000',4,'DOCUMENT','false','SELECT SEQ(''TMP_UPLOAD_FILE'') AS TMP_FILE_UP_ID\u000d\u000a  FROM DUAL')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.common.update','2013-07-22 14:47:33.848000',3,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.common.update.free_fk','2013-07-22 14:47:33.848000',4,'DOCUMENT','false','SET FOREIGN_KEY_CHECKS=0')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.common.update.set_fk','2013-07-22 14:47:33.848000',4,'DOCUMENT','false','SET FOREIGN_KEY_CHECKS=1')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal','2013-07-22 14:47:33.848000',2,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.code','2013-07-22 14:47:33.848000',3,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.code.insert','2013-07-22 14:47:33.848000',4,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.code.insert.code_c_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new code.\u000d\u000a*/\u000d\u000aINSERT INTO CODE \u000d\u000a                (\u000d\u000a                ID, \u000d\u000a                CODE_GROUP_ID, \u000d\u000a                NAME, \u000d\u000a                EXP_NOTE, \u000d\u000a                UPDATABLE_YN,\u000d\u000a                RGST_DTTM, \u000d\u000a                RGST_MEMBER_ID, \u000d\u000a                MDF_DTTM, \u000d\u000a                MDF_MEMBER_ID\u000d\u000a                ) \u000d\u000a                VALUES(\u000d\u000a                :ID, \u000d\u000a                :GROUP_ID,\u000d\u000a                :NAME, \u000d\u000a                :EXP_NOTE, \u000d\u000a                ''Y'',\u000d\u000a                CURRENT_TIMESTAMP, -- :CURRENT_TIMESTAMP\u000d\u000a                :LOGIN_MEMBER, \u000d\u000a                CURRENT_TIMESTAMP, \u000d\u000a                :LOGIN_MEMBER\u000d\u000a                )')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.code.insert.codegroup_c_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new code group.\u000d\u000a*/\u000d\u000aINSERT INTO CODE_GROUP \u000d\u000a                      (\u000d\u000a                      ID, \u000d\u000a                      NAME, \u000d\u000a                      EXP_NOTE, \u000d\u000a                      UPDATABLE_YN,\u000d\u000a                      RGST_DTTM, \u000d\u000a                      RGST_MEMBER_ID,\u000d\u000a                      MDF_DTTM, \u000d\u000a                      MDF_MEMBER_ID \u000d\u000a                      ) \u000d\u000a                      VALUES(\u000d\u000a                      :ID,\u000d\u000a                      :NAME, \u000d\u000a                      :EXP_NOTE, /*:EXP_NOTE*/ \u000d\u000a                      ''Y'',\u000d\u000a                      CURRENT_TIMESTAMP,\u000d\u000a                      :LOGIN_MEMBER, \u000d\u000a                      CURRENT_TIMESTAMP, \u000d\u000a                      :LOGIN_MEMBER\u000d\u000a                      )')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.code.select','2013-07-22 14:47:33.848000',4,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.code.select.code_s_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code list count \u000d\u000a*/\u000d\u000aSELECT COUNT(*) TOTAL_CNT, :page AS page \u000d\u000aFROM CODE, CODE_GROUP\u000d\u000a WHERE 1=1\u000d\u000a   AND CODE.CODE_GROUP_ID = CODE_GROUP.ID \u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_ID">\u000d\u000a   AND CODE_GROUP.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_NAME">\u000d\u000a   AND CODE_GROUP.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_EXP_NOTE">\u000d\u000a   AND CODE_GROUP.EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND CODE.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND CODE.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="EXP_NOTE">\u000d\u000a   AND CODE.EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.code.select.code_s_02','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code list search\u000d\u000a*/\u000d\u000aSELECT ID, \u000d\u000a       NAME, \u000d\u000a       EXP_NOTE, \u000d\u000a       UPDATABLE_YN \u000d\u000a  FROM CODE \u000d\u000a WHERE CODE_GROUP_ID = :CODE_GROUP_ID\u000d\u000a ORDER BY ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.code.select.code_s_03','2013-08-12 11:38:29.826000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code keyword search\u000d\u000a*/\u000d\u000aSELECT CODE.CODE_GROUP_ID GROUP_ID, \u000d\u000a       CODE_GROUP.NAME GROUP_NAME, \u000d\u000a       CODE_GROUP.EXP_NOTE GROUP_EXP_NOTE, \u000d\u000a       CODE.ID, CODE.NAME, \u000d\u000a       CODE.EXP_NOTE, \u000d\u000a       CODE.UPDATABLE_YN, \u000d\u000a       CODE.RGST_DTTM, \u000d\u000a       CODE.RGST_MEMBER_ID, \u000d\u000a       CODE.MDF_DTTM, \u000d\u000a       CODE.MDF_MEMBER_ID\u000d\u000aFROM CODE, CODE_GROUP\u000d\u000a WHERE 1=1\u000d\u000a   AND CODE.CODE_GROUP_ID = CODE_GROUP.ID \u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND CODE_GROUP.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND CODE_GROUP.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_EXP_NOTE">\u000d\u000a   AND CODE_GROUP.EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND CODE.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND CODE.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="EXP_NOTE">\u000d\u000a   AND CODE.EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="GROUP_ID">\u000d\u000aCODE_GROUP.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="GROUP_NAME">\u000d\u000aCODE_GROUP.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="GROUP_EXP_NOTE">\u000d\u000aCODE_GROUP.EXP_NOTE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aCODE.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aCODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXP_NOTE">\u000d\u000aCODE.EXP_NOTE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="UPDATABLE_YN">\u000d\u000aCODE.UPDATABLE_YN\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_MEMBER_ID">\u000d\u000aCODE.RGST_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aCODE.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_MEMBER_ID">\u000d\u000aCODE.MDF_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aCODE.MDF_DTTM \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.code.select.code_s_03','2013-08-12 12:31:33.916000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code keyword search\u000d\u000a*/\u000d\u000aSELECT CODE.CODE_GROUP_ID GROUP_ID, \u000d\u000a       CODE_GROUP.NAME GROUP_NAME, \u000d\u000a       CODE_GROUP.EXP_NOTE GROUP_EXP_NOTE, \u000d\u000a       CODE.ID, CODE.NAME, \u000d\u000a       CODE.EXP_NOTE, \u000d\u000a       CODE.UPDATABLE_YN, \u000d\u000a       CODE.RGST_DTTM, \u000d\u000a       CODE.RGST_MEMBER_ID, \u000d\u000a       CODE.MDF_DTTM, \u000d\u000a       CODE.MDF_MEMBER_ID\u000d\u000aFROM CODE, CODE_GROUP\u000d\u000a WHERE 1=1\u000d\u000a   AND CODE.CODE_GROUP_ID = CODE_GROUP.ID \u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_ID">\u000d\u000a   AND CODE_GROUP.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_NAME">\u000d\u000a   AND CODE_GROUP.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_EXP_NOTE">\u000d\u000a   AND CODE_GROUP.EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND CODE.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND CODE.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="EXP_NOTE">\u000d\u000a   AND CODE.EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="GROUP_ID">\u000d\u000aCODE_GROUP.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="GROUP_NAME">\u000d\u000aCODE_GROUP.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="GROUP_EXP_NOTE">\u000d\u000aCODE_GROUP.EXP_NOTE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aCODE.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aCODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXP_NOTE">\u000d\u000aCODE.EXP_NOTE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="UPDATABLE_YN">\u000d\u000aCODE.UPDATABLE_YN\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_MEMBER_ID">\u000d\u000aCODE.RGST_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aCODE.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_MEMBER_ID">\u000d\u000aCODE.MDF_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aCODE.MDF_DTTM \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.code.select.codegroup_s_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code group duplication check\u000d\u000a*/\u000d\u000aSELECT COUNT(*) TOTAL_CNT, :page AS page \u000d\u000a  FROM CODE_GROUP\u000d\u000a WHERE 1=1\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="EXP_NOTE">\u000d\u000a   AND EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.code.select.codegroup_s_02','2013-07-22 14:47:33.848000',5,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code group list search\u000d\u000a*/\u000d\u000aSELECT ID, \u000d\u000a       NAME, \u000d\u000a       EXP_NOTE, \u000d\u000a       UPDATABLE_YN \u000d\u000a  FROM CODE_GROUP\u000d\u000a ORDER BY ID\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.code.select.codegroup_s_03','2013-08-12 12:31:40.309000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code group keyword search\u000d\u000a*/\u000d\u000aSELECT ID, \u000d\u000a       NAME, \u000d\u000a       EXP_NOTE, \u000d\u000a       UPDATABLE_YN, \u000d\u000a       RGST_MEMBER_ID, \u000d\u000a       RGST_DTTM, \u000d\u000a       MDF_MEMBER_ID, \u000d\u000a       MDF_DTTM\u000d\u000a  FROM CODE_GROUP \u000d\u000a WHERE 1=1\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_ID">\u000d\u000a   AND ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_NAME">\u000d\u000a   AND NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="EXP_NOTE">\u000d\u000a   AND EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY \u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aNAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXP_NOTE">\u000d\u000aEXP_NOTE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="UPDATABLE_YN">\u000d\u000aUPDATABLE_YN\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_MEMBER_ID">\u000d\u000aRGST_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aRGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_MEMBER_ID">\u000d\u000aMDF_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aMDF_DTTM \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.code.select.codegroup_s_03','2013-08-12 12:32:04.824000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code group keyword search\u000d\u000a*/\u000d\u000aSELECT ID, \u000d\u000a       NAME, \u000d\u000a       EXP_NOTE, \u000d\u000a       UPDATABLE_YN, \u000d\u000a       RGST_MEMBER_ID, \u000d\u000a       RGST_DTTM, \u000d\u000a       MDF_MEMBER_ID, \u000d\u000a       MDF_DTTM\u000d\u000a  FROM CODE_GROUP \u000d\u000a WHERE 1=1\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_ID">\u000d\u000a   AND ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_NAME">\u000d\u000a   AND NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="GROUP_EXP_NOTE">\u000d\u000a   AND EXP_NOTE LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY \u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aNAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXP_NOTE">\u000d\u000aEXP_NOTE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="UPDATABLE_YN">\u000d\u000aUPDATABLE_YN\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_MEMBER_ID">\u000d\u000aRGST_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aRGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_MEMBER_ID">\u000d\u000aMDF_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aMDF_DTTM \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.code.update','2013-07-22 14:47:33.848000',4,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.code.update.code_u_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code update\u000d\u000a*/\u000d\u000aUPDATE CODE\u000d\u000a   SET \u000d\u000a<dynamic parameter=":NAME" operator="!=" value="">\u000d\u000a       NAME          = :NAME,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXP_NOTE" operator="!=" value="">\u000d\u000a       EXP_NOTE      = :EXP_NOTE,\u000d\u000a</dynamic>\u000d\u000a       MDF_DTTM      = CURRENT_TIMESTAMP,\u000d\u000a       MDF_MEMBER_ID = :LOGIN_MEMBER\u000d\u000a WHERE ID = :ID\u000d\u000a   AND UPDATABLE_YN <> ''N''')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.code.update.codegroup_u_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Code group update\u000d\u000a*/\u000d\u000aUPDATE CODE_GROUP\u000d\u000a   SET \u000d\u000a<dynamic parameter=":NAME" operator="!=" value="">\u000d\u000a       NAME          = :NAME,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXP_NOTE" operator="!=" value="">\u000d\u000a       EXP_NOTE      = :EXP_NOTE,\u000d\u000a</dynamic>\u000d\u000a       MDF_DTTM      = CURRENT_TIMESTAMP,\u000d\u000a       MDF_MEMBER_ID = :LOGIN_MEMBER\u000d\u000a WHERE ID = :ID\u000d\u000a   AND UPDATABLE_YN <> ''N''')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member','2013-07-22 14:47:33.848000',3,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.create','2013-07-22 14:47:33.848000',4,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.create.access_list_c_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.15\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Create new access list\u000d\u000a*/\u000d\u000a\u000d\u000aINSERT INTO ACCESS_LIST\u000d\u000a            (MENU_ID,\u000d\u000a             ORGANIZATION_ID,\u000d\u000a             ROLE_MEMBER_ID,\u000d\u000a             ACCESS_LEVEL)\u000d\u000aSELECT MENU.ID AS MENU_ID, :ORGANIZATION_ID, :ROLE_MEMBER_ID, :ACCESS_LEVEL\u000d\u000a  FROM \u000d\u000a       (SELECT MENU.ID, LEVEL, NAME, IF(MENU.LINK_VALUE IS NULL OR MENU.LINK_VALUE = '''', ''Y'', ''N'') AS ISFOLDER\u000d\u000a          FROM(\u000d\u000a               SELECT @id := MENU_HIERARCHY() AS ID, \u000d\u000a                      @level AS LEVEL\u000d\u000a                 FROM (\u000d\u000a                       SELECT @start_with := :MENU_ID, \u000d\u000a                              @id := @start_with,\u000d\u000a                              @level := 0\u000d\u000a                       )VARS, MENU\u000d\u000a                 WHERE @id IS NOT NULL\u000d\u000a              ) HIERARCHY\u000d\u000a               JOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000a       )MENU\u000d\u000a       LEFT OUTER JOIN \u000d\u000a       ACCESS_LIST\u000d\u000a       ON MENU.ID = ACCESS_LIST.MENU_ID\u000d\u000a       AND ACCESS_LIST.ORGANIZATION_ID = :ORGANIZATION_ID\u000d\u000a       AND ACCESS_LIST.ROLE_MEMBER_ID  = :ROLE_MEMBER_ID\u000d\u000aWHERE 1=1\u000d\u000a  AND MENU.ISFOLDER = ''N''\u000d\u000a  AND ACCESS_LIST.MENU_ID IS NULL')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.create.access_log_c_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.27\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate access log.\u000d\u000a*/\u000d\u000aINSERT INTO ACCESS_LOG \u000d\u000a                      (\u000d\u000a                      MEMBER_ID, \u000d\u000a                      SEQ, \u000d\u000a                      ACCESS_DTTM, \u000d\u000a                      ACCESS_IP, \u000d\u000a                      ACCESS_PAGE\u000d\u000a                      ) \u000d\u000a                      VALUES\u000d\u000a                      ( \u000d\u000a                      :MEMBER_ID, \u000d\u000a                      SEQ(''ACCESS_LOG''),\u000d\u000a                      CURRENT_TIMESTAMP, \u000d\u000a                      :ACCESS_IP, \u000d\u000a                      :ACCESS_PAGE\u000d\u000a                      )')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.create.access_member_c_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new access member.\u000d\u000a*/\u000d\u000a\u000d\u000aINSERT INTO ACCESS_MEMBER \u000d\u000a                        (\u000d\u000a                        ID, \u000d\u000a                        PWD, \u000d\u000a                        MEMBER_TYPE,\u000d\u000a                        MAIL, \u000d\u000a                        EXPIRE_DATE, \u000d\u000a                        RGST_DTTM,\u000d\u000a                        MDF_DTTM,\u000d\u000a                        USE_YN\u000d\u000a                        )\u000d\u000a                        VALUES\u000d\u000a                        (\u000d\u000a                        :ID, \u000d\u000a                        MD5(''new1234!''),\u000d\u000a                        :MEMBER_TYPE,\u000d\u000a                        :MAIL, \u000d\u000a<dynamic parameter=":EXPIRE_DATE" operator="==" value="">\u000d\u000a                        DATE_ADD(SYSDATE(), INTERVAL 90 DAY), \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXPIRE_DATE" operator="!=" value="">\u000d\u000a                        STR_TO_DATE(:EXPIRE_DATE, ''%Y-%m-%d''), \u000d\u000a</dynamic>\u000d\u000a                        CURRENT_TIMESTAMP,\u000d\u000a                        CURRENT_TIMESTAMP,\u000d\u000a                        ''Y''\u000d\u000a                        )')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.create.lecturer_c_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new lecturer.\u000d\u000a*/\u000d\u000aINSERT INTO LECTURER\u000d\u000a\u0009\u0009\u0009\u0009\u0009(\u000d\u000a\u0009\u0009\u0009\u0009\u0009ID, \u000d\u000a\u0009\u0009\u0009\u0009\u0009NAME, \u000d\u000a\u0009\u0009\u0009\u0009\u0009PHONE, \u000d\u000a\u0009\u0009\u0009\u0009\u0009MOBILE_PHONE, \u000d\u000a\u0009\u0009\u0009\u0009\u0009FAX, \u000d\u000a\u0009\u0009\u0009\u0009\u0009WEB_SITE, \u000d\u000a\u0009\u0009\u0009\u0009\u0009ZIP_CODE,\u000d\u000a\u0009\u0009\u0009\u0009\u0009ADDR1, \u000d\u000a\u0009\u0009\u0009\u0009\u0009ADDR2, \u000d\u000a\u0009\u0009\u0009\u0009\u0009DEGREE, /*\ud559\uc704*/\u000d\u000a\u0009\u0009\u0009\u0009\u0009ORGANIZATION, /*\uc18c\uc18d*/\u000d\u000a\u0009\u0009\u0009\u0009\u0009MAJOR, /*\uc804\uacf5*/\u000d\u000a\u0009\u0009\u0009\u0009\u0009CAREER, /*\uacbd\ub825*/\u000d\u000a\u0009\u0009\u0009\u0009\u0009SPECIALISM, /*\uc804\ubb38\ubd84\uc57c*/\u000d\u000a\u0009\u0009\u0009\u0009\u0009EXP_NOTE, /*\ube44\uace0*/\u000d\u000a<dynamic parameter=":PHOTO" operator="!=" value="null">\u000d\u000a\u0009\u0009\u0009\u0009\u0009PHOTO, \u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009\u0009GOOGLE_ID, \u000d\u000a<dynamic parameter=":GOOGLE_PW" operator="!=" value="">\u000d\u000a\u0009\u0009\u0009\u0009\u0009GOOGLE_PW, \u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009\u0009RGST_DTTM, \u000d\u000a\u0009\u0009\u0009\u0009\u0009MDF_DTTM, \u000d\u000a\u0009\u0009\u0009\u0009\u0009USE_YN\u000d\u000a\u0009\u0009\u0009\u0009\u0009) \u000d\u000a\u0009\u0009\u0009\u0009\u0009VALUES(\u000d\u000a\u0009\u0009\u0009\u0009\u0009:ID, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:NAME, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:PHONE, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:MOBILE_PHONE, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:FAX, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:WEB_SITE, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:ZIP_CODE, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:ADDR1, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:ADDR2, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:DEGREE, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:ORGANIZATION, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:MAJOR, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:CAREER, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:SPECIALISM, \u000d\u000a\u0009\u0009\u0009\u0009\u0009:EXP_NOTE, \u000d\u000a<dynamic parameter=":PHOTO" operator="!=" value="null">\u000d\u000a\u0009\u0009\u0009\u0009\u0009:PHOTO, \u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009\u0009:GOOGLE_ID, \u000d\u000a<dynamic parameter=":GOOGLE_PW" operator="!=" value="">\u000d\u000a\u0009\u0009\u0009\u0009\u0009HEX(AES_ENCRYPT(:GOOGLE_PW, MD5(''#!%''))), \u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009\u0009CURRENT_TIMESTAMP, \u000d\u000a\u0009\u0009\u0009\u0009\u0009CURRENT_TIMESTAMP, \u000d\u000a\u0009\u0009\u0009\u0009\u0009''Y''\u000d\u000a\u0009\u0009\u0009\u0009\u0009)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.create.member_c_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new member.\u000d\u000a*/\u000d\u000aINSERT INTO MEMBER \u000d\u000a\u0009\u0009\u0009\u0009(\u000d\u000a\u0009\u0009\u0009\u0009ID, \u000d\u000a\u0009\u0009\u0009\u0009NAME, \u000d\u000a\u0009\u0009\u0009\u0009PHONE, \u000d\u000a\u0009\u0009\u0009\u0009MOBILE_PHONE, \u000d\u000a<dynamic parameter=":PHOTO" operator="!=" value="null">\u000d\u000a\u0009\u0009\u0009\u0009PHOTO, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":JOIN_DATE" operator="!=" value="">\u000d\u000a\u0009\u0009\u0009\u0009JOIN_DATE, \u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009RETIRED_DATE, \u000d\u000a\u0009\u0009\u0009\u0009GOOGLE_ID, \u000d\u000a<dynamic parameter=":GOOGLE_PW" operator="!=" value="">\u000d\u000a\u0009\u0009\u0009\u0009GOOGLE_PW, \u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009RGST_DTTM, \u000d\u000a\u0009\u0009\u0009\u0009MDF_DTTM, \u000d\u000a\u0009\u0009\u0009\u0009USE_YN\u000d\u000a\u0009\u0009\u0009\u0009) \u000d\u000a\u0009\u0009\u0009\u0009VALUES(\u000d\u000a\u0009\u0009\u0009\u0009:ID, \u000d\u000a\u0009\u0009\u0009\u0009:NAME, \u000d\u000a\u0009\u0009\u0009\u0009:PHONE, \u000d\u000a\u0009\u0009\u0009\u0009:MOBILE_PHONE, \u000d\u000a<dynamic parameter=":PHOTO" operator="!=" value="null">\u000d\u000a\u0009\u0009\u0009\u0009:PHOTO, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":JOIN_DATE" operator="!=" value="">\u000d\u000a\u0009\u0009\u0009\u0009STR_TO_DATE(:JOIN_DATE, ''%Y-%m-%d''), \u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009NULL, \u000d\u000a\u0009\u0009\u0009\u0009:GOOGLE_ID, \u000d\u000a<dynamic parameter=":GOOGLE_PW" operator="!=" value="">\u000d\u000a                HEX(AES_ENCRYPT(:GOOGLE_PW, MD5(''#!%''))),\u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009CURRENT_TIMESTAMP, \u000d\u000a\u0009\u0009\u0009\u0009CURRENT_TIMESTAMP, \u000d\u000a\u0009\u0009\u0009\u0009''Y''\u000d\u000a\u0009\u0009\u0009\u0009)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.create.organization_c_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new organization.\u000d\u000a*/\u000d\u000aINSERT INTO ORGANIZATION \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009(\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009ID, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009PARENT_ID, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009NAME, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009RGST_DTTM, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009MDF_DTTM, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009USE_YN\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009) \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009VALUES(\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009:ID,\u000d\u000a<dynamic parameter=":PARENT_ID" operator="==" value="">\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009:ID, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PARENT_ID" operator="!=" value="">\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009:PARENT_ID, \u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009:NAME, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009CURRENT_TIMESTAMP, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009CURRENT_TIMESTAMP, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009''Y''\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.create.role_c_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.08\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new role.\u000d\u000a*/\u000d\u000a\u000d\u000aINSERT INTO ROLE (ORGANIZATION_ID,\u000d\u000a                  MEMBER_ID,\u000d\u000a                  ROLE_CODE,\u000d\u000a                  RGST_DTTM,\u000d\u000a                  MDF_DTTM,\u000d\u000a                  USE_YN)\u000d\u000a          VALUES (:ORGANIZATION_ID,\u000d\u000a                  :MEMBER_ID,\u000d\u000a                  :ROLE_CODE,\u000d\u000a                  CURRENT_TIMESTAMP, \u000d\u000a                  CURRENT_TIMESTAMP, \u000d\u000a                  ''Y'')')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.delete','2013-07-22 14:47:33.848000',4,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.delete.access_list_d_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.16\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Remove access list, Role \uc744 \uc0ad\uc81c\ud560 \ub54c \uac19\uc774 \uc0ad\uc81c Case->ROLE_MEMBER_ID, \u000d\u000a                  Access List\ub9cc \uc0ad\uc81c->MEMBER_ID\u000d\u000a*/\u000d\u000aDELETE FROM ACCESS_LIST\u000d\u000aWHERE 1=1\u000d\u000a<dynamic parameter=":MENU_ID" operator="!=" value="null">\u000d\u000a  AND MENU_ID         = :MENU_ID\u000d\u000a</dynamic>\u000d\u000a  AND ORGANIZATION_ID = :ORGANIZATION_ID\u000d\u000a<dynamic parameter=":ROLE_MEMBER_ID" operator="!=" value="null">\u000d\u000a  AND ROLE_MEMBER_ID  = :ROLE_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MEMBER_ID" operator="!=" value="null">\u000d\u000a  AND ROLE_MEMBER_ID  = :MEMBER_ID\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.insert','2013-08-12 12:02:20.182000',4,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.insert.access_list_c_01','2013-08-12 12:02:20.182000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.15\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Create new access list\u000d\u000a*/\u000d\u000a\u000d\u000aINSERT INTO ACCESS_LIST\u000d\u000a            (MENU_ID,\u000d\u000a             ORGANIZATION_ID,\u000d\u000a             ROLE_MEMBER_ID,\u000d\u000a             ACCESS_LEVEL)\u000d\u000aSELECT MENU.ID AS MENU_ID, :ORGANIZATION_ID, :ROLE_MEMBER_ID, :ACCESS_LEVEL\u000d\u000a  FROM \u000d\u000a       (SELECT MENU.ID, LEVEL, NAME, IF(MENU.LINK_VALUE IS NULL OR MENU.LINK_VALUE = '''', ''Y'', ''N'') AS ISFOLDER\u000d\u000a          FROM(\u000d\u000a               SELECT @id := MENU_HIERARCHY() AS ID, \u000d\u000a                      @level AS LEVEL\u000d\u000a                 FROM (\u000d\u000a                       SELECT @start_with := :MENU_ID, \u000d\u000a                              @id := @start_with,\u000d\u000a                              @level := 0\u000d\u000a                       )VARS, MENU\u000d\u000a                 WHERE @id IS NOT NULL\u000d\u000a              ) HIERARCHY\u000d\u000a               JOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000a       )MENU\u000d\u000a       LEFT OUTER JOIN \u000d\u000a       ACCESS_LIST\u000d\u000a       ON MENU.ID = ACCESS_LIST.MENU_ID\u000d\u000a       AND ACCESS_LIST.ORGANIZATION_ID = :ORGANIZATION_ID\u000d\u000a       AND ACCESS_LIST.ROLE_MEMBER_ID  = :ROLE_MEMBER_ID\u000d\u000aWHERE 1=1\u000d\u000a  AND MENU.ISFOLDER = ''N''\u000d\u000a  AND ACCESS_LIST.MENU_ID IS NULL')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.insert.access_log_c_01','2013-08-12 12:02:20.182000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.27\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate access log.\u000d\u000a*/\u000d\u000aINSERT INTO ACCESS_LOG \u000d\u000a                      (\u000d\u000a                      MEMBER_ID, \u000d\u000a                      SEQ, \u000d\u000a                      ACCESS_DTTM, \u000d\u000a                      ACCESS_IP, \u000d\u000a                      ACCESS_PAGE\u000d\u000a                      ) \u000d\u000a                      VALUES\u000d\u000a                      ( \u000d\u000a                      :MEMBER_ID, \u000d\u000a                      SEQ(''ACCESS_LOG''),\u000d\u000a                      CURRENT_TIMESTAMP, \u000d\u000a                      :ACCESS_IP, \u000d\u000a                      :ACCESS_PAGE\u000d\u000a                      )')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.insert.access_member_c_01','2013-08-12 12:02:20.182000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new access member.\u000d\u000a*/\u000d\u000a\u000d\u000aINSERT INTO ACCESS_MEMBER \u000d\u000a                        (\u000d\u000a                        ID, \u000d\u000a                        PWD, \u000d\u000a                        MEMBER_TYPE,\u000d\u000a                        MAIL, \u000d\u000a                        EXPIRE_DATE, \u000d\u000a                        RGST_DTTM,\u000d\u000a                        MDF_DTTM,\u000d\u000a                        USE_YN\u000d\u000a                        )\u000d\u000a                        VALUES\u000d\u000a                        (\u000d\u000a                        :ID, \u000d\u000a                        MD5(''new1234!''),\u000d\u000a                        :MEMBER_TYPE,\u000d\u000a                        :MAIL, \u000d\u000a<dynamic parameter=":EXPIRE_DATE" operator="==" value="">\u000d\u000a                        DATE_ADD(SYSDATE(), INTERVAL 90 DAY), \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXPIRE_DATE" operator="!=" value="">\u000d\u000a                        STR_TO_DATE(:EXPIRE_DATE, ''%Y-%m-%d''), \u000d\u000a</dynamic>\u000d\u000a                        CURRENT_TIMESTAMP,\u000d\u000a                        CURRENT_TIMESTAMP,\u000d\u000a                        ''Y''\u000d\u000a                        )')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.insert.member_c_01','2013-08-14 13:56:18.296000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new member.\u000d\u000a*/\u000d\u000aINSERT INTO MEMBER \u000d\u000a\u0009\u0009\u0009\u0009(\u000d\u000a\u0009\u0009\u0009\u0009ID, \u000d\u000a\u0009\u0009\u0009\u0009NAME, \u000d\u000a\u0009\u0009\u0009\u0009PHONE, \u000d\u000a\u0009\u0009\u0009\u0009MOBILE_PHONE, \u000d\u000a<dynamic parameter=":PHOTO" operator="!=" value="null">\u000d\u000a\u0009\u0009\u0009\u0009PHOTO, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":JOIN_DATE" operator="!=" value="">\u000d\u000a\u0009\u0009\u0009\u0009JOIN_DATE, \u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009RETIRED_DATE, \u000d\u000a\u0009\u0009\u0009\u0009GOOGLE_ID, \u000d\u000a<dynamic parameter=":GOOGLE_PW" operator="!=" value="">\u000d\u000a\u0009\u0009\u0009\u0009GOOGLE_PW, \u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009RGST_DTTM, \u000d\u000a\u0009\u0009\u0009\u0009MDF_DTTM, \u000d\u000a\u0009\u0009\u0009\u0009USE_YN\u000d\u000a\u0009\u0009\u0009\u0009) \u000d\u000a\u0009\u0009\u0009\u0009VALUES(\u000d\u000a\u0009\u0009\u0009\u0009:ID, \u000d\u000a\u0009\u0009\u0009\u0009:NAME, \u000d\u000a\u0009\u0009\u0009\u0009:PHONE, \u000d\u000a\u0009\u0009\u0009\u0009:MOBILE_PHONE, \u000d\u000a<dynamic parameter=":PHOTO" operator="!=" value="null">\u000d\u000a\u0009\u0009\u0009\u0009:PHOTO, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":JOIN_DATE" operator="!=" value="">\u000d\u000a\u0009\u0009\u0009\u0009STR_TO_DATE(:JOIN_DATE, ''%Y-%m-%d''), \u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009NULL, \u000d\u000a\u0009\u0009\u0009\u0009:GOOGLE_ID, \u000d\u000a<dynamic parameter=":GOOGLE_PW" operator="!=" value="">\u000d\u000a                HEX(AES_ENCRYPT(:GOOGLE_PW, MD5(''#!%''))),\u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009CURRENT_TIMESTAMP,\u000d\u000a\u0009\u0009\u0009\u0009CURRENT_TIMESTAMP,\u000d\u000a\u0009\u0009\u0009\u0009''Y''\u000d\u000a\u0009\u0009\u0009\u0009)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.insert.organization_c_01','2013-08-12 12:02:20.182000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.22\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new organization.\u000d\u000a*/\u000d\u000aINSERT INTO ORGANIZATION \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009(\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009ID, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009PARENT_ID, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009NAME, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009RGST_DTTM, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009MDF_DTTM, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009USE_YN\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009) \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009VALUES(\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009:ID,\u000d\u000a<dynamic parameter=":PARENT_ID" operator="==" value="">\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009:ID, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PARENT_ID" operator="!=" value="">\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009:PARENT_ID, \u000d\u000a</dynamic>\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009:NAME, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009CURRENT_TIMESTAMP, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009CURRENT_TIMESTAMP, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009''Y''\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.insert.role_c_01','2013-08-12 12:02:20.182000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.08\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Generate new role.\u000d\u000a*/\u000d\u000a\u000d\u000aINSERT INTO ROLE (ORGANIZATION_ID,\u000d\u000a                  MEMBER_ID,\u000d\u000a                  ROLE_CODE,\u000d\u000a                  RGST_DTTM,\u000d\u000a                  MDF_DTTM,\u000d\u000a                  USE_YN)\u000d\u000a          VALUES (:ORGANIZATION_ID,\u000d\u000a                  :MEMBER_ID,\u000d\u000a                  :ROLE_CODE,\u000d\u000a                  CURRENT_TIMESTAMP, \u000d\u000a                  CURRENT_TIMESTAMP, \u000d\u000a                  ''Y'')')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select','2013-07-22 14:47:33.848000',4,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.access_r_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search access members of a menu\u000d\u000a*/\u000d\u000aSELECT MENU.NAME                  AS MENU_NAME,\u000d\u000a       MENU.ID                    AS MENU_ID,\u000d\u000a       ORGANIZATION.NAME          AS ORGANIZATION_NAME,\u000d\u000a       ORGANIZATION.ID            AS ORGANIZATION_ID,\u000d\u000a       ACCESS_LIST.ROLE_MEMBER_ID AS MEMBER_ID,\u000d\u000a       MEMBER.NAME                AS MEMBER_NAME,\u000d\u000a       CODE_RC.NAME               AS ROLE_NAME,\u000d\u000a       CODE_LV.NAME               AS ACCESS_LEVEL\u000d\u000a  FROM ACCESS_LIST, \u000d\u000a       ORGANIZATION, \u000d\u000a       ROLE,\u000d\u000a       MEMBER, \u000d\u000a       CODE CODE_LV, \u000d\u000a       CODE CODE_RC, \u000d\u000a       (SELECT MENU.ID, LEVEL, NAME, IF(MENU.LINK_VALUE IS NULL OR MENU.LINK_VALUE = '''', ''Y'', ''N'') AS ISFOLDER\u000d\u000a          FROM(\u000d\u000a               SELECT @id := MENU_HIERARCHY() AS ID, \u000d\u000a                      @level AS LEVEL\u000d\u000a                 FROM (\u000d\u000a                       SELECT @start_with := :MENU_ID, \u000d\u000a                              @id := @start_with,\u000d\u000a                              @level := 0\u000d\u000a                       )VARS, MENU\u000d\u000a                 WHERE @id IS NOT NULL\u000d\u000a              ) HIERARCHY\u000d\u000a               JOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000a       )MENU\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_LIST.ORGANIZATION_ID = ROLE.ORGANIZATION_ID\u000d\u000a   AND ACCESS_LIST.ROLE_MEMBER_ID  = ROLE.MEMBER_ID\u000d\u000a   AND ACCESS_LIST.MENU_ID         = MENU.ID\u000d\u000a   AND ROLE.ORGANIZATION_ID        = ORGANIZATION.ID\u000d\u000a   AND ROLE.MEMBER_ID              = MEMBER.ID\u000d\u000a   AND CODE_LV.ID                  = ACCESS_LIST.ACCESS_LEVEL\u000d\u000a   AND CODE_RC.ID                  = ROLE.ROLE_CODE\u000d\u000a   AND ORGANIZATION.USE_YN         = ''Y''\u000d\u000a   AND ROLE.USE_YN                 = ''Y''\u000d\u000a   AND MEMBER.USE_YN               = ''Y''\u000d\u000a   AND MENU.ISFOLDER               = ''N''\u000d\u000a   AND (MEMBER.RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000a<dynamic parameter=":query" operator="!=" value="">\u000d\u000a<dynamic parameter=":qtype" operator="==" value="ORGANIZATION_NAME">\u000d\u000a   AND ORGANIZATION.NAME LIKE CONCAT(CONCAT(''%'', :query), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":qtype" operator="==" value="MEMBER_ID">\u000d\u000a   AND ACCESS_LIST.ROLE_MEMBER_ID LIKE CONCAT(CONCAT(''%'', :query), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":qtype" operator="==" value="MEMBER_NAME">\u000d\u000a   AND MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :query), ''%'')\u000d\u000a</dynamic>\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMENU.NAME DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MENU_NAME">\u000d\u000aMENU.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ORGANIZATION_NAME">\u000d\u000aORGANIZATION.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_ID">\u000d\u000aACCESS_LIST.ROLE_MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_NAME">\u000d\u000aMEMBER.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ROLE_NAME">\u000d\u000aCODE_RC.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ACCESS_LEVEL">\u000d\u000aCODE_LV.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.access_r_02','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search access members of a menu\u000d\u000a*/\u000d\u000aSELECT COUNT(*) TOTAL_CNT, :page AS page\u000d\u000a  FROM ACCESS_LIST, \u000d\u000a       ORGANIZATION, \u000d\u000a       ROLE, \u000d\u000a       MEMBER, \u000d\u000a       CODE CODE_LV, \u000d\u000a       CODE CODE_RC,\u000d\u000a       (SELECT MENU.ID, LEVEL, NAME, IF(MENU.LINK_VALUE IS NULL OR MENU.LINK_VALUE = '''', ''Y'', ''N'') AS ISFOLDER\u000d\u000a          FROM(\u000d\u000a               SELECT @id := MENU_HIERARCHY() AS ID, \u000d\u000a                      @level AS LEVEL\u000d\u000a                 FROM (\u000d\u000a                       SELECT @start_with := :MENU_ID, \u000d\u000a                              @id := @start_with,\u000d\u000a                              @level := 0\u000d\u000a                       )VARS, MENU\u000d\u000a                 WHERE @id IS NOT NULL\u000d\u000a              ) HIERARCHY\u000d\u000a               JOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000a       )MENU\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_LIST.ORGANIZATION_ID = ROLE.ORGANIZATION_ID\u000d\u000a   AND ACCESS_LIST.ROLE_MEMBER_ID  = ROLE.MEMBER_ID\u000d\u000a   AND ACCESS_LIST.MENU_ID         = MENU.ID\u000d\u000a   AND ROLE.ORGANIZATION_ID        = ORGANIZATION.ID\u000d\u000a   AND ROLE.MEMBER_ID              = MEMBER.ID\u000d\u000a   AND CODE_LV.ID                  = ACCESS_LIST.ACCESS_LEVEL\u000d\u000a   AND CODE_RC.ID                  = ROLE.ROLE_CODE\u000d\u000a   AND ORGANIZATION.USE_YN         = ''Y''\u000d\u000a   AND ROLE.USE_YN                 = ''Y''\u000d\u000a   AND MEMBER.USE_YN               = ''Y''\u000d\u000a   AND MENU.ISFOLDER               = ''N''\u000d\u000a   AND (MEMBER.RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000a<dynamic parameter=":query" operator="!=" value="">\u000d\u000a<dynamic parameter=":qtype" operator="==" value="ORGANIZATION_NAME">\u000d\u000a   AND ORGANIZATION.NAME LIKE CONCAT(CONCAT(''%'', :query), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":qtype" operator="==" value="MEMBER_ID">\u000d\u000a   AND ACCESS_LIST.ROLE_MEMBER_ID LIKE CONCAT(CONCAT(''%'', :query), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":qtype" operator="==" value="MEMBER_NAME">\u000d\u000a   AND MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :query), ''%'')\u000d\u000a</dynamic>\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.lecturer_r_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search lecturer for management\u000d\u000a*/\u000d\u000aSELECT LECTURER.ID, \u000d\u000a       LECTURER.NAME, \u000d\u000a       CODE_MT.NAME AS MEMBER_TYPE,\u000d\u000a       ACCESS_MEMBER.MAIL,\u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE,\u000d\u000a       LECTURER.PHONE, \u000d\u000a       LECTURER.MOBILE_PHONE,\u000d\u000a       LECTURER.PHOTO,\u000d\u000a       LECTURER.GOOGLE_ID,\u000d\u000a       LECTURER.FAX,\u000d\u000a       LECTURER.WEB_SITE,\u000d\u000a       LECTURER.ZIP_CODE,\u000d\u000a       LECTURER.ADDR1,\u000d\u000a       LECTURER.ADDR2,\u000d\u000a       LECTURER.DEGREE,\u000d\u000a       LECTURER.ORGANIZATION,\u000d\u000a       LECTURER.MAJOR,\u000d\u000a       REPLACE(LECTURER.CAREER, ''\r\n'', ''\\r\\n'') AS CAREER,\u000d\u000a       LECTURER.SPECIALISM,\u000d\u000a       LECTURER.EXP_NOTE,\u000d\u000a       LECTURER.RGST_DTTM,\u000d\u000a       LECTURER.MDF_DTTM\u000d\u000a  FROM LECTURER, ACCESS_MEMBER, CODE CODE_MT, CODE CODE_DG\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.ID     = LECTURER.ID\u000d\u000a   AND CODE_MT.ID           = ACCESS_MEMBER.MEMBER_TYPE\u000d\u000a   AND CODE_DG.ID           = LECTURER.DEGREE\u000d\u000a   AND ACCESS_MEMBER.USE_YN = ''Y''\u000d\u000a   AND LECTURER.USE_YN      = ''Y''\u000d\u000a   AND LECTURER.ID          = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_01','2013-10-02 13:30:25.480000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member for login\u000d\u000a*/\u000d\u000a<dynamic parameter=":EXC_ORDER" operator="==" value="null">\u000d\u000a SELECT ACCESS_MEMBER.MEMBER_TYPE, \u000d\u000a        MEMBER.NAME,\u000d\u000a        IF(MEMBER.ID IS NOT NULL,''Y'', ''N'') AS REG_INFO,\u000d\u000a        DATE_FORMAT(CURRENT_TIMESTAMP, ''%Y%m%d%k%i%s'') LOGIN_TIME,\u000d\u000a        ''1'' AS EXC_ORDER\u000d\u000a   FROM ACCESS_MEMBER\u000d\u000a        LEFT OUTER JOIN\u000d\u000a\u0009MEMBER\u000d\u000a\u0009ON MEMBER.ID = ACCESS_MEMBER.ID \u000d\u000a  WHERE 1=1\u000d\u000a    AND ACCESS_MEMBER.ID = :ID\u000d\u000a    AND ACCESS_MEMBER.PWD = MD5(:PWD)\u000d\u000a    AND ACCESS_MEMBER.USE_YN = ''Y''\u000d\u000a    AND ACCESS_MEMBER.EXPIRE_DATE >= CURRENT_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXC_ORDER" operator="!=" value="null">\u000d\u000aSELECT IF(COUNT(*) > 0, ''Y'', ''N'') AS ACCESS_YN\u000d\u000a  FROM ACCESS_LIST, ROLE\u000d\u000a WHERE ROLE.MEMBER_ID = ACCESS_LIST.ROLE_MEMBER_ID\u000d\u000a   AND ROLE.ORGANIZATION_ID = ACCESS_LIST.ORGANIZATION_ID\u000d\u000a   AND ACCESS_LIST.ROLE_MEMBER_ID = :ID\u000d\u000a   AND ROLE.USE_YN = ''Y''\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_02','2013-08-12 20:22:10.570000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) under organization\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID,\u000d\u000a       MEMBER.NAME, \u000d\u000a       ACCESS_MEMBER.MAIL,\u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE,\u000d\u000a       MEMBER.PHONE, \u000d\u000a       MEMBER.MOBILE_PHONE, \u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, '''', MEMBER.JOIN_DATE) AS JOIN_DATE,\u000d\u000a       IF(MEMBER.RETIRED_DATE IS NULL, '''', MEMBER.RETIRED_DATE) AS RETIRED_DATE,\u000d\u000a       EP_CODE.NAME AS MEMBER_TYPE, \u000d\u000a       MEMBER.GOOGLE_ID, \u000d\u000a       MEMBER.RGST_DTTM,\u000d\u000a       MEMBER.MDF_DTTM\u000d\u000a  FROM MEMBER, \u000d\u000a       CODE AS EP_CODE, \u000d\u000a       ACCESS_MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.MEMBER_TYPE = EP_CODE.ID \u000d\u000a   AND ACCESS_MEMBER.ID       = MEMBER.ID\u000d\u000a   AND MEMBER.USE_YN          = ''Y''\u000d\u000a   AND ACCESS_MEMBER.USE_YN   = ''Y''\u000d\u000a   AND (RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMEMBER.MDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMEMBER.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMEMBER.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACCESS_MEMBER.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACCESS_MEMBER.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMEMBER.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMEMBER.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="JOIN_DATE">\u000d\u000aMEMBER.JOIN_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RETIRED_DATE">\u000d\u000aMEMBER.RETIRED_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aEP_CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="GOOGLE_ID">\u000d\u000aMEMBER.GOOGLE_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aMEMBER.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aMEMBER.MDF_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_03','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) under organization\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT COUNT(*) TOTAL_CNT, :page AS page \u000d\u000a  FROM MEMBER, ACCESS_MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.ID       = MEMBER.ID\u000d\u000a   AND MEMBER.USE_YN          = ''Y''\u000d\u000a   AND ACCESS_MEMBER.USE_YN   = ''Y''\u000d\u000a   AND (RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_04','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search access member for management\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT IF(MEMBER.NAME IS NOT NULL, ''Y'', IF(LECTURER.NAME IS NOT NULL, ''Y'', ''N'')) AS RGST_YN,\u000d\u000a       ACCESS_MEMBER.ID, \u000d\u000a       IF(MEMBER.NAME IS NOT NULL, MEMBER.NAME, IF(LECTURER.NAME IS NOT NULL, LECTURER.NAME, ''<![CDATA[<font color=red>\ub4f1\ub85d\uc548\ub428</font>]]>'')) AS NAME,\u000d\u000a       CODE.NAME AS MEMBER_TYPE, \u000d\u000a       ACCESS_MEMBER.MAIL, \u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE, \u000d\u000a       ACCESS_MEMBER.RGST_DTTM, \u000d\u000a       ACCESS_MEMBER.MDF_DTTM \u000d\u000a  FROM ACCESS_MEMBER\u000d\u000a       LEFT OUTER JOIN MEMBER \u000d\u000a       ON MEMBER.ID = ACCESS_MEMBER.ID  \u000d\u000a       AND MEMBER.USE_YN = ''Y''\u000d\u000a       LEFT OUTER JOIN LECTURER \u000d\u000a       ON LECTURER.ID = ACCESS_MEMBER.ID \u000d\u000a       AND LECTURER.USE_YN = ''Y''\u000d\u000a       , CODE\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_ID">\u000d\u000a       , (SELECT DISTINCT ROLE.MEMBER_ID AS MEMBER_ID\u000d\u000a            FROM (SELECT ORGANIZATION.ID, NAME\u000d\u000a                    FROM(SELECT @id := ORGANIZATION_HIERARCHY() AS ID, \u000d\u000a                                 @level AS LEVEL\u000d\u000a                           FROM (SELECT @start_with := :KEYWORD, \u000d\u000a                                        @id := @start_with,\u000d\u000a                                        @level := 0\u000d\u000a                                 )VARS, MENU\u000d\u000a                           WHERE @id IS NOT NULL\u000d\u000a                         ) HIERARCHY\u000d\u000a                    JOIN ORGANIZATION ON ORGANIZATION.ID = HIERARCHY.ID\u000d\u000a                   WHERE ORGANIZATION.USE_YN = ''Y'') ORGN, ROLE\u000d\u000a           WHERE ORGN.ID = ROLE.ORGANIZATION_ID\u000d\u000a             AND ROLE.USE_YN = ''Y'') ORGN \u000d\u000a</dynamic>\u000d\u000a WHERE CODE.ID = ACCESS_MEMBER.MEMBER_TYPE\u000d\u000a   AND ACCESS_MEMBER.USE_YN = ''Y''\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND ACCESS_MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND (MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a        OR\u000d\u000a        LECTURER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a        )\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_ID">\u000d\u000a   AND ORGN.MEMBER_ID = ACCESS_MEMBER.ID\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aACCESS_MEMBER.MDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aACCESS_MEMBER.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aNAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aCODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACCESS_MEMBER.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACCESS_MEMBER.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aACCESS_MEMBER.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aACCESS_MEMBER.MDF_DTTM \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_04','2013-07-22 17:47:51.251000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search access member for management\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT IF(MEMBER.NAME IS NOT NULL, ''Y'', IF(LECTURER.NAME IS NOT NULL, ''Y'', ''N'')) AS RGST_YN,\u000d\u000a       ACCESS_MEMBER.ID, \u000d\u000a       IF(MEMBER.NAME IS NOT NULL, MEMBER.NAME, ''<![CDATA[<font color=red>\ub4f1\ub85d\uc548\ub428</font>]]>'') AS NAME,\u000d\u000a       CODE.NAME AS MEMBER_TYPE, \u000d\u000a       ACCESS_MEMBER.MAIL, \u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE, \u000d\u000a       ACCESS_MEMBER.RGST_DTTM, \u000d\u000a       ACCESS_MEMBER.MDF_DTTM \u000d\u000a  FROM ACCESS_MEMBER\u000d\u000a       LEFT OUTER JOIN MEMBER \u000d\u000a       ON MEMBER.ID = ACCESS_MEMBER.ID  \u000d\u000a       AND MEMBER.USE_YN = ''Y''\u000d\u000a       LEFT OUTER JOIN LECTURER \u000d\u000a       ON LECTURER.ID = ACCESS_MEMBER.ID \u000d\u000a       AND LECTURER.USE_YN = ''Y''\u000d\u000a       , CODE\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_ID">\u000d\u000a       , (SELECT DISTINCT ROLE.MEMBER_ID AS MEMBER_ID\u000d\u000a            FROM (SELECT ORGANIZATION.ID, NAME\u000d\u000a                    FROM(SELECT @id := ORGANIZATION_HIERARCHY() AS ID, \u000d\u000a                                 @level AS LEVEL\u000d\u000a                           FROM (SELECT @start_with := :KEYWORD, \u000d\u000a                                        @id := @start_with,\u000d\u000a                                        @level := 0\u000d\u000a                                 )VARS, MENU\u000d\u000a                           WHERE @id IS NOT NULL\u000d\u000a                         ) HIERARCHY\u000d\u000a                    JOIN ORGANIZATION ON ORGANIZATION.ID = HIERARCHY.ID\u000d\u000a                   WHERE ORGANIZATION.USE_YN = ''Y'') ORGN, ROLE\u000d\u000a           WHERE ORGN.ID = ROLE.ORGANIZATION_ID\u000d\u000a             AND ROLE.USE_YN = ''Y'') ORGN \u000d\u000a</dynamic>\u000d\u000a WHERE CODE.ID = ACCESS_MEMBER.MEMBER_TYPE\u000d\u000a   AND ACCESS_MEMBER.USE_YN = ''Y''\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND ACCESS_MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND (MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a        OR\u000d\u000a        LECTURER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a        )\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_ID">\u000d\u000a   AND ORGN.MEMBER_ID = ACCESS_MEMBER.ID\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aACCESS_MEMBER.MDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aACCESS_MEMBER.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aNAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aCODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACCESS_MEMBER.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACCESS_MEMBER.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aACCESS_MEMBER.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aACCESS_MEMBER.MDF_DTTM \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_04','2013-07-22 17:51:45.374000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search access member for management\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT IF(MEMBER.NAME IS NOT NULL, ''Y'', ''N'') AS RGST_YN,\u000d\u000a       ACCESS_MEMBER.ID, \u000d\u000a       IF(MEMBER.NAME IS NOT NULL, MEMBER.NAME, ''<![CDATA[<font color=red>\ub4f1\ub85d\uc548\ub428</font>]]>'') AS NAME,\u000d\u000a       CODE.NAME AS MEMBER_TYPE, \u000d\u000a       ACCESS_MEMBER.MAIL, \u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE, \u000d\u000a       ACCESS_MEMBER.RGST_DTTM, \u000d\u000a       ACCESS_MEMBER.MDF_DTTM \u000d\u000a  FROM ACCESS_MEMBER\u000d\u000a       LEFT OUTER JOIN MEMBER \u000d\u000a       ON MEMBER.ID = ACCESS_MEMBER.ID  \u000d\u000a       AND MEMBER.USE_YN = ''Y''\u000d\u000a       , CODE\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_ID">\u000d\u000a       , (SELECT DISTINCT ROLE.MEMBER_ID AS MEMBER_ID\u000d\u000a            FROM (SELECT ORGANIZATION.ID, NAME\u000d\u000a                    FROM(SELECT @id := ORGANIZATION_HIERARCHY() AS ID, \u000d\u000a                                 @level AS LEVEL\u000d\u000a                           FROM (SELECT @start_with := :KEYWORD, \u000d\u000a                                        @id := @start_with,\u000d\u000a                                        @level := 0\u000d\u000a                                 )VARS, MENU\u000d\u000a                           WHERE @id IS NOT NULL\u000d\u000a                         ) HIERARCHY\u000d\u000a                    JOIN ORGANIZATION ON ORGANIZATION.ID = HIERARCHY.ID\u000d\u000a                   WHERE ORGANIZATION.USE_YN = ''Y'') ORGN, ROLE\u000d\u000a           WHERE ORGN.ID = ROLE.ORGANIZATION_ID\u000d\u000a             AND ROLE.USE_YN = ''Y'') ORGN \u000d\u000a</dynamic>\u000d\u000a WHERE CODE.ID = ACCESS_MEMBER.MEMBER_TYPE\u000d\u000a   AND ACCESS_MEMBER.USE_YN = ''Y''\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND ACCESS_MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_ID">\u000d\u000a   AND ORGN.MEMBER_ID = ACCESS_MEMBER.ID\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aACCESS_MEMBER.MDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aACCESS_MEMBER.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aNAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aCODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACCESS_MEMBER.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACCESS_MEMBER.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aACCESS_MEMBER.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aACCESS_MEMBER.MDF_DTTM \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_05','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search access member for management\u000d\u000a*/\u000d\u000aSELECT COUNT(*) TOTAL_CNT, :page AS page \u000d\u000a  FROM ACCESS_MEMBER\u000d\u000a       LEFT OUTER JOIN MEMBER \u000d\u000a       ON MEMBER.ID = ACCESS_MEMBER.ID  \u000d\u000a       AND MEMBER.USE_YN = ''Y''\u000d\u000a       LEFT OUTER JOIN LECTURER \u000d\u000a       ON LECTURER.ID = ACCESS_MEMBER.ID \u000d\u000a       AND LECTURER.USE_YN = ''Y''\u000d\u000a       , CODE\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_ID">\u000d\u000a       , (SELECT DISTINCT ROLE.MEMBER_ID AS MEMBER_ID\u000d\u000a            FROM (SELECT ORGANIZATION.ID, NAME\u000d\u000a                    FROM(SELECT @id := ORGANIZATION_HIERARCHY() AS ID, \u000d\u000a                                 @level AS LEVEL\u000d\u000a                           FROM (SELECT @start_with := :KEYWORD, \u000d\u000a                                        @id := @start_with,\u000d\u000a                                        @level := 0\u000d\u000a                                 )VARS, MENU\u000d\u000a                           WHERE @id IS NOT NULL\u000d\u000a                         ) HIERARCHY\u000d\u000a                    JOIN ORGANIZATION ON ORGANIZATION.ID = HIERARCHY.ID\u000d\u000a                   WHERE ORGANIZATION.USE_YN = ''Y'') ORGN, ROLE\u000d\u000a           WHERE ORGN.ID = ROLE.ORGANIZATION_ID\u000d\u000a             AND ROLE.USE_YN = ''Y'') ORGN \u000d\u000a</dynamic>\u000d\u000a WHERE CODE.ID = ACCESS_MEMBER.MEMBER_TYPE\u000d\u000a   AND ACCESS_MEMBER.USE_YN = ''Y''\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND ACCESS_MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND (MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a        OR\u000d\u000a        LECTURER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a        )\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_ID">\u000d\u000a   AND ORGN.MEMBER_ID = ACCESS_MEMBER.ID\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_05','2013-07-22 17:48:41.265000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search access member for management\u000d\u000a*/\u000d\u000aSELECT COUNT(*) TOTAL_CNT, :page AS page \u000d\u000a  FROM ACCESS_MEMBER\u000d\u000a       LEFT OUTER JOIN MEMBER \u000d\u000a       ON MEMBER.ID = ACCESS_MEMBER.ID  \u000d\u000a       AND MEMBER.USE_YN = ''Y''\u000d\u000a       , CODE\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_ID">\u000d\u000a       , (SELECT DISTINCT ROLE.MEMBER_ID AS MEMBER_ID\u000d\u000a            FROM (SELECT ORGANIZATION.ID, NAME\u000d\u000a                    FROM(SELECT @id := ORGANIZATION_HIERARCHY() AS ID, \u000d\u000a                                 @level AS LEVEL\u000d\u000a                           FROM (SELECT @start_with := :KEYWORD, \u000d\u000a                                        @id := @start_with,\u000d\u000a                                        @level := 0\u000d\u000a                                 )VARS, MENU\u000d\u000a                           WHERE @id IS NOT NULL\u000d\u000a                         ) HIERARCHY\u000d\u000a                    JOIN ORGANIZATION ON ORGANIZATION.ID = HIERARCHY.ID\u000d\u000a                   WHERE ORGANIZATION.USE_YN = ''Y'') ORGN, ROLE\u000d\u000a           WHERE ORGN.ID = ROLE.ORGANIZATION_ID\u000d\u000a             AND ROLE.USE_YN = ''Y'') ORGN \u000d\u000a</dynamic>\u000d\u000a WHERE CODE.ID = ACCESS_MEMBER.MEMBER_TYPE\u000d\u000a   AND ACCESS_MEMBER.USE_YN = ''Y''\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND ACCESS_MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_ID">\u000d\u000a   AND ORGN.MEMBER_ID = ACCESS_MEMBER.ID\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_06','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member for management\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID, \u000d\u000a       MEMBER.NAME, \u000d\u000a       CODE.NAME AS MEMBER_TYPE,\u000d\u000a       ACCESS_MEMBER.MAIL,\u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE,\u000d\u000a       MEMBER.PHONE,\u000d\u000a       MEMBER.MOBILE_PHONE,\u000d\u000a       MEMBER.PHOTO,\u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, '''', MEMBER.JOIN_DATE) AS JOIN_DATE,\u000d\u000a       IF(MEMBER.RETIRED_DATE IS NULL, '''', MEMBER.RETIRED_DATE) AS RETIRED_DATE,\u000d\u000a       MEMBER.GOOGLE_ID,\u000d\u000a       MEMBER.RGST_DTTM,\u000d\u000a       MEMBER.MDF_DTTM\u000d\u000a  FROM MEMBER, ACCESS_MEMBER, CODE\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.ID = MEMBER.ID\u000d\u000a   AND CODE.ID = ACCESS_MEMBER.MEMBER_TYPE\u000d\u000a   AND ACCESS_MEMBER.USE_YN = ''Y''\u000d\u000a   AND MEMBER.USE_YN = ''Y''\u000d\u000a   AND MEMBER.ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_07','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','SELECT NAME, MAIL, PHONE, MOBILE_PHONE, PHOTO\u000d\u000a  FROM VW_MEMBER\u000d\u000a WHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_08','2013-08-08 09:16:34.603000',5,'DOCUMENT','true ','SELECT MEMBER.ID, MEMBER.NAME, CODE.NAME ROLE_NAME, ORGANIZATION.ID ORGANIZATION_ID, \u000d\u000a       ORGANIZATION.NAME ORGANIZATION_NAME\u000d\u000a  FROM MEMBER, ROLE, ORGANIZATION, CODE\u000d\u000a WHERE 1=1\u000d\u000a   AND MEMBER.ID = ROLE.MEMBER_ID\u000d\u000a   AND ORGANIZATION.ID = ROLE.ORGANIZATION_ID\u000d\u000a   AND ROLE.ROLE_CODE = CODE.ID\u000d\u000a   AND (MEMBER.ID LIKE CONCAT(CONCAT(''%'', :ID), ''%'') \u000d\u000a        OR MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :ID), ''%'')) \u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_08','2013-08-08 09:41:03.826000',5,'DOCUMENT','true ','/*\u000d\u000a\uba64\ubc84\uc758 \uc815\ubcf4\uc640 \uc9c1\ucc45 \ubd80\uc11c \uc815\ubcf4 \ub9ac\uc2a4\ud2b8 \uc870\ud68c\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID, \u000d\u000a       MEMBER.NAME, \u000d\u000a       CODE.NAME ROLE_NAME, \u000d\u000a       ORGANIZATION.ID ORGANIZATION_ID, \u000d\u000a       ORGANIZATION.NAME ORGANIZATION_NAME\u000d\u000a  FROM MEMBER, ROLE, ORGANIZATION, CODE\u000d\u000a WHERE 1=1\u000d\u000a   AND MEMBER.ID = ROLE.MEMBER_ID\u000d\u000a   AND ORGANIZATION.ID = ROLE.ORGANIZATION_ID\u000d\u000a   AND ROLE.ROLE_CODE = CODE.ID\u000d\u000a   AND MEMBER.USE_YN = ''Y''\u000d\u000a   AND ROLE.USE_YN = ''Y''\u000d\u000a   AND ORGANIZATION.USE_YN = ''Y''\u000d\u000a   AND (MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'') \u000d\u000a        OR MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%''))')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_09','2013-08-12 15:50:24.557000',5,'DOCUMENT','true ','/*\u000d\u000a\uba64\ubc84\uc758 \uc815\ubcf4\uc640 \uc9c1\ucc45 \ubd80\uc11c \uc815\ubcf4 \uc870\ud68c\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID, \u000d\u000a       MEMBER.NAME, \u000d\u000a       CODE.NAME ROLE_NAME, \u000d\u000a       ORGANIZATION.NAME ORGANIZATION_NAME, \u000d\u000a       ACCESS_MEMBER.MAIL, \u000d\u000a       IF(MEMBER.PHONE IS NULL, "", MEMBER.PHONE) PHONE, \u000d\u000a       IF(MEMBER.MOBILE_PHONE IS NULL, "", MEMBER.MOBILE_PHONE) MOBILE_PHONE,\u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, "", MEMBER.JOIN_DATE) JOIN_DATE, \u000d\u000a       IF(MEMBER.RETIRED_DATE = '''', ''\uadfc\ubb34\uc911'',IF(MEMBER.RETIRED_DATE IS NULL, "\uadfc\ubb34\uc911", MEMBER.RETIRED_DATE)) RETIRED_DATE, \u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE EXPIRE_DATE,\u000d\u000a       IF(MEMBER.GOOGLE_ID IS NULL, "", MEMBER.GOOGLE_ID) GOOGLE_ID, \u000d\u000a       IF(MEMBER.GOOGLE_PW IS NULL, "", MEMBER.GOOGLE_PW) GOOGLE_PW, \u000d\u000a       MEMBER.PHOTO\u000d\u000a  FROM MEMBER, ROLE, ORGANIZATION, CODE, ACCESS_MEMBER\u000d\u000a WHERE ACCESS_MEMBER.ID = MEMBER.ID\u000d\u000a   AND MEMBER.ID = ROLE.MEMBER_ID\u000d\u000a   AND ORGANIZATION.ID = ROLE.ORGANIZATION_ID\u000d\u000a   AND ROLE.ROLE_CODE = CODE.ID\u000d\u000a   AND MEMBER.USE_YN = ''Y''\u000d\u000a   AND ROLE.USE_YN = ''Y''\u000d\u000a   AND ORGANIZATION.USE_YN = ''Y''\u000d\u000a   AND (MEMBER.RETIRED_DATE > CURRENT_DATE OR MEMBER.RETIRED_DATE IS NULL OR MEMBER.RETIRED_DATE = '''')\u000d\u000a   AND MEMBER.ID = :MEMBER_ID\u000d\u000a   AND ORGANIZATION.ID = :ORGANIZATION_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_09','2013-08-12 15:54:58.481000',5,'DOCUMENT','true ','/*\u000d\u000a\uba64\ubc84\uc758 \uc815\ubcf4\uc640 \uc9c1\ucc45 \ubd80\uc11c \uc815\ubcf4 \uc870\ud68c\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID, \u000d\u000a       MEMBER.NAME, \u000d\u000a       ROLE_NAME.NAME ROLE_NAME, \u000d\u000a       ORGANIZATION.NAME ORGANIZATION_NAME, \u000d\u000a       ACCESS_MEMBER.MAIL, \u000d\u000a       IF(MEMBER.PHONE IS NULL, "", MEMBER.PHONE) PHONE, \u000d\u000a       IF(MEMBER.MOBILE_PHONE IS NULL, "", MEMBER.MOBILE_PHONE) MOBILE_PHONE,\u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, "", MEMBER.JOIN_DATE) JOIN_DATE, \u000d\u000a       IF(MEMBER.RETIRED_DATE = '''', ''\uadfc\ubb34\uc911'',IF(MEMBER.RETIRED_DATE IS NULL, "\uadfc\ubb34\uc911", MEMBER.RETIRED_DATE)) RETIRED_DATE, \u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE EXPIRE_DATE,\u000d\u000a       IF(MEMBER.GOOGLE_ID IS NULL, "", MEMBER.GOOGLE_ID) GOOGLE_ID, \u000d\u000a       IF(MEMBER.GOOGLE_PW IS NULL, "", MEMBER.GOOGLE_PW) GOOGLE_PW, \u000d\u000a       MEMBER.PHOTO\u000d\u000a  FROM MEMBER, ROLE, ORGANIZATION, CODE ROLE_NAME, ACCESS_MEMBER\u000d\u000a WHERE ACCESS_MEMBER.ID = MEMBER.ID\u000d\u000a   AND MEMBER.ID = ROLE.MEMBER_ID\u000d\u000a   AND ORGANIZATION.ID = ROLE.ORGANIZATION_ID\u000d\u000a   AND ROLE.ROLE_CODE = ROLE_NAME.ID\u000d\u000a   AND MEMBER.USE_YN = ''Y''\u000d\u000a   AND ROLE.USE_YN = ''Y''\u000d\u000a   AND ORGANIZATION.USE_YN = ''Y''\u000d\u000a   AND (MEMBER.RETIRED_DATE > CURRENT_DATE OR MEMBER.RETIRED_DATE IS NULL OR MEMBER.RETIRED_DATE = '''')\u000d\u000a   AND MEMBER.ID = :MEMBER_ID\u000d\u000a   AND ORGANIZATION.ID = :ORGANIZATION_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_09','2013-08-12 15:57:40.523000',5,'DOCUMENT','true ','/*\u000d\u000a\uba64\ubc84\uc758 \uc815\ubcf4\uc640 \uc9c1\ucc45 \ubd80\uc11c \uc815\ubcf4 \uc870\ud68c\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID, \u000d\u000a       MEMBER.NAME, \u000d\u000a       MEMBER_TYPE.NAME\u000d\u000a       ROLE_NAME.NAME ROLE_NAME, \u000d\u000a       ORGANIZATION.NAME ORGANIZATION_NAME, \u000d\u000a       ACCESS_MEMBER.MAIL, \u000d\u000a       IF(MEMBER.PHONE IS NULL, "", MEMBER.PHONE) PHONE, \u000d\u000a       IF(MEMBER.MOBILE_PHONE IS NULL, "", MEMBER.MOBILE_PHONE) MOBILE_PHONE,\u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, "", MEMBER.JOIN_DATE) JOIN_DATE, \u000d\u000a       IF(MEMBER.RETIRED_DATE = '''', ''\uadfc\ubb34\uc911'',IF(MEMBER.RETIRED_DATE IS NULL, "\uadfc\ubb34\uc911", MEMBER.RETIRED_DATE)) RETIRED_DATE, \u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE EXPIRE_DATE,\u000d\u000a       IF(MEMBER.GOOGLE_ID IS NULL, "", MEMBER.GOOGLE_ID) GOOGLE_ID, \u000d\u000a       IF(MEMBER.GOOGLE_PW IS NULL, "", MEMBER.GOOGLE_PW) GOOGLE_PW, \u000d\u000a       MEMBER.PHOTO\u000d\u000a  FROM MEMBER, ROLE, ORGANIZATION, CODE ROLE_NAME, CODE MEMBER_TYPE, ACCESS_MEMBER\u000d\u000a WHERE ACCESS_MEMBER.ID = MEMBER.ID\u000d\u000a   AND MEMBER.ID = ROLE.MEMBER_ID\u000d\u000a   AND ORGANIZATION.ID = ROLE.ORGANIZATION_ID\u000d\u000a   AND ROLE.ROLE_CODE = ROLE_NAME.ID\u000d\u000a   AND MEMBER.USE_YN = ''Y''\u000d\u000a   AND ROLE.USE_YN = ''Y''\u000d\u000a   AND ORGANIZATION.USE_YN = ''Y''\u000d\u000a   AND (MEMBER.RETIRED_DATE > CURRENT_DATE OR MEMBER.RETIRED_DATE IS NULL OR MEMBER.RETIRED_DATE = '''')\u000d\u000a   AND MEMBER.ID = :MEMBER_ID\u000d\u000a   AND ORGANIZATION.ID = :ORGANIZATION_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_09','2013-08-12 15:58:28.158000',5,'DOCUMENT','true ','/*\u000d\u000a\uba64\ubc84\uc758 \uc815\ubcf4\uc640 \uc9c1\ucc45 \ubd80\uc11c \uc815\ubcf4 \uc870\ud68c\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID, \u000d\u000a       MEMBER.NAME, \u000d\u000a       MEMBER_TYPE.NAME\u000d\u000a       ROLE_NAME.NAME ROLE_NAME, \u000d\u000a       ORGANIZATION.NAME ORGANIZATION_NAME, \u000d\u000a       ACCESS_MEMBER.MAIL, \u000d\u000a       IF(MEMBER.PHONE IS NULL, "", MEMBER.PHONE) PHONE, \u000d\u000a       IF(MEMBER.MOBILE_PHONE IS NULL, "", MEMBER.MOBILE_PHONE) MOBILE_PHONE,\u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, "", MEMBER.JOIN_DATE) JOIN_DATE, \u000d\u000a       IF(MEMBER.RETIRED_DATE = '''', ''\uadfc\ubb34\uc911'',IF(MEMBER.RETIRED_DATE IS NULL, "\uadfc\ubb34\uc911", MEMBER.RETIRED_DATE)) RETIRED_DATE, \u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE EXPIRE_DATE,\u000d\u000a       IF(MEMBER.GOOGLE_ID IS NULL, "", MEMBER.GOOGLE_ID) GOOGLE_ID, \u000d\u000a       IF(MEMBER.GOOGLE_PW IS NULL, "", MEMBER.GOOGLE_PW) GOOGLE_PW, \u000d\u000a       MEMBER.PHOTO\u000d\u000a  FROM MEMBER, ROLE, ORGANIZATION, CODE ROLE_NAME, CODE MEMBER_TYPE, ACCESS_MEMBER\u000d\u000a WHERE ACCESS_MEMBER.ID = MEMBER.ID\u000d\u000a   AND MEMBER.ID = ROLE.MEMBER_ID\u000d\u000a   AND ORGANIZATION.ID = ROLE.ORGANIZATION_ID\u000d\u000a   AND ROLE.ROLE_CODE = ROLE_NAME.ID\u000d\u000a   AND ACCESS_MEMBER.MEMBER_TYPE = MEMBER_TYPE.ID\u000d\u000a   AND MEMBER.USE_YN = ''Y''\u000d\u000a   AND ROLE.USE_YN = ''Y''\u000d\u000a   AND ORGANIZATION.USE_YN = ''Y''\u000d\u000a   AND (MEMBER.RETIRED_DATE > CURRENT_DATE OR MEMBER.RETIRED_DATE IS NULL OR MEMBER.RETIRED_DATE = '''')\u000d\u000a   AND MEMBER.ID = :MEMBER_ID\u000d\u000a   AND ORGANIZATION.ID = :ORGANIZATION_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_09','2013-08-12 16:00:30.850000',5,'DOCUMENT','true ','/*\u000d\u000a\uba64\ubc84\uc758 \uc815\ubcf4\uc640 \uc9c1\ucc45 \ubd80\uc11c \uc815\ubcf4 \uc870\ud68c\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID, \u000d\u000a       MEMBER.NAME, \u000d\u000a       MEMBER_TYPE.NAME MEMBER_TYPE,\u000d\u000a       ROLE_NAME.NAME ROLE_NAME, \u000d\u000a       ORGANIZATION.NAME ORGANIZATION_NAME, \u000d\u000a       ACCESS_MEMBER.MAIL, \u000d\u000a       IF(MEMBER.PHONE IS NULL, "", MEMBER.PHONE) PHONE, \u000d\u000a       IF(MEMBER.MOBILE_PHONE IS NULL, "", MEMBER.MOBILE_PHONE) MOBILE_PHONE,\u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, "", MEMBER.JOIN_DATE) JOIN_DATE, \u000d\u000a       IF(MEMBER.RETIRED_DATE = '''', ''\uadfc\ubb34\uc911'',IF(MEMBER.RETIRED_DATE IS NULL, "\uadfc\ubb34\uc911", MEMBER.RETIRED_DATE)) RETIRED_DATE, \u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE EXPIRE_DATE,\u000d\u000a       IF(MEMBER.GOOGLE_ID IS NULL, "", MEMBER.GOOGLE_ID) GOOGLE_ID, \u000d\u000a       IF(MEMBER.GOOGLE_PW IS NULL, "", MEMBER.GOOGLE_PW) GOOGLE_PW, \u000d\u000a       MEMBER.PHOTO\u000d\u000a  FROM MEMBER, ROLE, ORGANIZATION, CODE ROLE_NAME, CODE MEMBER_TYPE, ACCESS_MEMBER\u000d\u000a WHERE ACCESS_MEMBER.ID = MEMBER.ID\u000d\u000a   AND MEMBER.ID = ROLE.MEMBER_ID\u000d\u000a   AND ORGANIZATION.ID = ROLE.ORGANIZATION_ID\u000d\u000a   AND ROLE.ROLE_CODE = ROLE_NAME.ID\u000d\u000a   AND ACCESS_MEMBER.MEMBER_TYPE = MEMBER_TYPE.ID\u000d\u000a   AND MEMBER.USE_YN = ''Y''\u000d\u000a   AND ROLE.USE_YN = ''Y''\u000d\u000a   AND ORGANIZATION.USE_YN = ''Y''\u000d\u000a   AND (MEMBER.RETIRED_DATE > CURRENT_DATE OR MEMBER.RETIRED_DATE IS NULL OR MEMBER.RETIRED_DATE = '''')\u000d\u000a   AND MEMBER.ID = :MEMBER_ID\u000d\u000a   AND ORGANIZATION.ID = :ORGANIZATION_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_09','2013-08-12 18:05:23.855000',5,'DOCUMENT','true ','/*\u000d\u000a\uba64\ubc84\uc758 \uc815\ubcf4\uc640 \uc9c1\ucc45 \ubd80\uc11c \uc815\ubcf4 \uc870\ud68c\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID, \u000d\u000a       MEMBER.NAME, \u000d\u000a       MEMBER_TYPE.NAME MEMBER_TYPE,\u000d\u000a       ROLE_NAME.NAME ROLE_NAME, \u000d\u000a       ORGANIZATION.ID ORGANIZATION_ID, \u000d\u000a       ORGANIZATION.NAME ORGANIZATION_NAME, \u000d\u000a       ACCESS_MEMBER.MAIL, \u000d\u000a       IF(MEMBER.PHONE IS NULL, "", MEMBER.PHONE) PHONE, \u000d\u000a       IF(MEMBER.MOBILE_PHONE IS NULL, "", MEMBER.MOBILE_PHONE) MOBILE_PHONE,\u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, "", MEMBER.JOIN_DATE) JOIN_DATE, \u000d\u000a       IF(MEMBER.RETIRED_DATE = '''', ''\uadfc\ubb34\uc911'',IF(MEMBER.RETIRED_DATE IS NULL, "\uadfc\ubb34\uc911", MEMBER.RETIRED_DATE)) RETIRED_DATE, \u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE EXPIRE_DATE,\u000d\u000a       IF(MEMBER.GOOGLE_ID IS NULL, "", MEMBER.GOOGLE_ID) GOOGLE_ID, \u000d\u000a       IF(MEMBER.GOOGLE_PW IS NULL, "", MEMBER.GOOGLE_PW) GOOGLE_PW, \u000d\u000a       MEMBER.PHOTO\u000d\u000a  FROM MEMBER, ROLE, ORGANIZATION, CODE ROLE_NAME, CODE MEMBER_TYPE, ACCESS_MEMBER\u000d\u000a WHERE ACCESS_MEMBER.ID = MEMBER.ID\u000d\u000a   AND MEMBER.ID = ROLE.MEMBER_ID\u000d\u000a   AND ORGANIZATION.ID = ROLE.ORGANIZATION_ID\u000d\u000a   AND ROLE.ROLE_CODE = ROLE_NAME.ID\u000d\u000a   AND ACCESS_MEMBER.MEMBER_TYPE = MEMBER_TYPE.ID\u000d\u000a   AND MEMBER.USE_YN = ''Y''\u000d\u000a   AND ROLE.USE_YN = ''Y''\u000d\u000a   AND ORGANIZATION.USE_YN = ''Y''\u000d\u000a   AND (MEMBER.RETIRED_DATE > CURRENT_DATE OR MEMBER.RETIRED_DATE IS NULL OR MEMBER.RETIRED_DATE = '''')\u000d\u000a   AND MEMBER.ID = :MEMBER_ID\u000d\u000a   AND ORGANIZATION.ID = :ORGANIZATION_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_10','2013-09-30 13:41:11.815000',5,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_10','2013-09-30 13:42:48.337000',5,'DOCUMENT','false','/*MEMBER PROFILE*/')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_10','2013-09-30 13:54:25.174000',5,'DOCUMENT','true ','/*MEMBER PROFILE*/\u000d\u000aSELECT NAME, MAIL, PHONE, MOBILE_PHONE, PHOTO \u000d\u000a  FROM VW_MEMBER\u000d\u000a WHERE ID = :ID;')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_10','2013-09-30 14:22:54.711000',5,'DOCUMENT','true ','/*MEMBER PROFILE*/\u000d\u000aSELECT NAME, MAIL, IFNULL(PHONE, ''\uc5c6\uc74c''), IFNULL(MOBILE_PHONE, ''\uc5c6\uc74c''), PHOTO \u000d\u000a  FROM VW_MEMBER\u000d\u000a WHERE ID = :ID;')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_10','2013-09-30 14:24:26.570000',5,'DOCUMENT','true ','/*MEMBER PROFILE*/\u000d\u000aSELECT NAME, MAIL, IFNULL(PHONE, ''\uc5c6\uc74c'') PHONE, IFNULL(MOBILE_PHONE, ''\uc5c6\uc74c'') MOBILE_PHONE, PHOTO \u000d\u000a  FROM VW_MEMBER\u000d\u000a WHERE ID = :ID;')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_11','2013-09-30 13:41:29.772000',5,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_11','2013-09-30 13:42:56.805000',5,'DOCUMENT','false','/*MEMBER ORGANIZATION FOR PROFILE*/')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_11','2013-09-30 14:01:03.803000',5,'DOCUMENT','true ','/*MEMBER ORGANIZATION FOR PROFILE*/\u000d\u000aSELECT CONCAT(CONCAT(CONCAT(ORG.NAME, '' [''), CD.NAME), '']'')\u000d\u000a  FROM ORGANIZATION ORG, CODE CD, ROLE RL\u000d\u000a WHERE 1=1\u000d\u000a   AND RL.ORGANIZATION_ID = ORG.ID\u000d\u000a   AND RL.ROLE_CODE = CD.ID\u000d\u000a   AND RL.USE_YN = ''Y''\u000d\u000a   AND RL.MEMBER_ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_11','2013-09-30 14:01:16.703000',5,'DOCUMENT','true ','/*MEMBER ORGANIZATION FOR PROFILE*/\u000d\u000aSELECT CONCAT(CONCAT(CONCAT(ORG.NAME, '' [''), CD.NAME), '']'') AS ROLE\u000d\u000a  FROM ORGANIZATION ORG, CODE CD, ROLE RL\u000d\u000a WHERE 1=1\u000d\u000a   AND RL.ORGANIZATION_ID = ORG.ID\u000d\u000a   AND RL.ROLE_CODE = CD.ID\u000d\u000a   AND RL.USE_YN = ''Y''\u000d\u000a   AND RL.MEMBER_ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_12','2013-09-30 13:41:40.118000',5,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_12','2013-09-30 15:47:31.470000',5,'DOCUMENT','true ','/*MEMBER PROJECT LIST FOR PROFILE*/\u000d\u000aSELECT PRJ.ID, PRJ.TITLE\u000d\u000a  FROM PROJECT_MEMBER PMBR, PROJECT PRJ\u000d\u000a WHERE PMBR.PROJECT_ID = PRJ.ID\u000d\u000a   AND MEMBER_ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_12','2013-09-30 16:13:02.537000',5,'DOCUMENT','true ','/*MEMBER PROJECT LIST FOR PROFILE*/\u000d\u000aSELECT PRJ.ID, PRJ.TITLE, PRJ.FROM_DATE, PRJ.TO_DATE\u000d\u000a  FROM PROJECT_MEMBER PMBR, PROJECT PRJ\u000d\u000a WHERE PMBR.PROJECT_ID = PRJ.ID\u000d\u000a   AND MEMBER_ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_13','2013-09-30 21:23:15.734000',5,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.member_r_13','2013-09-30 21:27:43.593000',5,'DOCUMENT','false','SELECT ''[IF] Ki-Young Kim \uae40\uae30\uc601 attached one file to BSSOSS-112786 (SIT Deployment (R09.R25.00)):'' CONTENT\u000d\u000aFROM DUAL')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.organization_r_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.19\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Orgamization search\u000d\u000a*/\u000d\u000aSELECT CHILD.ID, \u000d\u000a       IF(CHILD.ID <> CHILD.PARENT_ID, CHILD.PARENT_ID, ''[N/A]'') AS PARENT_ID, \u000d\u000a       IF(CHILD.ID <> CHILD.PARENT_ID, PARENT.NAME, ''[N/A]'') AS PARENT_NAME, \u000d\u000a       CHILD.NAME, \u000d\u000a       CHILD.RGST_DTTM, \u000d\u000a       CHILD.MDF_DTTM\u000d\u000a  FROM ORGANIZATION PARENT, ORGANIZATION CHILD\u000d\u000a WHERE 1=1\u000d\u000a   AND CHILD.PARENT_ID = PARENT.ID\u000d\u000a   AND CHILD.USE_YN <> ''N''\u000d\u000a   AND PARENT.USE_YN <> ''N''\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND CHILD.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND CHILD.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="PARENT_ID">\u000d\u000a   AND CHILD.PARENT_ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="PARENT_NAME">\u000d\u000a   AND PARENT.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aCHILD.PARENT_ID ASC, CHILD.MDF_DTTM ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aCHILD.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PARENT_ID">\u000d\u000aCHILD.PARENT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PARENT_NAME">\u000d\u000aPARENT.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aCHILD.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aCHILD.MDF_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aCHILD.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.organization_r_02','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.19\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Orgamization list count\u000d\u000a*/\u000d\u000aSELECT COUNT(*) TOTAL_CNT, :page AS page \u000d\u000a  FROM ORGANIZATION PARENT, ORGANIZATION CHILD\u000d\u000a WHERE 1=1\u000d\u000a   AND CHILD.PARENT_ID = PARENT.ID\u000d\u000a   AND CHILD.USE_YN <> ''N''\u000d\u000a   AND PARENT.USE_YN <> ''N''\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ID">\u000d\u000a   AND CHILD.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="NAME">\u000d\u000a   AND CHILD.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="PARENT_ID">\u000d\u000a   AND CHILD.PARENT_ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="PARENT_NAME">\u000d\u000a   AND PARENT.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.organization_r_03','2013-07-22 14:47:33.848000',5,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.10\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Orgamization search for select box\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT ID, NAME\u000d\u000a  FROM ORGANIZATION\u000d\u000aORDER BY NAME ASC\u000d\u000aLIMIT 0, 30')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.role_r_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) under organization\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID, \u000d\u000a       MEMBER.NAME, \u000d\u000a       RL_CODE.NAME AS ROLE_NAME,\u000d\u000a       ACCESS_MEMBER.MAIL,\u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE,\u000d\u000a       MEMBER.PHONE, \u000d\u000a       MEMBER.MOBILE_PHONE, \u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, '''', MEMBER.JOIN_DATE) AS JOIN_DATE,\u000d\u000a       MEMBER.RETIRED_DATE, \u000d\u000a       EP_CODE.NAME AS MEMBER_TYPE, \u000d\u000a       MEMBER.GOOGLE_ID, \u000d\u000a       ROLE.RGST_DTTM, \u000d\u000a       ROLE.MDF_DTTM\u000d\u000a  FROM ROLE, MEMBER, \u000d\u000a       CODE AS EP_CODE, \u000d\u000a       CODE AS RL_CODE, \u000d\u000a       ACCESS_MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.MEMBER_TYPE = EP_CODE.ID \u000d\u000a   AND ACCESS_MEMBER.ID       = MEMBER.ID\u000d\u000a   AND ROLE.MEMBER_ID         = MEMBER.ID\u000d\u000a   AND RL_CODE.ID             = ROLE.ROLE_CODE\u000d\u000a   AND ROLE.ORGANIZATION_ID   = :ORGANIZATION_ID\u000d\u000a   AND ROLE.USE_YN            = ''Y''\u000d\u000a   AND MEMBER.USE_YN          = ''Y''\u000d\u000a   AND ACCESS_MEMBER.USE_YN   = ''Y''\u000d\u000a   AND (RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aROLE.MDF_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMEMBER.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMEMBER.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ROLE_NAME">\u000d\u000aRL_CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACCESS_MEMBER.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACCESS_MEMBER.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMEMBER.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMEMBER.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="JOIN_DATE">\u000d\u000aMEMBER.JOIN_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RETIRED_DATE">\u000d\u000aMEMBER.RETIRED_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EMPLOYMENT_TYPE">\u000d\u000aEP_CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="GOOGLE_ID">\u000d\u000aMEMBER.GOOGLE_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RGST_DTTM">\u000d\u000aROLE.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MDF_DTTM">\u000d\u000aROLE.MDF_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.role_r_02','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) under organization\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT COUNT(*) TOTAL_CNT, :page AS page \u000d\u000a  FROM ROLE, MEMBER, ACCESS_MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.ID       = MEMBER.ID\u000d\u000a   AND ROLE.MEMBER_ID         = MEMBER.ID\u000d\u000a   AND ROLE.ORGANIZATION_ID   = :ORGANIZATION_ID\u000d\u000a   AND ROLE.USE_YN            = ''Y''\u000d\u000a   AND MEMBER.USE_YN          = ''Y''\u000d\u000a   AND ACCESS_MEMBER.USE_YN   = ''Y''\u000d\u000a   AND (RETIRED_DATE IS NULL OR RETIRED_DATE = '''')')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.role_r_03','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) which isn''t registered on access list of a specific menu\u000d\u000a*/\u000d\u000aSELECT DISTINCT ROLE.MEMBER_ID    AS MEMBER_ID,\u000d\u000a                MEMBER.NAME       AS MEMBER_NAME,\u000d\u000a                ORGANIZATION.NAME AS ORGANIZATION_NAME,\u000d\u000a                ORGANIZATION.ID   AS ORGANIZATION_ID,\u000d\u000a                CODE_RC.NAME      AS ROLE_NAME\u000d\u000a  FROM ROLE, MEMBER, ORGANIZATION, CODE CODE_RC,\u000d\u000a       (SELECT DISTINCT B.ORGANIZATION_ID, B.MEMBER_ID\u000d\u000a          FROM (SELECT MENU.ID, LEVEL, NAME\u000d\u000a                  FROM (SELECT @id := MENU_HIERARCHY() AS ID, \u000d\u000a                               @level AS LEVEL\u000d\u000a                          FROM (SELECT @start_with := :MENU_ID, \u000d\u000a                                       @id := @start_with,\u000d\u000a                                       @level := 0\u000d\u000a                               )VARS, MENU\u000d\u000a                        WHERE @id IS NOT NULL\u000d\u000a                       ) HIERARCHY\u000d\u000a                       JOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000a                 WHERE MENU.LINK_VALUE != '''' AND MENU.LINK_VALUE IS NOT NULL\u000d\u000a               ) A ,\u000d\u000a               (SELECT BASE.ORGANIZATION_ID, BASE.MEMBER_ID, BASE.MENU_ID\u000d\u000a                  FROM (SELECT ROLE.ORGANIZATION_ID, ROLE.MEMBER_ID, ACCESS_LIST.MENU_ID\u000d\u000a                          FROM ROLE,ACCESS_LIST\u000d\u000a                         WHERE ROLE.USE_YN = ''Y''\u000d\u000a                       ) BASE \u000d\u000a                       LEFT OUTER JOIN\u000d\u000a                       (SELECT ACCESS_LIST.ORGANIZATION_ID, ACCESS_LIST.MEMBER_ID, ACCESS_LIST.MENU_ID, MENU.ID\u000d\u000a                          FROM MENU\u000d\u000a                               LEFT OUTER JOIN \u000d\u000a                               (SELECT ROLE.ORGANIZATION_ID, ROLE.MEMBER_ID, ACCESS_LIST.MENU_ID\u000d\u000a                                  FROM ROLE\u000d\u000a                                       LEFT OUTER JOIN ACCESS_LIST\u000d\u000a                                       ON ROLE.MEMBER_ID        = ACCESS_LIST.ROLE_MEMBER_ID\u000d\u000a                                       AND ROLE.ORGANIZATION_ID = ACCESS_LIST.ORGANIZATION_ID\u000d\u000a                                 WHERE ROLE.USE_YN = ''Y''\u000d\u000a                               ) ACCESS_LIST\u000d\u000a                               ON ACCESS_LIST.MENU_ID = MENU.ID\u000d\u000a                         WHERE MENU.LINK_VALUE != '''' AND MENU.LINK_VALUE IS NOT NULL\u000d\u000a                       ) CPTR \u000d\u000a                        ON BASE.ORGANIZATION_ID  = CPTR.ORGANIZATION_ID\u000d\u000a                       AND BASE.MEMBER_ID       = CPTR.MEMBER_ID\u000d\u000a                       AND BASE.MENU_ID         = CPTR.MENU_ID\u000d\u000a                 WHERE CPTR.MEMBER_ID IS NULL\u000d\u000a                 UNION ALL\u000d\u000a                SELECT BASE.ORGANIZATION_ID, BASE.MEMBER_ID, CPTR.MENU_ID\u000d\u000a                  FROM (SELECT ROLE.ORGANIZATION_ID, ROLE.MEMBER_ID, ACCESS_LIST.MENU_ID\u000d\u000a                          FROM ROLE,ACCESS_LIST\u000d\u000a                         WHERE ROLE.USE_YN = ''Y''\u000d\u000a                       ) BASE \u000d\u000a                       RIGHT OUTER JOIN\u000d\u000a                       (SELECT ACCESS_LIST.ORGANIZATION_ID, ACCESS_LIST.MEMBER_ID, MENU.ID AS MENU_ID\u000d\u000a                          FROM MENU\u000d\u000a                               LEFT OUTER JOIN \u000d\u000a                               (SELECT ROLE.ORGANIZATION_ID, ROLE.MEMBER_ID, ACCESS_LIST.MENU_ID\u000d\u000a                                  FROM ROLE\u000d\u000a                                       LEFT OUTER JOIN ACCESS_LIST\u000d\u000a                                       ON ROLE.MEMBER_ID        = ACCESS_LIST.ROLE_MEMBER_ID\u000d\u000a                                       AND ROLE.ORGANIZATION_ID = ACCESS_LIST.ORGANIZATION_ID\u000d\u000a                                 WHERE ROLE.USE_YN = ''Y''\u000d\u000a                               ) ACCESS_LIST\u000d\u000a                               ON ACCESS_LIST.MENU_ID = MENU.ID\u000d\u000a                         WHERE MENU.LINK_VALUE != '''' AND MENU.LINK_VALUE IS NOT NULL\u000d\u000a                       ) CPTR \u000d\u000a                        ON BASE.ORGANIZATION_ID = CPTR.ORGANIZATION_ID\u000d\u000a                       AND BASE.MEMBER_ID       = CPTR.MEMBER_ID\u000d\u000a                       AND BASE.MENU_ID         = CPTR.MENU_ID\u000d\u000a                     WHERE CPTR.MEMBER_ID IS NULL\u000d\u000a               ) B\u000d\u000a         WHERE A.ID = B.MENU_ID\u000d\u000a       ) BASE\u000d\u000a WHERE ROLE.MEMBER_ID       = IF(BASE.MEMBER_ID IS NULL, ROLE.MEMBER_ID, BASE.MEMBER_ID)\u000d\u000a   AND ROLE.ORGANIZATION_ID = IF(BASE.ORGANIZATION_ID IS NULL, ROLE.ORGANIZATION_ID, BASE.ORGANIZATION_ID)\u000d\u000a   AND ROLE.ORGANIZATION_ID = ORGANIZATION.ID\u000d\u000a   AND ROLE.MEMBER_ID       = MEMBER.ID\u000d\u000a   AND CODE_RC.ID           = ROLE.ROLE_CODE\u000d\u000a   AND ORGANIZATION.USE_YN  = ''Y''\u000d\u000a   AND ROLE.USE_YN          = ''Y''\u000d\u000a   AND MEMBER.USE_YN        = ''Y''\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="MEMBER_ID">\u000d\u000a   AND ROLE.MEMBER_ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="MEMBER_NAME">\u000d\u000a   AND MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_ID">\u000d\u000a   AND ORGANIZATION.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_NAME">\u000d\u000a   AND ORGANIZATION.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aORGANIZATION.NAME ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_ID">\u000d\u000aROLE.MEMBER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_NAME">\u000d\u000aMEMBER.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ORGANIZATION_NAME">\u000d\u000aORGANIZATION.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ROLE_NAME">\u000d\u000aCODE_RC.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.select.role_r_04','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) which isn''t registered on access list of a specific menu\u000d\u000a*/\u000d\u000aSELECT DISTINCT COUNT(*) TOTAL_CNT, :page AS page\u000d\u000a  FROM ROLE, MEMBER, ORGANIZATION, CODE CODE_RC,\u000d\u000a       (SELECT DISTINCT B.ORGANIZATION_ID, B.MEMBER_ID\u000d\u000a          FROM (SELECT MENU.ID, LEVEL, NAME\u000d\u000a                  FROM (SELECT @id := MENU_HIERARCHY() AS ID, \u000d\u000a                               @level AS LEVEL\u000d\u000a                          FROM (SELECT @start_with := :MENU_ID, \u000d\u000a                                       @id := @start_with,\u000d\u000a                                       @level := 0\u000d\u000a                               )VARS, MENU\u000d\u000a                        WHERE @id IS NOT NULL\u000d\u000a                       ) HIERARCHY\u000d\u000a                       JOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000a                 WHERE MENU.LINK_VALUE != '''' AND MENU.LINK_VALUE IS NOT NULL\u000d\u000a               ) A ,\u000d\u000a               (SELECT BASE.ORGANIZATION_ID, BASE.MEMBER_ID, BASE.MENU_ID\u000d\u000a                  FROM (SELECT ROLE.ORGANIZATION_ID, ROLE.MEMBER_ID, ACCESS_LIST.MENU_ID\u000d\u000a                          FROM ROLE,ACCESS_LIST\u000d\u000a                         WHERE ROLE.USE_YN = ''Y''\u000d\u000a                       ) BASE \u000d\u000a                       LEFT OUTER JOIN\u000d\u000a                       (SELECT ACCESS_LIST.ORGANIZATION_ID, ACCESS_LIST.MEMBER_ID, ACCESS_LIST.MENU_ID, MENU.ID\u000d\u000a                          FROM MENU\u000d\u000a                               LEFT OUTER JOIN \u000d\u000a                               (SELECT ROLE.ORGANIZATION_ID, ROLE.MEMBER_ID, ACCESS_LIST.MENU_ID\u000d\u000a                                  FROM ROLE\u000d\u000a                                       LEFT OUTER JOIN ACCESS_LIST\u000d\u000a                                       ON ROLE.MEMBER_ID        = ACCESS_LIST.ROLE_MEMBER_ID\u000d\u000a                                       AND ROLE.ORGANIZATION_ID = ACCESS_LIST.ORGANIZATION_ID\u000d\u000a                                 WHERE ROLE.USE_YN = ''Y''\u000d\u000a                               ) ACCESS_LIST\u000d\u000a                               ON ACCESS_LIST.MENU_ID = MENU.ID\u000d\u000a                         WHERE MENU.LINK_VALUE != '''' AND MENU.LINK_VALUE IS NOT NULL\u000d\u000a                       ) CPTR \u000d\u000a                        ON BASE.ORGANIZATION_ID  = CPTR.ORGANIZATION_ID\u000d\u000a                       AND BASE.MEMBER_ID       = CPTR.MEMBER_ID\u000d\u000a                       AND BASE.MENU_ID         = CPTR.MENU_ID\u000d\u000a                 WHERE CPTR.MEMBER_ID IS NULL\u000d\u000a                 UNION ALL\u000d\u000a                SELECT BASE.ORGANIZATION_ID, BASE.MEMBER_ID, CPTR.MENU_ID\u000d\u000a                  FROM (SELECT ROLE.ORGANIZATION_ID, ROLE.MEMBER_ID, ACCESS_LIST.MENU_ID\u000d\u000a                          FROM ROLE,ACCESS_LIST\u000d\u000a                         WHERE ROLE.USE_YN = ''Y''\u000d\u000a                       ) BASE \u000d\u000a                       RIGHT OUTER JOIN\u000d\u000a                       (SELECT ACCESS_LIST.ORGANIZATION_ID, ACCESS_LIST.MEMBER_ID, MENU.ID AS MENU_ID\u000d\u000a                          FROM MENU\u000d\u000a                               LEFT OUTER JOIN \u000d\u000a                               (SELECT ROLE.ORGANIZATION_ID, ROLE.MEMBER_ID, ACCESS_LIST.MENU_ID\u000d\u000a                                  FROM ROLE\u000d\u000a                                       LEFT OUTER JOIN ACCESS_LIST\u000d\u000a                                       ON ROLE.MEMBER_ID        = ACCESS_LIST.ROLE_MEMBER_ID\u000d\u000a                                       AND ROLE.ORGANIZATION_ID = ACCESS_LIST.ORGANIZATION_ID\u000d\u000a                                 WHERE ROLE.USE_YN = ''Y''\u000d\u000a                               ) ACCESS_LIST\u000d\u000a                               ON ACCESS_LIST.MENU_ID = MENU.ID\u000d\u000a                         WHERE MENU.LINK_VALUE != '''' AND MENU.LINK_VALUE IS NOT NULL\u000d\u000a                       ) CPTR \u000d\u000a                        ON BASE.ORGANIZATION_ID = CPTR.ORGANIZATION_ID\u000d\u000a                       AND BASE.MEMBER_ID       = CPTR.MEMBER_ID\u000d\u000a                       AND BASE.MENU_ID         = CPTR.MENU_ID\u000d\u000a                     WHERE CPTR.MEMBER_ID IS NULL\u000d\u000a               ) B\u000d\u000a         WHERE A.ID = B.MENU_ID\u000d\u000a       ) BASE\u000d\u000a WHERE ROLE.MEMBER_ID       = IF(BASE.MEMBER_ID IS NULL, ROLE.MEMBER_ID, BASE.MEMBER_ID)\u000d\u000a   AND ROLE.ORGANIZATION_ID = IF(BASE.ORGANIZATION_ID IS NULL, ROLE.ORGANIZATION_ID, BASE.ORGANIZATION_ID)\u000d\u000a   AND ROLE.ORGANIZATION_ID = ORGANIZATION.ID\u000d\u000a   AND ROLE.MEMBER_ID       = MEMBER.ID\u000d\u000a   AND CODE_RC.ID           = ROLE.ROLE_CODE\u000d\u000a   AND ORGANIZATION.USE_YN  = ''Y''\u000d\u000a   AND ROLE.USE_YN          = ''Y''\u000d\u000a   AND MEMBER.USE_YN        = ''Y''\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="MEMBER_ID">\u000d\u000a   AND ROLE.MEMBER_ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="MEMBER_NAME">\u000d\u000a   AND MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_ID">\u000d\u000a   AND ORGANIZATION.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCH_TYPE" operator="==" value="ORGANIZATION_NAME">\u000d\u000a   AND ORGANIZATION.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.update','2013-07-22 14:47:33.848000',4,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.update.access_list_u_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.16\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Modify access list\u000d\u000a*/\u000d\u000a\u000d\u000aUPDATE ACCESS_LIST\u000d\u000a   SET ACCESS_LEVEL    = :ACCESS_LEVEL\u000d\u000a WHERE MENU_ID         = :MENU_ID\u000d\u000a   AND ORGANIZATION_ID = :ORGANIZATION_ID\u000d\u000a   AND ROLE_MEMBER_ID  = :ROLE_MEMBER_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.update.access_member_u_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Modify access member.\u000d\u000a*/\u000d\u000aUPDATE ACCESS_MEMBER \u000d\u000a   SET\u000d\u000a<dynamic parameter=":PWD" operator="!=" value="">\u000d\u000a       PWD = MD5(:PWD),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MAIL" operator="!=" value="">\u000d\u000a       MAIL = :MAIL,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MEMBER_TYPE" operator="!=" value="">\u000d\u000a       MEMBER_TYPE = :MEMBER_TYPE,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXPIRE_DATE" operator="!=" value="">\u000d\u000a       EXPIRE_DATE = STR_TO_DATE(:EXPIRE_DATE, ''%Y-%m-%d''),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_YN" operator="!=" value="">\u000d\u000a       USE_YN = :USE_YN,\u000d\u000a</dynamic>\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.update.init_password_u_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.10\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Initialize password\u000d\u000a*/\u000d\u000aUPDATE ACCESS_MEMBER\u000d\u000a  SET PWD = MD5(''new1234!'')\u000d\u000aWHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.update.lecturer_u_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Modify lecturer information.\u000d\u000a*/\u000d\u000aUPDATE LECTURER\u000d\u000a   SET \u000d\u000a<dynamic parameter=":NAME" operator="!=" value="">\u000d\u000a       NAME = :NAME,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PHONE" operator="!=" value="">\u000d\u000a       PHONE = :PHONE,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MOBILE_PHONE" operator="!=" value="">\u000d\u000a       MOBILE_PHONE = :MOBILE_PHONE,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":FAX" operator="!=" value="">\u000d\u000a       FAX = :FAX, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":WEB_SITE" operator="!=" value="">\u000d\u000a       WEB_SITE = :WEB_SITE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":ZIP_CODE" operator="!=" value="">\u000d\u000a       ZIP_CODE = :ZIP_CODE,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":ADDR1" operator="!=" value="">\u000d\u000a       ADDR1 = :ADDR1, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":ADDR2" operator="!=" value="">\u000d\u000a       ADDR2 = :ADDR2, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":DEGREE" operator="!=" value="">\u000d\u000a       DEGREE = :DEGREE, /*\ud559\uc704*/\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":ORGANIZATION" operator="!=" value="">\u000d\u000a       ORGANIZATION = :ORGANIZATION, /*\uc18c\uc18d*/\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MAJOR" operator="!=" value="">\u000d\u000a       MAJOR = :MAJOR, /*\uc804\uacf5*/\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":CAREER" operator="!=" value="">\u000d\u000a       CAREER = :CAREER, /*\uacbd\ub825*/\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SPECIALISM" operator="!=" value="">\u000d\u000a       SPECIALISM = :SPECIALISM, /*\uc804\ubb38\ubd84\uc57c*/\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":EXP_NOTE" operator="!=" value="">\u000d\u000a       EXP_NOTE = :EXP_NOTE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PHOTO" operator="!=" value="null">\u000d\u000a       PHOTO = :PHOTO,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":GOOGLE_ID" operator="!=" value="">\u000d\u000a       GOOGLE_ID = :GOOGLE_ID,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":GOOGLE_PW" operator="!=" value="">\u000d\u000a       GOOGLE_PW = HEX(AES_ENCRYPT(:GOOGLE_PW, MD5(''#!%''))),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_YN" operator="!=" value="">\u000d\u000a       USE_YN = :USE_YN,\u000d\u000a</dynamic>\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.update.member_u_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.09\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Modify member information.\u000d\u000a*/\u000d\u000aUPDATE MEMBER\u000d\u000a   SET \u000d\u000a<dynamic parameter=":NAME" operator="!=" value="">\u000d\u000a       NAME = :NAME,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PHONE" operator="!=" value="">\u000d\u000a       PHONE = :PHONE,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MOBILE_PHONE" operator="!=" value="">\u000d\u000a       MOBILE_PHONE = :MOBILE_PHONE,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PHOTO" operator="!=" value="null">\u000d\u000a       PHOTO = :PHOTO,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":JOIN_DATE" operator="!=" value="">\u000d\u000a       JOIN_DATE = STR_TO_DATE(:JOIN_DATE, ''%Y-%m-%d''),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":RETIRE_DATE" operator="!=" value="">\u000d\u000a       RETIRE_DATE = STR_TO_DATE(:RETIRE_DATE, ''%Y-%m-%d''),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":GOOGLE_ID" operator="!=" value="">\u000d\u000a       GOOGLE_ID = :GOOGLE_ID,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":GOOGLE_PW" operator="!=" value="">\u000d\u000a       GOOGLE_PW = HEX(AES_ENCRYPT(:GOOGLE_PW, MD5(''#!%''))),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_YN" operator="!=" value="">\u000d\u000a       USE_YN = :USE_YN,\u000d\u000a</dynamic>\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.update.member_u_02','2013-09-30 20:42:37.113000',5,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.update.member_u_02','2013-09-30 20:44:21.616000',5,'DOCUMENT','true ','UPDATE ACCESS_MEMBER\u000d\u000a  SET PWD = MD5(:NEW_PWD)\u000d\u000aWHERE ID = :ID\u000d\u000a  AND PWD = MD5(:CUR_PWD)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.update.member_u_02','2013-09-30 21:07:21.497000',5,'DOCUMENT','true ','UPDATE ACCESS_MEMBER\u000d\u000a  SET PWD = MD5(:NEW_PWD)\u000d\u000aWHERE ID = :ID\u000d\u000a  AND ID = :LOGIN_MEMBER\u000d\u000a  AND PWD = MD5(:CUR_PWD)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.update.organization_u_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.04\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Update organization\u000d\u000a*/\u000d\u000a\u000d\u000aUPDATE ORGANIZATION AS ORG\u000d\u000aSET\u000d\u000a<dynamic parameter=":PARENT_ID" operator="!=" value="">\u000d\u000aORG.PARENT_ID = :PARENT_ID,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":NAME" operator="!=" value="">\u000d\u000aORG.NAME = :NAME,\u000d\u000a</dynamic>\u000d\u000aORG.MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.update.organization_u_02','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.04\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Disable organization\u000d\u000a\u0009:TEST_VALUE\u000d\u000a*/\u000d\u000a\u000d\u000aUPDATE ORGANIZATION AS ORG,\u000d\u000a       (\u000d\u000a       SELECT ORGANIZATION.ID\u000d\u000a        FROM(\u000d\u000a             SELECT @id := ORGANIZATION_HIERARCHY() AS ID, \u000d\u000a                    @level AS LEVEL\u000d\u000a                    FROM (\u000d\u000a                          SELECT @start_with := :ID, \u000d\u000a                                 @id := @start_with,\u000d\u000a                                 @level := 0\u000d\u000a                         )VARS, MENU\u000d\u000a                   WHERE @id IS NOT NULL\u000d\u000a            ) HIERARCHY\u000d\u000a            JOIN ORGANIZATION ON ORGANIZATION.ID = HIERARCHY.ID\u000d\u000a      WHERE ORGANIZATION.USE_YN = ''Y''\u000d\u000a       ) AS HRY\u000d\u000aSET ORG.USE_YN = ''N'',\u000d\u000a    ORG.MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE ORG.ID = HRY.ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.member.update.role_u_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.08\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Modify role.\u000d\u000a*/\u000d\u000a\u000d\u000aUPDATE ROLE \u000d\u000a   SET \u000d\u000a<dynamic parameter=":ROLE_CODE" operator="!=" value="">\u000d\u000a       ROLE_CODE = :ROLE_CODE,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_YN" operator="!=" value="">\u000d\u000a       USE_YN = :USE_YN,\u000d\u000a</dynamic>\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE ORGANIZATION_ID = :ORGANIZATION_ID\u000d\u000a   AND MEMBER_ID       = :MEMBER_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.menu','2013-07-22 14:47:33.848000',3,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.menu.delete','2013-07-22 14:47:33.848000',4,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.menu.delete.menu_d_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.18\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : \uc120\ud0dd \uba54\ub274, \ud558\uc704 \uba54\ub274\uc640 \uc5f0\uad00\ub41c \ubaa8\ub4e0 \uc811\uadfc\uc815\ubcf4 \uc0ad\uc81c\u000d\u000a*/\u000d\u000aDELETE ACC\u000d\u000a  FROM ACCESS_LIST ACC,\u000d\u000a       (SELECT MENU.ID, LEVEL\u000d\u000a          FROM(SELECT @id := MENU_HIERARCHY() AS ID, \u000d\u000a                      @level AS LEVEL\u000d\u000a                 FROM (SELECT @start_with := :ID, \u000d\u000a                              @id := @start_with,\u000d\u000a                              @level := 0\u000d\u000a                      )VARS, MENU\u000d\u000a                WHERE @id IS NOT NULL\u000d\u000a               ) HIERARCHY\u000d\u000a               JOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000a       ) M\u000d\u000aWHERE ACC.MENU_ID = M.ID\u000d\u000a\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.menu.delete.menu_d_02','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.18\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : \uc120\ud0dd \uba54\ub274, \ud558\uc704 \uba54\ub274 \ubaa8\ub450 \uc0ad\uc81c. foreign key \uc81c\uc57d \ub54c\ubb38\uc5d0,\u000d\u000a                  common.free_fk, common.set_fk \uac19\uc774 \uc2e4\ud589 \ud574\uc57c \ub428.\u000d\u000a*/\u000d\u000aDELETE M1\u000d\u000a  FROM MENU M1,\u000d\u000a       (SELECT MENU.ID, LEVEL\u000d\u000a          FROM(SELECT @id := MENU_HIERARCHY() AS ID, \u000d\u000a                      @level AS LEVEL\u000d\u000a                 FROM (SELECT @start_with := :ID, \u000d\u000a                              @id := @start_with,\u000d\u000a                              @level := 0\u000d\u000a                      )VARS, MENU\u000d\u000a                WHERE @id IS NOT NULL\u000d\u000a               ) HIERARCHY\u000d\u000a               JOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000a       ) M2\u000d\u000aWHERE M1.ID = M2.ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.menu.insert','2013-07-22 14:47:33.848000',4,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.menu.insert.menu_i_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.10\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Insert new menu\u000d\u000a*/\u000d\u000a\u000d\u000aINSERT INTO MENU \u000d\u000a\u0009\u0009(\u000d\u000a        ID, \u000d\u000a        PARENT_ID, \u000d\u000a        NAME, \u000d\u000a        MENU_ORDER,\u000d\u000a<dynamic parameter=":IMAGE" operator="!=" value="null">\u000d\u000a        IMAGE, \u000d\u000a</dynamic>\u000d\u000a        LINK_VALUE, \u000d\u000a        LECTURE_ACCESS_YN, \u000d\u000a        ACCESS_ALL_YN, \u000d\u000a        RGST_DTTM, \u000d\u000a        RGST_MEMBER_ID, \u000d\u000a        MDF_DTTM, \u000d\u000a        MDF_MEMBER_ID\u000d\u000a        ) \u000d\u000a<dynamic parameter=":PARENT_ID" operator="==" value = "">\u000d\u000aSELECT  :ID                AS ID, \u000d\u000a        :ID                AS PARENT_ID, \u000d\u000a        :NAME              AS NAME, \u000d\u000a        IF(MAX(MENU_ORDER) IS NULL ,  0, MAX(MENU_ORDER)+1)  AS MENU_ORDER,\u000d\u000a<dynamic parameter=":IMAGE" operator="!=" value="null">\u000d\u000a        :IMAGE             AS IMAGE, \u000d\u000a</dynamic>\u000d\u000a        :LINK_VALUE        AS LINK_VALUE, \u000d\u000a        :LECTURE_ACCESS_YN AS LECTURE_ACCESS_YN, \u000d\u000a        :ACCESS_ALL_YN     AS ACCESS_ALL_YN, \u000d\u000a        CURRENT_TIMESTAMP, \u000d\u000a        :LOGIN_MEMBER      AS RGST_MEMBER, \u000d\u000a        CURRENT_TIMESTAMP, \u000d\u000a        :LOGIN_MEMBER      AS MDF_MEMBER\u000d\u000a   FROM MENU\u000d\u000a  WHERE PARENT_ID = ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PARENT_ID" operator="!=" value="">\u000d\u000aSELECT  :ID                AS ID, \u000d\u000a        :PARENT_ID         AS PARENT_ID, \u000d\u000a        :NAME              AS NAME, \u000d\u000a        IF(MAX(MENU_ORDER) IS NULL ,  0, MAX(MENU_ORDER)+1)  AS MENU_ORDER,\u000d\u000a<<dynamic parameter=":IMAGE" operator="!=" value="null">\u000d\u000a        :IMAGE             AS IMAGE, \u000d\u000a</dynamic>\u000d\u000a        :LINK_VALUE        AS LINK_VALUE, \u000d\u000a        :LECTURE_ACCESS_YN AS LECTURE_ACCESS_YN, \u000d\u000a        :ACCESS_ALL_YN     AS ACCESS_ALL_YN, \u000d\u000a        CURRENT_TIMESTAMP, \u000d\u000a        :LOGIN_MEMBER      AS RGST_MEMBER, \u000d\u000a        CURRENT_TIMESTAMP, \u000d\u000a        :LOGIN_MEMBER      AS MDF_MEMBER\u000d\u000a   FROM MENU\u000d\u000aWHERE PARENT_ID = :PARENT_ID\u000d\u000a  AND PARENT_ID <> ID\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.menu.insert.menu_i_01','2013-07-22 17:44:40.535000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.10\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Insert new menu\u000d\u000a*/\u000d\u000a\u000d\u000aINSERT INTO MENU \u000d\u000a\u0009\u0009(\u000d\u000a        ID, \u000d\u000a        PARENT_ID, \u000d\u000a        NAME, \u000d\u000a        MENU_ORDER,\u000d\u000a<dynamic parameter=":IMAGE" operator="!=" value="null">\u000d\u000a        IMAGE, \u000d\u000a</dynamic>\u000d\u000a        LINK_VALUE, \u000d\u000a        ACCESS_ALL_YN, \u000d\u000a        RGST_DTTM, \u000d\u000a        RGST_MEMBER_ID, \u000d\u000a        MDF_DTTM, \u000d\u000a        MDF_MEMBER_ID\u000d\u000a        ) \u000d\u000a<dynamic parameter=":PARENT_ID" operator="==" value = "">\u000d\u000aSELECT  :ID                AS ID, \u000d\u000a        :ID                AS PARENT_ID, \u000d\u000a        :NAME              AS NAME, \u000d\u000a        IF(MAX(MENU_ORDER) IS NULL ,  0, MAX(MENU_ORDER)+1)  AS MENU_ORDER,\u000d\u000a<dynamic parameter=":IMAGE" operator="!=" value="null">\u000d\u000a        :IMAGE             AS IMAGE, \u000d\u000a</dynamic>\u000d\u000a        :LINK_VALUE        AS LINK_VALUE, \u000d\u000a        :ACCESS_ALL_YN     AS ACCESS_ALL_YN, \u000d\u000a        CURRENT_TIMESTAMP, \u000d\u000a        :LOGIN_MEMBER      AS RGST_MEMBER, \u000d\u000a        CURRENT_TIMESTAMP, \u000d\u000a        :LOGIN_MEMBER      AS MDF_MEMBER\u000d\u000a   FROM MENU\u000d\u000a  WHERE PARENT_ID = ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PARENT_ID" operator="!=" value="">\u000d\u000aSELECT  :ID                AS ID, \u000d\u000a        :PARENT_ID         AS PARENT_ID, \u000d\u000a        :NAME              AS NAME, \u000d\u000a        IF(MAX(MENU_ORDER) IS NULL ,  0, MAX(MENU_ORDER)+1)  AS MENU_ORDER,\u000d\u000a<<dynamic parameter=":IMAGE" operator="!=" value="null">\u000d\u000a        :IMAGE             AS IMAGE, \u000d\u000a</dynamic>\u000d\u000a        :LINK_VALUE        AS LINK_VALUE, \u000d\u000a        :ACCESS_ALL_YN     AS ACCESS_ALL_YN, \u000d\u000a        CURRENT_TIMESTAMP, \u000d\u000a        :LOGIN_MEMBER      AS RGST_MEMBER, \u000d\u000a        CURRENT_TIMESTAMP, \u000d\u000a        :LOGIN_MEMBER      AS MDF_MEMBER\u000d\u000a   FROM MENU\u000d\u000aWHERE PARENT_ID = :PARENT_ID\u000d\u000a  AND PARENT_ID <> ID\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.menu.select','2013-07-22 14:47:33.848000',4,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.menu.select.menu_r_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.26\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Retrieve top menu list for login\u000d\u000a*/\u000d\u000aSELECT ID, NAME, LINK_VALUE, IMAGE\u000d\u000a  FROM MENU\u000d\u000a WHERE ID = PARENT_ID\u000d\u000aORDER BY MENU_ORDER ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.menu.select.menu_r_02','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.26\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Retrieve top menu list for login\u000d\u000a*/\u000d\u000aSELECT ID, NAME, LINK_VALUE, IMAGE\u000d\u000a  FROM MENU\u000d\u000a WHERE PARENT_ID = :PARENT_ID\u000d\u000a   AND ID <> PARENT_ID\u000d\u000aORDER BY MENU_ORDER ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.menu.select.menu_r_03','2013-07-22 14:47:33.848000',5,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.06\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Retrieve top menu list for management\u000d\u000a*/\u000d\u000aSELECT ID, \u000d\u000a       PARENT_ID, \u000d\u000a       NAME, \u000d\u000a       MENU_ORDER, \u000d\u000a       LINK_VALUE, \u000d\u000a       IF(IMAGE IS NULL, ''N'', ''Y'') AS IMAGE,\u000d\u000a       IF(LECTURE_ACCESS_YN IS NULL, ''N'', LECTURE_ACCESS_YN) AS LECTURE_ACCESS_YN, \u000d\u000a       IF(ACCESS_ALL_YN IS NULL, ''N'', ACCESS_ALL_YN) AS ACCESS_ALL_YN, \u000d\u000a       RGST_DTTM,\u000d\u000a       RGST_MEMBER_ID,\u000d\u000a       MDF_DTTM,\u000d\u000a       MDF_MEMBER_ID\u000d\u000a  FROM MENU\u000d\u000a WHERE ID = PARENT_ID\u000d\u000aORDER BY MENU_ORDER ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.menu.select.menu_r_03','2013-07-22 17:42:58.027000',5,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.06\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Retrieve top menu list for management\u000d\u000a*/\u000d\u000aSELECT ID, \u000d\u000a       PARENT_ID, \u000d\u000a       NAME, \u000d\u000a       MENU_ORDER, \u000d\u000a       LINK_VALUE, \u000d\u000a       IF(IMAGE IS NULL, ''N'', ''Y'') AS IMAGE,\u000d\u000a       IF(ACCESS_ALL_YN IS NULL, ''N'', ACCESS_ALL_YN) AS ACCESS_ALL_YN, \u000d\u000a       RGST_DTTM,\u000d\u000a       RGST_MEMBER_ID,\u000d\u000a       MDF_DTTM,\u000d\u000a       MDF_MEMBER_ID\u000d\u000a  FROM MENU\u000d\u000a WHERE ID = PARENT_ID\u000d\u000aORDER BY MENU_ORDER ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.menu.select.menu_r_04','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.26\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Retrieve top menu list for management\u000d\u000a*/\u000d\u000aSELECT CHILD.ID, \u000d\u000a       CHILD.PARENT_ID, \u000d\u000a       PARENT.NAME AS PARENT_NAME,\u000d\u000a       CHILD.NAME, \u000d\u000a       IF(CHILD.IMAGE IS NULL, ''N'', ''Y'') AS IMAGE,\u000d\u000a       CHILD.MENU_ORDER, \u000d\u000a       CHILD.LINK_VALUE, \u000d\u000a       IF(CHILD.LECTURE_ACCESS_YN IS NULL, ''N'', CHILD.LECTURE_ACCESS_YN) AS LECTURE_ACCESS_YN, \u000d\u000a       IF(CHILD.ACCESS_ALL_YN IS NULL, ''N'', CHILD.ACCESS_ALL_YN) AS ACCESS_ALL_YN, \u000d\u000a       CHILD.RGST_DTTM,\u000d\u000a       CHILD.RGST_MEMBER_ID,\u000d\u000a       CHILD.MDF_DTTM,\u000d\u000a       CHILD.MDF_MEMBER_ID\u000d\u000a  FROM MENU AS PARENT, MENU AS CHILD\u000d\u000a WHERE CHILD.PARENT_ID = :PARENT_ID\u000d\u000a   AND CHILD.ID <> CHILD.PARENT_ID\u000d\u000a   AND CHILD.PARENT_ID = PARENT.ID\u000d\u000aORDER BY CHILD.MENU_ORDER ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.menu.select.menu_r_04','2013-07-22 17:46:26.422000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.26\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Retrieve top menu list for management\u000d\u000a*/\u000d\u000aSELECT CHILD.ID, \u000d\u000a       CHILD.PARENT_ID, \u000d\u000a       PARENT.NAME AS PARENT_NAME,\u000d\u000a       CHILD.NAME, \u000d\u000a       IF(CHILD.IMAGE IS NULL, ''N'', ''Y'') AS IMAGE,\u000d\u000a       CHILD.MENU_ORDER, \u000d\u000a       CHILD.LINK_VALUE, \u000d\u000a       IF(CHILD.ACCESS_ALL_YN IS NULL, ''N'', CHILD.ACCESS_ALL_YN) AS ACCESS_ALL_YN, \u000d\u000a       CHILD.RGST_DTTM,\u000d\u000a       CHILD.RGST_MEMBER_ID,\u000d\u000a       CHILD.MDF_DTTM,\u000d\u000a       CHILD.MDF_MEMBER_ID\u000d\u000a  FROM MENU AS PARENT, MENU AS CHILD\u000d\u000a WHERE CHILD.PARENT_ID = :PARENT_ID\u000d\u000a   AND CHILD.ID <> CHILD.PARENT_ID\u000d\u000a   AND CHILD.PARENT_ID = PARENT.ID\u000d\u000aORDER BY CHILD.MENU_ORDER ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.menu.select.menu_r_05','2013-08-12 09:04:36.072000',5,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.12\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Retrieve hierarchy menu list for login\u000d\u000a\u000d\u000a    2012.12.26  : SimpleQuery.hierarchySelect() -> SimpleQuery.select() \ub85c \ubcc0\ud658 \ubc0f SQL \ubcc0\uacbd\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT MENU.ID, \u000d\u000a       MENU.PARENT_ID, \u000d\u000a       LEVEL, \u000d\u000a       IMAGE,\u000d\u000a       NAME, \u000d\u000a       MENU.LINK_VALUE, \u000d\u000a       MENU_ORDER\u000d\u000a  FROM(\u000d\u000a       SELECT @idx := @idx+1 IDX, id := MENU_HIERARCHY_ALL() AS ID, \u000d\u000a              @level AS LEVEL, PARENT_ID\u000d\u000a         FROM (\u000d\u000a               SELECT @level := 0,\u000d\u000a                      @idx :=0\u000d\u000a              )VARS, MENU\u000d\u000a        WHERE ID IS NOT NULL\u000d\u000a      ) HIERARCHY\u000d\u000aJOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000aORDER BY HIERARCHY.IDX\u000d\u000a\u000d\u000a/* SimpleQuery.hierarchySelect() \uc0ac\uc6a9\uc2dc \uc544\ub798 SQL \uc0ac\uc6a9\u000d\u000a   SELECT ID, NAME, LINK_VALUE\u000d\u000a     FROM MENU\u000d\u000a    WHERE 1=1\u000d\u000a<dynamic parameter=":RSV_ISTOP" operator="==" value="Y">\u000d\u000a      AND ID = PARENT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":RSV_ISTOP" operator="==" value="N">\u000d\u000a      AND ID <> PARENT_ID\u000d\u000a      AND PARENT_ID = :PARENT_ID\u000d\u000a</dynamic>\u000d\u000a ORDER BY MENU_ORDER ASC*/')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.menu.select.menu_r_05','2013-08-12 09:05:43.608000',5,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.12\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Retrieve hierarchy menu list for login\u000d\u000a\u000d\u000a    2012.12.26  : SimpleQuery.hierarchySelect() -> SimpleQuery.select() \ub85c \ubcc0\ud658 \ubc0f SQL \ubcc0\uacbd\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT MENU.ID, \u000d\u000a       MENU.PARENT_ID, \u000d\u000a       LEVEL, \u000d\u000a       IMAGE,\u000d\u000a       NAME, \u000d\u000a       MENU.LINK_VALUE, \u000d\u000a       MENU_ORDER\u000d\u000a  FROM(\u000d\u000a       SELECT @idx := @idx+1 IDX, id := MENU_HIERARCHY_ALL() AS ID, \u000d\u000a              @level AS LEVEL, PARENT_ID\u000d\u000a         FROM (\u000d\u000a               SELECT @level := 0,\u000d\u000a                      @idx :=0\u000d\u000a              )VARS, MENU\u000d\u000a        WHERE ID IS NOT NULL\u000d\u000a      ) HIERARCHY\u000d\u000aJOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000aORDER BY HIERARCHY.IDX\u000d\u000a\u000d\u000a/* SimpleQuery.hierarchySelect() \uc0ac\uc6a9\uc2dc \uc544\ub798 SQL \uc0ac\uc6a9\u000d\u000a   SELECT ID, NAME, LINK_VALUE\u000d\u000a     FROM MENU\u000d\u000a    WHERE 1=1\u000d\u000a<dynamic parameter=":RSV_ISTOP" operator="==" value="Y">\u000d\u000a      AND ID = PARENT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":RSV_ISTOP" operator="==" value="N">\u000d\u000a      AND ID <> PARENT_ID\u000d\u000a      AND PARENT_ID = :PARENT_ID\u000d\u000a</dynamic>\u000d\u000a ORDER BY MENU_ORDER ASC*/')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.menu.select.menu_r_05','2013-08-12 09:06:29.467000',5,'DOCUMENT','false','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.12\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Retrieve hierarchy menu list for login\u000d\u000a\u000d\u000a    2012.12.26  : SimpleQuery.hierarchySelect() -> SimpleQuery.select() \ub85c \ubcc0\ud658 \ubc0f SQL \ubcc0\uacbd\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT MENU.ID, \u000d\u000a       MENU.PARENT_ID, \u000d\u000a       LEVEL, \u000d\u000a       IMAGE,\u000d\u000a       NAME, \u000d\u000a       MENU.LINK_VALUE, \u000d\u000a       MENU_ORDER\u000d\u000a  FROM(\u000d\u000a       SELECT @idx := @idx+1 IDX, @id := MENU_HIERARCHY_ALL() AS ID, \u000d\u000a              @level AS LEVEL, PARENT_ID\u000d\u000a         FROM (\u000d\u000a               SELECT @level := 0,\u000d\u000a                      @idx :=0\u000d\u000a              )VARS, MENU\u000d\u000a        WHERE ID IS NOT NULL\u000d\u000a      ) HIERARCHY\u000d\u000aJOIN MENU ON MENU.ID = HIERARCHY.ID\u000d\u000aORDER BY HIERARCHY.IDX\u000d\u000a\u000d\u000a/* SimpleQuery.hierarchySelect() \uc0ac\uc6a9\uc2dc \uc544\ub798 SQL \uc0ac\uc6a9\u000d\u000a   SELECT ID, NAME, LINK_VALUE\u000d\u000a     FROM MENU\u000d\u000a    WHERE 1=1\u000d\u000a<dynamic parameter=":RSV_ISTOP" operator="==" value="Y">\u000d\u000a      AND ID = PARENT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":RSV_ISTOP" operator="==" value="N">\u000d\u000a      AND ID <> PARENT_ID\u000d\u000a      AND PARENT_ID = :PARENT_ID\u000d\u000a</dynamic>\u000d\u000a ORDER BY MENU_ORDER ASC*/')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.menu.select.menu_r_06','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','SELECT COUNT(*) COUNT FROM MENU\u000d\u000aWHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.menu.select.menu_r_07','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.12\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Retrieve hierarchy menu list for login\u000d\u000a\u000d\u000a    2012.12.26  : SimpleQuery.select() \ub85c \ubcc0\ud658 \ubc0f SQL \ubcc0\uacbd\u000d\u000a*/\u000d\u000a\u000d\u000aSELECT MENU.ID, \u000d\u000a       MENU.PARENT_ID, \u000d\u000a       HIERARCHY.LEVEL,\u000d\u000a       MENU.IMAGE,\u000d\u000a       MENU.NAME, \u000d\u000a       MENU.LINK_VALUE, \u000d\u000a       MENU_ORDER,\u000d\u000a       IF(ACCESS_LEVEL IS NULL, ''AR001AR001'', ACCESS_LEVEL) AS ACCESS_LEVEL\u000d\u000a  FROM  \u000d\u000a       (\u000d\u000a        SELECT @id := MENU_HIERARCHY_ALL() AS ID, \u000d\u000a               @level AS LEVEL, PARENT_ID\u000d\u000a          FROM (\u000d\u000a                SELECT @level := 0\u000d\u000a               )VARS, MENU\u000d\u000a         WHERE ID IS NOT NULL\u000d\u000a       ) HIERARCHY\u000d\u000a       JOIN MENU \u000d\u000a       ON MENU.ID = HIERARCHY.ID\u000d\u000a       LEFT OUTER JOIN     \u000d\u000a        (\u000d\u000a       SELECT MENU_ID, MAX(ACCESS_LEVEL) ACCESS_LEVEL\u000d\u000a         FROM ACCESS_LIST\u000d\u000a        WHERE ROLE_MEMBER_ID = :LOGIN_MEMBER\u000d\u000a     GROUP BY MENU_ID\u000d\u000a        ) ACCESS_LIST\u000d\u000a       ON HIERARCHY.ID = ACCESS_LIST.MENU_ID\u000d\u000a WHERE ACCESS_LIST.MENU_ID IS NOT NULL OR LINK_VALUE IS NULL OR LINK_VALUE = ''''')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.menu.update','2013-07-22 14:47:33.848000',4,'FOLDER','false','null')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.menu.update.menu_u_01','2013-07-22 14:47:33.848000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.10\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Update new menu\u000d\u000a*/\u000d\u000a\u000d\u000aUPDATE MENU\u000d\u000a<dynamic parameter=":MENU_ORDER" operator="==" value="-1">\u000d\u000a     ,(SELECT IF(MAX(MENU_ORDER) IS NULL , 0, MAX(MENU_ORDER)+1)  AS MENU_ORDER\u000d\u000a         FROM MENU\u000d\u000a        WHERE PARENT_ID = :PARENT_ID) AS TMP\u000d\u000a</dynamic>\u000d\u000a   SET \u000d\u000a<dynamic parameter=":ID" operator="!=" value="">\u000d\u000a       MENU.ID                  = :ID, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PARENT_ID" operator="!=" value="">\u000d\u000a       MENU.PARENT_ID           = :PARENT_ID, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MENU_ORDER" operator="==" value="-1">\u000d\u000a       MENU.MENU_ORDER          = TMP.MENU_ORDER,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MENU_ORDER" operator="!=" value="-1">\u000d\u000a<dynamic parameter=":MENU_ORDER" operator="!=" value="">\u000d\u000a       MENU.MENU_ORDER          = :MENU_ORDER,\u000d\u000a</dynamic>\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":NAME" operator="!=" value="">\u000d\u000a       MENU.NAME                = :NAME, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":IMAGE" operator="!=" value="null">\u000d\u000a       MENU.IMAGE               = :IMAGE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":LINK_VALUE" operator="!=" value="">\u000d\u000a       MENU.LINK_VALUE          = :LINK_VALUE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":LECTURE_ACCESS_YN" operator="!=" value="">\u000d\u000a       MENU.LECTURE_ACCESS_YN   = :LECTURE_ACCESS_YN, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":ACCESS_ALL_YN" operator="!=" value="">\u000d\u000a       MENU.ACCESS_ALL_YN       = :ACCESS_ALL_YN, \u000d\u000a</dynamic>\u000d\u000a       MENU.MDF_DTTM            = CURRENT_TIMESTAMP, \u000d\u000a       MENU.MDF_MEMBER_ID       = :LOGIN_MEMBER\u000d\u000a WHERE MENU.ID = :OLD_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.portal.menu.update.menu_u_01','2013-07-22 17:45:36.579000',5,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.12.10\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Update new menu\u000d\u000a*/\u000d\u000a\u000d\u000aUPDATE MENU\u000d\u000a<dynamic parameter=":MENU_ORDER" operator="==" value="-1">\u000d\u000a     ,(SELECT IF(MAX(MENU_ORDER) IS NULL , 0, MAX(MENU_ORDER)+1)  AS MENU_ORDER\u000d\u000a         FROM MENU\u000d\u000a        WHERE PARENT_ID = :PARENT_ID) AS TMP\u000d\u000a</dynamic>\u000d\u000a   SET \u000d\u000a<dynamic parameter=":ID" operator="!=" value="">\u000d\u000a       MENU.ID                  = :ID, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PARENT_ID" operator="!=" value="">\u000d\u000a       MENU.PARENT_ID           = :PARENT_ID, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MENU_ORDER" operator="==" value="-1">\u000d\u000a       MENU.MENU_ORDER          = TMP.MENU_ORDER,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MENU_ORDER" operator="!=" value="-1">\u000d\u000a<dynamic parameter=":MENU_ORDER" operator="!=" value="">\u000d\u000a       MENU.MENU_ORDER          = :MENU_ORDER,\u000d\u000a</dynamic>\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":NAME" operator="!=" value="">\u000d\u000a       MENU.NAME                = :NAME, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":IMAGE" operator="!=" value="null">\u000d\u000a       MENU.IMAGE               = :IMAGE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":LINK_VALUE" operator="!=" value="">\u000d\u000a       MENU.LINK_VALUE          = :LINK_VALUE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":ACCESS_ALL_YN" operator="!=" value="">\u000d\u000a       MENU.ACCESS_ALL_YN       = :ACCESS_ALL_YN, \u000d\u000a</dynamic>\u000d\u000a       MENU.MDF_DTTM            = CURRENT_TIMESTAMP, \u000d\u000a       MENU.MDF_MEMBER_ID       = :LOGIN_MEMBER\u000d\u000a WHERE MENU.ID = :OLD_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project','2013-08-07 17:49:01.991000',2,'FOLDER','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.delete','2013-08-07 17:49:13.723000',3,'FOLDER','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.delete.project_d_01','2013-08-12 19:42:45.671000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.delete.project_d_01','2013-08-12 19:43:13.539000',4,'DOCUMENT','true ','DELETE FROM PROJECT_MEMBER\u000d\u000aWHERE PROJECT_ID = :PROJECT_ID\u000d\u000aAND MEMBER_ID = :MEMBER_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.delete.project_d_02','2013-08-19 14:46:03.863000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.delete.project_d_02','2013-08-19 15:20:04.076000',4,'DOCUMENT','true ','/*\u000d\u000a\uc0ad\uc81c \ub420 \ub54c \u000d\u000aSCHEDULE_ATTATCHMENT, SCHEDULE_COMMNET, BUDGET, COST \ud14c\uc774\ube14 \ubaa8\ub450 \uc0ad\uc81c\uac00 \ub428. CASCADE OPTIONS\u000d\u000a*/\u000d\u000aDELETE FROM PROJECT_SCHEDULE WHERE ID = :ID AND PROJECT_ID = :G_PROJECT_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.delete.project_d_03','2013-08-26 18:41:59.657000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.delete.project_d_03','2013-08-26 18:42:41.941000',4,'DOCUMENT','true ','DELETE FROM SCHEDULE_COMMENT\u000d\u000aWHERE PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000aAND SEQ = :SEQ')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.delete.project_d_04','2013-08-27 09:51:04.360000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.delete.project_d_04','2013-08-27 09:51:39.968000',4,'DOCUMENT','true ','DELETE FROM SCHEDULE_ATTATCHMENT\u000d\u000aWHERE PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SEQ = :SEQ')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.delete.project_d_05','2013-09-01 19:32:27.760000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.delete.project_d_05','2013-09-01 19:33:06.675000',4,'DOCUMENT','true ','DELETE FROM BUDGET \u000d\u000aWHERE PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND BUDGET_CODE = :BUDGET_CODE')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.delete.project_d_06','2013-09-06 18:23:45.925000',4,'DOCUMENT','true ','DELETE \u000d\u000a  FROM COST \u000d\u000a WHERE ID = :COST_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.delete.project_d_07','2013-09-16 12:05:23.186000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.delete.project_d_07','2013-09-16 20:38:19.624000',4,'DOCUMENT','true ','DELETE FROM CONFERENCE WHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.delete.project_d_08','2013-09-22 02:46:55.838000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.delete.project_d_08','2013-09-22 02:47:41.185000',4,'DOCUMENT','true ','DELETE FROM CONFERENCE_ATTATCHMENT\u000d\u000aWHERE ID = :ID\u000d\u000a  AND SEQ = :SEQ')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.delete.project_d_08','2013-09-22 02:48:12.051000',4,'DOCUMENT','true ','DELETE FROM CONFERENCE_ATTATCHMENT\u000d\u000aWHERE CONFERENCE_ID = :CONFERENCE_ID\u000d\u000a  AND SEQ = :SEQ')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.delete.project_d_09','2013-09-23 10:48:49.837000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.delete.project_d_09','2013-09-23 10:50:15.218000',4,'DOCUMENT','true ','DELETE FROM REPORT WHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.delete.project_d_09','2013-09-23 10:50:40.564000',4,'DOCUMENT','true ','DELETE FROM REPORT WHERE ID = :ID AND RGST_MEMBER_ID = :LOGIN_MEMBER')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.delete.project_d_10','2013-09-25 14:23:00.049000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.delete.project_d_10','2013-09-25 14:23:25.600000',4,'DOCUMENT','true ','DELETE FROM DECISION_ATTATCHMENT\u000d\u000aWHERE DECISION_REQUEST_ID = :DECISION_REQUEST_ID\u000d\u000a  AND SEQ = :SEQ')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert','2013-08-07 17:49:19.947000',3,'FOLDER','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_01','2013-08-12 17:36:59.236000',4,'DOCUMENT','true ','INSERT INTO PROJECT\u000d\u000a(\u000d\u000aID, TITLE, SUMMARY, MANAGER, MANAGER_ORGANIZATION_NAME, MANAGER_ROLE_NAME, \u000d\u000aBUDGET_AMOUNT, FROM_DATE, TO_DATE, PRJ_STATUS, BOARD_ID, RGST_MEMBER_ID, RGST_DTTM,\u000d\u000aMDF_MEMBER_ID, MDF_DTTM, USE_YN\u000d\u000a)\u000d\u000aVALUES\u000d\u000a(\u000d\u000a:ID, \u000d\u000a:TITLE, \u000d\u000aREPLACE(REPLACE(REPLACE(REPLACE(:SUMMARY, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), " ","&nbsp;&nbsp;"),\u000d\u000a:MANAGER, \u000d\u000a:MANAGER_ORGANIZATION_NAME, \u000d\u000a:MANAGER_ROLE_NAME, \u000d\u000a:BUDGET_AMOUNT, \u000d\u000aSTR_TO_DATE(:FROM_DATE, ''%Y-%m-%d''), \u000d\u000aSTR_TO_DATE(:TO_DATE, ''%Y-%m-%d''), \u000d\u000a''PJ001ST001'', :BOARD_ID, :LOGIN_MEMBER, CURRENT_TIMESTAMP, :LOGIN_MEMBER, CURRENT_TIMESTAMP, ''Y''\u000d\u000a)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_02','2013-08-12 17:45:13.885000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_02','2013-08-12 17:50:12.110000',4,'DOCUMENT','true ','INSERT INTO PROJECT_MEMBER\u000d\u000a(PROJECT_ID, MEMBER_ID, ORGANIZATION_ID, RGST_MEMBER_ID, RGST_DTTM)\u000d\u000aVALUES\u000d\u000a(:ID, :MANAGER, :MANAGER_ORGANIZATION, :LOGIN_MEMBER_ID, CURRENT_TIMESTAMP)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_02','2013-08-12 17:50:33.231000',4,'DOCUMENT','true ','INSERT INTO PROJECT_MEMBER\u000d\u000a(PROJECT_ID, MEMBER_ID, ORGANIZATION_ID, RGST_MEMBER_ID, RGST_DTTM)\u000d\u000aVALUES\u000d\u000a(:ID, :MANAGER, :MANAGER_ORGANIZATION, :LOGIN_MEMBER, CURRENT_TIMESTAMP)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_02','2013-08-12 17:52:47.182000',4,'DOCUMENT','true ','INSERT INTO PROJECT_MEMBER\u000d\u000a(PROJECT_ID, MEMBER_ID, ORGANIZATION_ID, RGST_MEMBER_ID, RGST_DTTM)\u000d\u000aVALUES\u000d\u000a(:ID, :MEMBER_ID, :ORGANIZATION_ID, :LOGIN_MEMBER, CURRENT_TIMESTAMP)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_02','2013-08-12 17:53:27.977000',4,'DOCUMENT','true ','INSERT INTO PROJECT_MEMBER\u000d\u000a(PROJECT_ID, MEMBER_ID, ORGANIZATION_ID, RGST_MEMBER_ID, RGST_DTTM)\u000d\u000aVALUES\u000d\u000a(:PROJECT_ID, :MEMBER_ID, :ORGANIZATION_ID, :LOGIN_MEMBER, CURRENT_TIMESTAMP)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_03','2013-08-23 22:59:30.713000',4,'DOCUMENT','true ','INSERT INTO PROJECT_SCHEDULE\u000d\u000a(\u000d\u000a    ID, PROJECT_ID, PARENT_ID, SCHDL_TYPE, FROM_DATE, \u000d\u000a    TO_DATE, TITLE, SUMMARY, ASSIGNEE, SCHDL_STATUS, \u000d\u000a    RGST_MEMBER_ID, RGST_DTTM, MDF_MEMBER_ID, MDF_DTTM\u000d\u000a)\u000d\u000aVALUES\u000d\u000a(\u000d\u000a    :PROJECT_SCHEDULE_ID, \u000d\u000a    :PROJECT_ID,\u000d\u000a<dynamic parameter=":PARENT_ID" operator="==" value="">\u000d\u000a    :PROJECT_SCHEDULE_ID,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PARENT_ID" operator="!=" value="">\u000d\u000a    :PARENT_ID,\u000d\u000a</dynamic>\u000d\u000a    :SCHDL_TYPE, \u000d\u000a    STR_TO_DATE(:FROM_DATE, ''%Y-%m-%d''), \u000d\u000a    STR_TO_DATE(:TO_DATE, ''%Y-%m-%d''), \u000d\u000a    :TITLE, \u000d\u000a    REPLACE(REPLACE(REPLACE(REPLACE(:SUMMARY, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), " ","&nbsp;&nbsp;"), \u000d\u000a    :ASSIGNEE, \u000d\u000a    ''ST002ST001'', \u000d\u000a    :LOGIN_MEMBER, \u000d\u000a    CURRENT_TIMESTAMP, \u000d\u000a    :LOGIN_MEMBER, \u000d\u000a    CURRENT_TIMESTAMP\u000d\u000a)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_04','2013-08-29 13:57:20.897000',4,'DOCUMENT','true ','INSERT INTO SCHEDULE_ATTATCHMENT\u000d\u000a(PROJECT_SCHEDULE_ID, SEQ, CONTENT, FILE_NAME, SIZE, RGST_MEMBER_ID, MDF_DTTM)\u000d\u000aSELECT F.PROJECT_SCHEDULE_ID,\u000d\u000a       F.SEQ,\u000d\u000a       U.CONTENT,\u000d\u000a       U.FILE_NAME,\u000d\u000a       U.SIZE,\u000d\u000a       :LOGIN_MEMBER AS RGST_MEMBER_ID,\u000d\u000a       CURRENT_TIMESTAMP\u000d\u000a  FROM (SELECT :PROJECT_SCHEDULE_ID AS PROJECT_SCHEDULE_ID,\u000d\u000a               IF(MAX(F.SEQ) IS NULL , 0, MAX(F.SEQ)+1) AS SEQ,\u000d\u000a               :VALUE AS ID\u000d\u000a          FROM SCHEDULE_ATTATCHMENT F \u000d\u000a         WHERE F.PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID) AS F,\u000d\u000a       TMP_UPLOAD_FILE U\u000d\u000a WHERE F.ID = U.ID\u000d\u000a   AND U.ID = :VALUE;')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_05','2013-08-26 16:49:05.009000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_05','2013-08-26 16:49:10.180000',4,'DOCUMENT','true ','<dynamic parameter=":SEQ" operator="==" value="null">\u000d\u000aINSERT INTO BOARD_COMMENT\u000d\u000a(BOARD_ID, SEQ, CONTENT, MEMBER_ID, RGST_DTTM, MDF_DTTM)\u000d\u000aSELECT :BOARD_ID                            AS BOARD_ID, \u000d\u000a       IF(MAX(SEQ) IS NULL , 0, MAX(SEQ)+1) AS SEQ, \u000d\u000a       REPLACE(REPLACE(REPLACE(:CONTENT, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"'') AS CONTENT, \u000d\u000a       :LOGIN_MEMBER                        AS MEMBER_ID, \u000d\u000a       CURRENT_TIMESTAMP                    AS RGST_DTTM, \u000d\u000a       CURRENT_TIMESTAMP                    AS MDF_DTTM\u000d\u000a  FROM BOARD_COMMENT\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SEQ" operator="!=" value="null">\u000d\u000aUPDATE BOARD_COMMENT\u000d\u000a   SET CONTENT = REPLACE(REPLACE(REPLACE(REPLACE(:CONTENT, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), \u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a   AND SEQ = :SEQ\u000d\u000a</dynamic>\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_05','2013-08-26 16:56:26.159000',4,'DOCUMENT','true ','<dynamic parameter=":SEQ" operator="==" value="">\u000d\u000aINSERT INTO BOARD_COMMENT\u000d\u000a(PROJECT_SCHEDULE_ID, SEQ, CONTENT, MEMBER_ID, RGST_DTTM, MDF_DTTM)\u000d\u000aSELECT :PROJECT_SCHEDULE_ID                            AS BOARD_ID, \u000d\u000a       IF(MAX(SEQ) IS NULL , 0, MAX(SEQ)+1) AS SEQ, \u000d\u000a       REPLACE(REPLACE(REPLACE(:CONTENT, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"'') AS CONTENT, \u000d\u000a       :LOGIN_MEMBER                        AS MEMBER_ID, \u000d\u000a       CURRENT_TIMESTAMP                    AS RGST_DTTM, \u000d\u000a       CURRENT_TIMESTAMP                    AS MDF_DTTM\u000d\u000a  FROM BOARD_COMMENT\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SEQ" operator="!=" value="null">\u000d\u000aUPDATE BOARD_COMMENT\u000d\u000a   SET CONTENT = REPLACE(REPLACE(REPLACE(REPLACE(:CONTENT, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), \u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a   AND SEQ = :SEQ\u000d\u000a</dynamic>\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_05','2013-08-26 16:59:59.254000',4,'DOCUMENT','true ','<dynamic parameter=":SEQ" operator="==" value="">\u000d\u000aINSERT INTO BOARD_COMMENT\u000d\u000a(PROJECT_SCHEDULE_ID, SEQ, CONTENT, MEMBER_ID, RGST_DTTM, MDF_DTTM)\u000d\u000aSELECT :PROJECT_SCHEDULE_ID                            AS PROJECT_SCHEDULE_ID, \u000d\u000a       IF(MAX(SEQ) IS NULL , 0, MAX(SEQ)+1) AS SEQ, \u000d\u000a       REPLACE(REPLACE(REPLACE(:CONTENT, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"'') AS CONTENT, \u000d\u000a       :LOGIN_MEMBER                        AS MEMBER_ID, \u000d\u000a       CURRENT_TIMESTAMP                    AS RGST_DTTM, \u000d\u000a       CURRENT_TIMESTAMP                    AS MDF_DTTM\u000d\u000a  FROM BOARD_COMMENT\u000d\u000a WHERE BOARD_ID = :PROJECT_SCHEDULE_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SEQ" operator="!=" value="null">\u000d\u000aUPDATE BOARD_COMMENT\u000d\u000a   SET CONTENT = REPLACE(REPLACE(REPLACE(REPLACE(:CONTENT, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), \u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a   AND SEQ = :SEQ\u000d\u000a</dynamic>\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_05','2013-08-26 17:00:53.201000',4,'DOCUMENT','true ','<dynamic parameter=":SEQ" operator="==" value="">\u000d\u000aINSERT INTO SCHEDULE_COMMENT\u000d\u000a(PROJECT_SCHEDULE_ID, SEQ, CONTENT, MEMBER_ID, RGST_DTTM, MDF_DTTM)\u000d\u000aSELECT :PROJECT_SCHEDULE_ID                            AS PROJECT_SCHEDULE_ID, \u000d\u000a       IF(MAX(SEQ) IS NULL , 0, MAX(SEQ)+1) AS SEQ, \u000d\u000a       REPLACE(REPLACE(REPLACE(:CONTENT, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"'') AS CONTENT, \u000d\u000a       :LOGIN_MEMBER                        AS MEMBER_ID, \u000d\u000a       CURRENT_TIMESTAMP                    AS RGST_DTTM, \u000d\u000a       CURRENT_TIMESTAMP                    AS MDF_DTTM\u000d\u000a  FROM BOARD_COMMENT\u000d\u000a WHERE BOARD_ID = :PROJECT_SCHEDULE_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SEQ" operator="!=" value="">\u000d\u000aUPDATE SCHEDULE_COMMENT\u000d\u000a   SET CONTENT = REPLACE(REPLACE(REPLACE(REPLACE(:CONTENT, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), \u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE BOARD_ID = :PROJECT_SCHEDULE_ID\u000d\u000a   AND SEQ = :SEQ\u000d\u000a</dynamic>\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_05','2013-08-26 17:19:38.562000',4,'DOCUMENT','true ','<dynamic parameter=":SEQ" operator="==" value="">\u000d\u000aINSERT INTO SCHEDULE_COMMENT\u000d\u000a(PROJECT_SCHEDULE_ID, SEQ, CONTENT, MEMBER_ID, RGST_DTTM, MDF_DTTM)\u000d\u000aSELECT :PROJECT_SCHEDULE_ID                            AS PROJECT_SCHEDULE_ID, \u000d\u000a       IF(MAX(SEQ) IS NULL , 0, MAX(SEQ)+1) AS SEQ, \u000d\u000a       REPLACE(REPLACE(REPLACE(:CONTENT, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"'') AS CONTENT, \u000d\u000a       :LOGIN_MEMBER                        AS MEMBER_ID, \u000d\u000a       CURRENT_TIMESTAMP                    AS RGST_DTTM, \u000d\u000a       CURRENT_TIMESTAMP                    AS MDF_DTTM\u000d\u000a  FROM SCHEDULE_COMMENT\u000d\u000a WHERE PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SEQ" operator="!=" value="">\u000d\u000aUPDATE SCHEDULE_COMMENT\u000d\u000a   SET CONTENT = REPLACE(REPLACE(REPLACE(REPLACE(:CONTENT, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), \u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a   AND SEQ = :SEQ\u000d\u000a</dynamic>\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_05','2013-08-26 18:27:00.960000',4,'DOCUMENT','true ','<dynamic parameter=":SEQ" operator="==" value="">\u000d\u000aINSERT INTO SCHEDULE_COMMENT\u000d\u000a(PROJECT_SCHEDULE_ID, SEQ, CONTENT, MEMBER_ID, RGST_DTTM, MDF_DTTM)\u000d\u000aSELECT :PROJECT_SCHEDULE_ID                            AS PROJECT_SCHEDULE_ID, \u000d\u000a       IF(MAX(SEQ) IS NULL , 0, MAX(SEQ)+1) AS SEQ, \u000d\u000a       REPLACE(REPLACE(REPLACE(:CONTENT, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"'') AS CONTENT, \u000d\u000a       :LOGIN_MEMBER                        AS MEMBER_ID, \u000d\u000a       CURRENT_TIMESTAMP                    AS RGST_DTTM, \u000d\u000a       CURRENT_TIMESTAMP                    AS MDF_DTTM\u000d\u000a  FROM SCHEDULE_COMMENT\u000d\u000a WHERE PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SEQ" operator="!=" value="">\u000d\u000aUPDATE SCHEDULE_COMMENT\u000d\u000a   SET CONTENT = REPLACE(REPLACE(REPLACE(:CONTENT, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), \u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a   AND SEQ = :SEQ\u000d\u000a</dynamic>\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_06','2013-08-27 09:57:44.824000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_06','2013-08-27 10:06:31.322000',4,'DOCUMENT','true ','INSERT INTO SCHEDULE_ATTATCHMENT\u000d\u000a(PROJECT_SCHEDULE_ID, SEQ, CONTENT, FILE_NAME, SIZE, RGST_MEMBER_ID, MDF_DTTM)\u000d\u000aSELECT :PROJECT_SCHEDULE_ID AS PROJECT_SCHEDULE_ID,\u000d\u000a       F.SEQ AS SEQ,\u000d\u000a       :CONTENT,\u000d\u000a       :FILE_NAME, \u000d\u000a       :SIZE,\u000d\u000a       :LOGIN_MEMBER,\u000d\u000a       CURRENT_TIMESTAMP\u000d\u000a  FROM (\u000d\u000a        SELECT IF(MAX(SEQ) IS NULL , 0, MAX(SEQ)+1) AS SEQ\u000d\u000a          FROM SCHEDULE_ATTATCHMENT\u000d\u000a         WHERE PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a      GROUP BY PROJECT_SCHEDULE_ID\u000d\u000a       ) AS F   ')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_06','2013-08-27 10:07:16.049000',4,'DOCUMENT','true ','INSERT INTO SCHEDULE_ATTATCHMENT\u000d\u000a(PROJECT_SCHEDULE_ID, SEQ, CONTENT, FILE_NAME, SIZE, RGST_MEMBER_ID, MDF_DTTM)\u000d\u000aSELECT :PROJECT_SCHEDULE_ID AS PROJECT_SCHEDULE_ID,\u000d\u000a       F.SEQ AS SEQ,\u000d\u000a       :CONTENT AS CONTENT,\u000d\u000a       :FILE_NAME AS FILE_NAME, \u000d\u000a       :SIZE AS SIZE,\u000d\u000a       :LOGIN_MEMBER AS RGST_MEMBER_ID,\u000d\u000a       CURRENT_TIMESTAMP AS MDF_DTTM\u000d\u000a  FROM (\u000d\u000a        SELECT IF(MAX(SEQ) IS NULL , 0, MAX(SEQ)+1) AS SEQ\u000d\u000a          FROM SCHEDULE_ATTATCHMENT\u000d\u000a         WHERE PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a      GROUP BY PROJECT_SCHEDULE_ID\u000d\u000a       ) AS F   ')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_06','2013-08-27 12:50:22.893000',4,'DOCUMENT','true ','INSERT INTO SCHEDULE_ATTATCHMENT\u000d\u000a(PROJECT_SCHEDULE_ID, SEQ, CONTENT, FILE_NAME, SIZE, RGST_MEMBER_ID, MDF_DTTM)\u000d\u000aSELECT :PROJECT_SCHEDULE_ID AS PROJECT_SCHEDULE_ID,\u000d\u000a       F.SEQ AS SEQ,\u000d\u000a       :CONTENT AS CONTENT,\u000d\u000a       :CONTENT_FILE_NAME AS FILE_NAME, \u000d\u000a       :CONTENT_FILE_SIZE AS SIZE,\u000d\u000a       :LOGIN_MEMBER AS RGST_MEMBER_ID,\u000d\u000a       CURRENT_TIMESTAMP AS MDF_DTTM\u000d\u000a  FROM (\u000d\u000a        SELECT IF(MAX(SEQ) IS NULL , 0, MAX(SEQ)+1) AS SEQ\u000d\u000a          FROM SCHEDULE_ATTATCHMENT\u000d\u000a         WHERE PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a      GROUP BY PROJECT_SCHEDULE_ID\u000d\u000a       ) AS F   ')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_06','2013-08-27 12:54:06.674000',4,'DOCUMENT','true ','INSERT INTO SCHEDULE_ATTATCHMENT\u000d\u000a(PROJECT_SCHEDULE_ID, SEQ, CONTENT, FILE_NAME, SIZE, RGST_MEMBER_ID, MDF_DTTM)\u000d\u000aSELECT :PROJECT_SCHEDULE_ID AS PROJECT_SCHEDULE_ID,\u000d\u000a       F.SEQ AS SEQ,\u000d\u000a       :CONTENT AS CONTENT,\u000d\u000a       :CONTENT_FILE_NAME AS FILE_NAME, \u000d\u000a       :CONTENT_FILE_SIZE AS SIZE,\u000d\u000a       :LOGIN_MEMBER AS RGST_MEMBER_ID,\u000d\u000a       CURRENT_TIMESTAMP AS MDF_DTTM\u000d\u000a  FROM (\u000d\u000a        SELECT IF(MAX(SEQ) IS NULL , 0, MAX(SEQ)+1) AS SEQ\u000d\u000a          FROM SCHEDULE_ATTATCHMENT\u000d\u000a         WHERE PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a       ) AS F   ')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_07','2013-09-02 17:36:49.835000',4,'DOCUMENT','true ',' INSERT INTO BUDGET\u000d\u000a SELECT :PROJECT_SCHEDULE_ID AS PROJECT_SCHEDULE_ID, \u000d\u000a        :BUDGET_CODE AS BUDGET_CODE, \u000d\u000a        :SUMMARY AS SUMMARY, \u000d\u000a        :BUDGET_AMOUNT AS AMOUNT, \u000d\u000a        :LOGIN_MEMBER AS RGST_MEMBER_ID,\u000d\u000a        CURRENT_TIMESTAMP AS RGST_DTTM,\u000d\u000a        :LOGIN_MEMBER AS MDF_MEMBER_ID,\u000d\u000a        CURRENT_TIMESTAMP AS MDF_DTTM\u000d\u000a   FROM PROJECT_SCHEDULE\u000d\u000a  WHERE ID = :PROJECT_SCHEDULE_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_07','2013-09-02 18:04:14.677000',4,'DOCUMENT','true ',' INSERT INTO BUDGET\u000d\u000a SELECT :PROJECT_SCHEDULE_ID AS PROJECT_SCHEDULE_ID, \u000d\u000a        :BUDGET_CODE AS BUDGET_CODE, \u000d\u000a        :SUMMARY AS SUMMARY, \u000d\u000a        :BUDGET_AMOUNT AS AMOUNT, \u000d\u000a        0 AS ALLOCATION_AMOUNT,\u000d\u000a        :LOGIN_MEMBER AS RGST_MEMBER_ID,\u000d\u000a        CURRENT_TIMESTAMP AS RGST_DTTM,\u000d\u000a        :LOGIN_MEMBER AS MDF_MEMBER_ID,\u000d\u000a        CURRENT_TIMESTAMP AS MDF_DTTM\u000d\u000a   FROM PROJECT_SCHEDULE\u000d\u000a  WHERE ID = :PROJECT_SCHEDULE_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_07','2013-09-02 20:20:01.531000',4,'DOCUMENT','true ',' INSERT INTO BUDGET\u000d\u000a SELECT :PROJECT_SCHEDULE_ID AS PROJECT_SCHEDULE_ID, \u000d\u000a        :BUDGET_CODE AS BUDGET_CODE, \u000d\u000a        :SUMMARY AS SUMMARY, \u000d\u000a        :BUDGET_AMOUNT AS AMOUNT, \u000d\u000a        :LOGIN_MEMBER AS RGST_MEMBER_ID,\u000d\u000a        CURRENT_TIMESTAMP AS RGST_DTTM,\u000d\u000a        :LOGIN_MEMBER AS MDF_MEMBER_ID,\u000d\u000a        CURRENT_TIMESTAMP AS MDF_DTTM\u000d\u000a   FROM PROJECT_SCHEDULE\u000d\u000a  WHERE ID = :PROJECT_SCHEDULE_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_08','2013-10-04 13:58:20.792000',4,'DOCUMENT','true ','INSERT INTO COST\u000d\u000aVALUES (SEQ(''COST''),\u000d\u000a       :PROJECT_SCHEDULE_ID,\u000d\u000a       :BUDGET_CODE,\u000d\u000a       :USE_DTL,\u000d\u000a       :PAYMENT_CODE,\u000d\u000a       STR_TO_DATE(:PAYMENT_DATE, ''%Y-%m-%d'') ,\u000d\u000a       REPLACE(REPLACE(REPLACE(REPLACE(:SUMMARY, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), " ","&nbsp;&nbsp;"),\u000d\u000a       :AMOUNT,\u000d\u000a       :EXECUTOR,\u000d\u000a       :RECEIVER,\u000d\u000a<dynamic parameter=":FILE_UPD" operator="==" value="Y">\u000d\u000a       :CONTENT,\u000d\u000a       :CONTENT_FILE_NAME,\u000d\u000a       :CONTENT_FILE_SIZE,\u000d\u000a</dynamic>\u000d\u000a       :LOGIN_MEMBER,\u000d\u000a       CURRENT_TIMESTAMP,\u000d\u000a       :LOGIN_MEMBER,\u000d\u000a       CURRENT_TIMESTAMP)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_08','2013-10-04 14:10:24.168000',4,'DOCUMENT','true ','INSERT INTO COST\u000d\u000aVALUES (SEQ(''COST''),\u000d\u000a       :PROJECT_SCHEDULE_ID,\u000d\u000a       :BUDGET_CODE,\u000d\u000a       :USE_DTL,\u000d\u000a       :PAYMENT_CODE,\u000d\u000a       STR_TO_DATE(:PAYMENT_DATE, ''%Y-%m-%d'') ,\u000d\u000a       REPLACE(REPLACE(REPLACE(REPLACE(:SUMMARY, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), " ","&nbsp;&nbsp;"),\u000d\u000a       :AMOUNT,\u000d\u000a       :EXECUTOR,\u000d\u000a       :RECEIVER,\u000d\u000a<dynamic parameter=":CONTENT" operator="!=" value="null">\u000d\u000a       :CONTENT,\u000d\u000a       :CONTENT_FILE_NAME,\u000d\u000a       :CONTENT_FILE_SIZE,\u000d\u000a</dynamic>\u000d\u000a       :LOGIN_MEMBER,\u000d\u000a       CURRENT_TIMESTAMP,\u000d\u000a       :LOGIN_MEMBER,\u000d\u000a       CURRENT_TIMESTAMP)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_08','2013-10-04 14:13:09.699000',4,'DOCUMENT','true ','INSERT INTO COST\u000d\u000aVALUES (SEQ(''COST''),\u000d\u000a       :PROJECT_SCHEDULE_ID,\u000d\u000a       :BUDGET_CODE,\u000d\u000a       :USE_DTL,\u000d\u000a       :PAYMENT_CODE,\u000d\u000a       STR_TO_DATE(:PAYMENT_DATE, ''%Y-%m-%d'') ,\u000d\u000a       REPLACE(REPLACE(REPLACE(REPLACE(:SUMMARY, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), " ","&nbsp;&nbsp;"),\u000d\u000a       :AMOUNT,\u000d\u000a       :EXECUTOR,\u000d\u000a       :RECEIVER,\u000d\u000a       :CONTENT,\u000d\u000a       :CONTENT_FILE_NAME,\u000d\u000a       :CONTENT_FILE_SIZE,\u000d\u000a       :LOGIN_MEMBER,\u000d\u000a       CURRENT_TIMESTAMP,\u000d\u000a       :LOGIN_MEMBER,\u000d\u000a       CURRENT_TIMESTAMP)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_09','2013-09-09 15:29:40.010000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_09','2013-09-09 15:30:58.743000',4,'DOCUMENT','true ','INSERT INTO PROJECT_SCHEDULE_H\u000d\u000aSELECT :PROJECT_SCHEDULE_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_09','2013-09-09 15:45:51.575000',4,'DOCUMENT','true ','INSERT INTO PROJECT_SCHEDULE_H\u000d\u000aSELECT ID, \u000d\u000a       MDF_DTTM, \u000d\u000a       PROJECT_ID, \u000d\u000a       PARENT_ID, \u000d\u000a       SCHDL_TYPE, \u000d\u000a       FROM_DATE, \u000d\u000a       TO_DATE, \u000d\u000a       TITLE, \u000d\u000a       SUMMARY, \u000d\u000a       ASSIGNEE, \u000d\u000a       SCHDL_STATUS, \u000d\u000a       RGST_MEMBER_ID, \u000d\u000a       RGST_DTTM, \u000d\u000a       MDF_MEMBER_ID\u000d\u000a  FROM PROJECT_SCHEDULE\u000d\u000a WHERE ID = :PROJECT_SCHEDULE_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_10','2013-09-16 12:00:16.183000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_10','2013-09-16 12:21:26.536000',4,'DOCUMENT','true ','INSERT INTO CONFERENCE\u000d\u000a(ID, PROJECT_ID, TITLE, CONFERENCE_DATE, PARTICIPANTS, PLACE, FROM_TIME, TO_TIME, CONTENTS, RGST_MEMBER_ID, RGST_DTTM)\u000d\u000aVALUES\u000d\u000a(\u000d\u000a:CONFERENCE_ID, \u000d\u000a:G_PROJECT_ID, \u000d\u000a:TITLE, \u000d\u000a:CONFERENCE_DATA, \u000d\u000a:PARTICIPANTS,\u000d\u000a:PLACE,\u000d\u000a:FROM_TIME,\u000d\u000a:to_TIME,\u000d\u000a:CONTENTS,\u000d\u000a:LOGIM_MEMBER,\u000d\u000aCURRENT_TIMESTAMP\u000d\u000a)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_10','2013-09-16 12:24:12.972000',4,'DOCUMENT','true ','INSERT INTO CONFERENCE\u000d\u000a(ID, PROJECT_ID, TITLE, CONFERENCE_DATE, PARTICIPANTS, PLACE, FROM_TIME, TO_TIME, CONTENTS, RGST_MEMBER_ID, RGST_DTTM)\u000d\u000aVALUES\u000d\u000a(\u000d\u000a:CONFERENCE_ID, \u000d\u000a:G_PROJECT_ID, \u000d\u000a:TITLE, \u000d\u000aSTR_TO_DATE(:CONFERENCE_DATA, ''%Y-%m-%d'')\u000d\u000a:PARTICIPANTS,\u000d\u000a:PLACE,\u000d\u000aSTR_TO_TIME(:FROM_TIME, ''12:00 am''),\u000d\u000aSTR_TO_TIME(:TO_TIME, ''12:00 am''),\u000d\u000a:CONTENTS,\u000d\u000a:LOGIM_MEMBER,\u000d\u000aCURRENT_TIMESTAMP\u000d\u000a)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_10','2013-09-16 12:26:34.881000',4,'DOCUMENT','true ','INSERT INTO CONFERENCE\u000d\u000a(ID, PROJECT_ID, TITLE, CONFERENCE_DATE, PARTICIPANTS, PLACE, FROM_TIME, TO_TIME, CONTENTS, RGST_MEMBER_ID, RGST_DTTM)\u000d\u000aVALUES\u000d\u000a(\u000d\u000a:CONFERENCE_ID, \u000d\u000a:G_PROJECT_ID, \u000d\u000a:TITLE, \u000d\u000aSTR_TO_DATE(:CONFERENCE_DATA, ''%Y-%m-%d'')\u000d\u000a:PARTICIPANTS,\u000d\u000a:PLACE,\u000d\u000aSTR_TO_DATE(:FROM_TIME, ''%l:%s %p''),\u000d\u000aSTR_TO_DATE(:TO_TIME, ''%l:%s %p''),\u000d\u000a:CONTENTS,\u000d\u000a:LOGIM_MEMBER,\u000d\u000aCURRENT_TIMESTAMP\u000d\u000a)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_10','2013-09-16 12:30:03.142000',4,'DOCUMENT','true ','INSERT INTO CONFERENCE\u000d\u000a(ID, PROJECT_ID, TITLE, CONFERENCE_DATE, PARTICIPANTS, PLACE, FROM_TIME, TO_TIME, CONTENTS, RGST_MEMBER_ID, RGST_DTTM)\u000d\u000aVALUES\u000d\u000a(\u000d\u000a:CONFERENCE_ID, \u000d\u000a:G_PROJECT_ID, \u000d\u000a:TITLE, \u000d\u000aSTR_TO_DATE(:CONFERENCE_DATA, ''%Y-%m-%d'')\u000d\u000a:PARTICIPANTS,\u000d\u000a:PLACE,\u000d\u000aSTR_TO_DATE(:FROM_TIME, ''%h:%i %p''),\u000d\u000aSTR_TO_DATE(:TO_TIME, ''%h:%i %p''),\u000d\u000a:CONTENTS,\u000d\u000a:LOGIM_MEMBER,\u000d\u000aCURRENT_TIMESTAMP\u000d\u000a)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_10','2013-09-16 13:32:07.802000',4,'DOCUMENT','true ','INSERT INTO CONFERENCE\u000d\u000a(ID, PROJECT_ID, TITLE, CONFERENCE_DATE, PARTICIPANTS, PLACE, FROM_TIME, TO_TIME, CONTENTS, RGST_MEMBER_ID, RGST_DTTM)\u000d\u000aVALUES\u000d\u000a(\u000d\u000a:CONFERENCE_ID, \u000d\u000a:G_PROJECT_ID, \u000d\u000a:TITLE, \u000d\u000aSTR_TO_DATE(:CONFERENCE_DATA, ''%Y-%m-%d'')\u000d\u000a:PARTICIPANTS,\u000d\u000a:PLACE,\u000d\u000aSTR_TO_DATE(:FROM_TIME, ''%h:%i %p''),\u000d\u000aSTR_TO_DATE(:TO_TIME, ''%h:%i %p''),\u000d\u000a:CONTENTS,\u000d\u000a:LOGIN_MEMBER,\u000d\u000aCURRENT_TIMESTAMP\u000d\u000a)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_10','2013-09-16 13:37:42.889000',4,'DOCUMENT','true ','INSERT INTO CONFERENCE\u000d\u000a(ID, PROJECT_ID, TITLE, CONFERENCE_DATE, PARTICIPANTS, PLACE, FROM_TIME, TO_TIME, CONTENTS, RGST_MEMBER_ID, RGST_DTTM)\u000d\u000aVALUES\u000d\u000a(\u000d\u000a:CONFERENCE_ID, \u000d\u000a:G_PROJECT_ID, \u000d\u000a:TITLE, \u000d\u000aSTR_TO_DATE(:CONFERENCE_DATE, ''%Y-%m-%d''),\u000d\u000a:PARTICIPANTS,\u000d\u000a:PLACE,\u000d\u000aSTR_TO_DATE(:FROM_TIME, ''%h:%i %p''),\u000d\u000aSTR_TO_DATE(:TO_TIME, ''%h:%i %p''),\u000d\u000a:CONTENTS,\u000d\u000a:LOGIN_MEMBER,\u000d\u000aCURRENT_TIMESTAMP\u000d\u000a)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_10','2013-09-16 19:48:49.455000',4,'DOCUMENT','true ','INSERT INTO CONFERENCE\u000d\u000a(ID, PROJECT_ID, TITLE, CONFERENCE_DATE, PARTICIPANTS, PLACE, FROM_TIME, TO_TIME, CONTENTS, RGST_MEMBER_ID, RGST_DTTM)\u000d\u000aVALUES\u000d\u000a(\u000d\u000a:CONFERENCE_ID, \u000d\u000a:G_PROJECT_ID, \u000d\u000a:TITLE, \u000d\u000aSTR_TO_DATE(:CONFERENCE_DATE, ''%Y-%m-%d''),\u000d\u000a:PARTICIPANTS,\u000d\u000a:PLACE,\u000d\u000aSTR_TO_DATE(:FROM_TIME, ''%h:%i %p''),\u000d\u000aSTR_TO_DATE(:TO_TIME, ''%h:%i %p''),\u000d\u000aREPLACE(REPLACE(:CONTENTS, ''\r\n'', ''\\r\\n''), ''\"'', ''\\"''),\u000d\u000a:LOGIN_MEMBER,\u000d\u000aCURRENT_TIMESTAMP\u000d\u000a)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_10','2013-09-16 20:52:18.679000',4,'DOCUMENT','true ','INSERT INTO CONFERENCE\u000d\u000a(ID, PROJECT_ID, TITLE, CONFERENCE_DATE, PARTICIPANTS, PLACE, FROM_TIME, TO_TIME, CONTENTS, RGST_MEMBER_ID, RGST_DTTM)\u000d\u000aVALUES\u000d\u000a(\u000d\u000a:CONFERENCE_ID, \u000d\u000a:G_PROJECT_ID, \u000d\u000a:TITLE, \u000d\u000aSTR_TO_DATE(:CONFERENCE_DATE, ''%Y-%m-%d''),\u000d\u000a:PARTICIPANTS,\u000d\u000a:PLACE,\u000d\u000aSTR_TO_DATE(:FROM_TIME, ''%h:%i %p''),\u000d\u000aSTR_TO_DATE(:TO_TIME, ''%h:%i %p''),\u000d\u000aREPLACE(REPLACE(:CONTENTS, ''\r\n'', ''''), ''\"'', ''\\"''),\u000d\u000a:LOGIN_MEMBER,\u000d\u000aCURRENT_TIMESTAMP\u000d\u000a)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_10','2013-09-16 20:53:24.815000',4,'DOCUMENT','true ','INSERT INTO CONFERENCE\u000d\u000a(ID, PROJECT_ID, TITLE, CONFERENCE_DATE, PARTICIPANTS, PLACE, FROM_TIME, TO_TIME, CONTENTS, RGST_MEMBER_ID, RGST_DTTM)\u000d\u000aVALUES\u000d\u000a(\u000d\u000a:CONFERENCE_ID, \u000d\u000a:G_PROJECT_ID, \u000d\u000a:TITLE, \u000d\u000aSTR_TO_DATE(:CONFERENCE_DATE, ''%Y-%m-%d''),\u000d\u000a:PARTICIPANTS,\u000d\u000a:PLACE,\u000d\u000aSTR_TO_DATE(:FROM_TIME, ''%h:%i %p''),\u000d\u000aSTR_TO_DATE(:TO_TIME, ''%h:%i %p''),\u000d\u000aREPLACE(REPLACE(REPLACE(:CONTENTS, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"''),\u000d\u000a:LOGIN_MEMBER,\u000d\u000aCURRENT_TIMESTAMP\u000d\u000a)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_11','2013-09-16 12:13:01.950000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_11','2013-09-16 12:13:26.947000',4,'DOCUMENT','true ','INSERT INTO SCHEDULE_ATTATCHMENT\u000d\u000a(PROJECT_SCHEDULE_ID, SEQ, CONTENT, FILE_NAME, SIZE, RGST_MEMBER_ID, MDF_DTTM)\u000d\u000aSELECT F.PROJECT_SCHEDULE_ID,\u000d\u000a       F.SEQ,\u000d\u000a       U.CONTENT,\u000d\u000a       U.FILE_NAME,\u000d\u000a       U.SIZE,\u000d\u000a       :LOGIN_MEMBER AS RGST_MEMBER_ID,\u000d\u000a       CURRENT_TIMESTAMP\u000d\u000a  FROM (SELECT :PROJECT_SCHEDULE_ID AS PROJECT_SCHEDULE_ID,\u000d\u000a               IF(MAX(F.SEQ) IS NULL , 0, MAX(F.SEQ)+1) AS SEQ,\u000d\u000a               :VALUE AS ID\u000d\u000a          FROM SCHEDULE_ATTATCHMENT F \u000d\u000a         WHERE F.PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID) AS F,\u000d\u000a       TMP_UPLOAD_FILE U\u000d\u000a WHERE F.ID = U.ID\u000d\u000a   AND U.ID = :VALUE;')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_11','2013-09-16 12:33:06.020000',4,'DOCUMENT','true ','INSERT INTO CONFERENCE_ATTATCHMENT\u000d\u000a(CONFERENCE_ID, SEQ, CONTENT, FILE_NAME, SIZE, RGST_MEMBER_ID, MDF_DTTM)\u000d\u000aSELECT F.CONFERENCE_ID,\u000d\u000a       F.SEQ,\u000d\u000a       U.CONTENT,\u000d\u000a       U.FILE_NAME,\u000d\u000a       U.SIZE,\u000d\u000a       :LOGIN_MEMBER AS RGST_MEMBER_ID,\u000d\u000a       CURRENT_TIMESTAMP\u000d\u000a  FROM (SELECT :CONFERENCE_ID AS CONFERENCE_ID,\u000d\u000a               IF(MAX(F.SEQ) IS NULL , 0, MAX(F.SEQ)+1) AS SEQ,\u000d\u000a               :VALUE AS ID\u000d\u000a          FROM CONFERENCE_ATTATCHMENT F \u000d\u000a         WHERE F.CONFERENCE_ID = :CONFERENCE_ID) AS F,\u000d\u000a       TMP_UPLOAD_FILE U\u000d\u000a WHERE F.ID = U.ID\u000d\u000a   AND U.ID = :VALUE;')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_11','2013-09-16 14:12:29.903000',4,'DOCUMENT','true ','INSERT INTO CONFERENCE_ATTATCHMENT\u000d\u000a(CONFERENCE_ID, SEQ, CONTENT, FILE_NAME, SIZE, RGST_MEMBER_ID, RGST_DTTM)\u000d\u000aSELECT F.CONFERENCE_ID,\u000d\u000a       F.SEQ,\u000d\u000a       U.CONTENT,\u000d\u000a       U.FILE_NAME,\u000d\u000a       U.SIZE,\u000d\u000a       :LOGIN_MEMBER AS RGST_MEMBER_ID,\u000d\u000a       CURRENT_TIMESTAMP\u000d\u000a  FROM (SELECT :CONFERENCE_ID AS CONFERENCE_ID,\u000d\u000a               IF(MAX(F.SEQ) IS NULL , 0, MAX(F.SEQ)+1) AS SEQ,\u000d\u000a               :VALUE AS ID\u000d\u000a          FROM CONFERENCE_ATTATCHMENT F \u000d\u000a         WHERE F.CONFERENCE_ID = :CONFERENCE_ID) AS F,\u000d\u000a       TMP_UPLOAD_FILE U\u000d\u000a WHERE F.ID = U.ID\u000d\u000a   AND U.ID = :VALUE;')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_12','2013-09-23 10:49:04.787000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_12','2013-09-23 10:53:21.069000',4,'DOCUMENT','false','INSERT INTO REPORT\u000d\u000aSELECT SEQ(''REPORT'') ID\u000d\u000a  FROM DUAL')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_12','2013-09-23 11:10:56.049000',4,'DOCUMENT','true ','INSERT INTO REPORT\u000d\u000aSELECT SEQ(''REPORT'') ID,\u000d\u000a       :G_PROJECT_ID PROJECT_ID,\u000d\u000a       :REPORT_TYPE REPORT_TYPE,\u000d\u000a       :RECEIVER RECEIVER,\u000d\u000a       REPLACE(REPLACE(REPLACE(:CURRENT, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"'') CURRENT,\u000d\u000a       REPLACE(REPLACE(REPLACE(:NEXT, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"'') NEXT,\u000d\u000a       REPLACE(REPLACE(REPLACE(:EVALUATION, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"'') EVALUATION,\u000d\u000a       REPLACE(REPLACE(REPLACE(:ISSUE, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"'') ISSUE,\u000d\u000a       :LOGIN_MEMBER RGST_MEMBER_ID,\u000d\u000a       CURRENT_TIMESTAMP RGST_DTTM\u000d\u000a  FROM DUAL')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_13','2013-09-26 10:42:47.118000',4,'DOCUMENT','true ','INSERT INTO DECISION_REQUEST\u000d\u000a(ID, PROJECT_ID, DECISION_STATUS, RECEIVER, DUE_DATE, TITLE, CONTENTS, RGST_MEMBER_ID, RGST_DTTM, MDF_MEMBER_ID, MDF_DTTM)\u000d\u000aVALUES\u000d\u000a(\u000d\u000a:ID, \u000d\u000a:G_PROJECT_ID, \u000d\u000a:DECISION_STATUS,\u000d\u000a:RECEIVER,\u000d\u000aSTR_TO_DATE(:DUE_DATE, ''%Y-%m-%d''),\u000d\u000a:TITLE, \u000d\u000aREPLACE(REPLACE(REPLACE(:CONTENTS, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"''),\u000d\u000a:LOGIN_MEMBER,\u000d\u000aCURRENT_TIMESTAMP,\u000d\u000a:LOGIN_MEMBER,\u000d\u000aCURRENT_TIMESTAMP\u000d\u000a)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_13','2013-09-26 10:45:28.287000',4,'DOCUMENT','true ','INSERT INTO DECISION_REQUEST\u000d\u000a(ID, PROJECT_ID, GROUP_ID, DECISION_STATUS, RECEIVER, DUE_DATE, TITLE, CONTENTS, RGST_MEMBER_ID, RGST_DTTM, MDF_MEMBER_ID, MDF_DTTM)\u000d\u000aVALUES\u000d\u000a(\u000d\u000a:ID, \u000d\u000a:G_PROJECT_ID, \u000d\u000a<dynamic parameter=":GROUP_ID" operator="==" value="null">\u000d\u000a:ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":GROUP_ID" operator="==" value="null">\u000d\u000a:GROUP_ID\u000d\u000a</dynamic>\u000d\u000a:DECISION_STATUS,\u000d\u000a:RECEIVER,\u000d\u000aSTR_TO_DATE(:DUE_DATE, ''%Y-%m-%d''),\u000d\u000a:TITLE, \u000d\u000aREPLACE(REPLACE(REPLACE(:CONTENTS, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"''),\u000d\u000a:LOGIN_MEMBER,\u000d\u000aCURRENT_TIMESTAMP,\u000d\u000a:LOGIN_MEMBER,\u000d\u000aCURRENT_TIMESTAMP\u000d\u000a)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_13','2013-09-26 10:46:28.499000',4,'DOCUMENT','true ','INSERT INTO DECISION_REQUEST\u000d\u000a(ID, PROJECT_ID, GROUP_ID, DECISION_STATUS, RECEIVER, DUE_DATE, TITLE, CONTENTS, RGST_MEMBER_ID, RGST_DTTM, MDF_MEMBER_ID, MDF_DTTM)\u000d\u000aVALUES\u000d\u000a(\u000d\u000a:ID, \u000d\u000a:G_PROJECT_ID, \u000d\u000a<dynamic parameter=":GROUP_ID" operator="==" value="null">\u000d\u000a:ID,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":GROUP_ID" operator="==" value="null">\u000d\u000a:GROUP_ID,\u000d\u000a</dynamic>\u000d\u000a:DECISION_STATUS,\u000d\u000a:RECEIVER,\u000d\u000aSTR_TO_DATE(:DUE_DATE, ''%Y-%m-%d''),\u000d\u000a:TITLE, \u000d\u000aREPLACE(REPLACE(REPLACE(:CONTENTS, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"''),\u000d\u000a:LOGIN_MEMBER,\u000d\u000aCURRENT_TIMESTAMP,\u000d\u000a:LOGIN_MEMBER,\u000d\u000aCURRENT_TIMESTAMP\u000d\u000a)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_13','2013-09-26 10:47:10.097000',4,'DOCUMENT','true ','INSERT INTO DECISION_REQUEST\u000d\u000a(ID, PROJECT_ID, GROUP_ID, DECISION_STATUS, RECEIVER, DUE_DATE, TITLE, CONTENTS, RGST_MEMBER_ID, RGST_DTTM, MDF_MEMBER_ID, MDF_DTTM)\u000d\u000aVALUES\u000d\u000a(\u000d\u000a:ID, \u000d\u000a:G_PROJECT_ID, \u000d\u000a<dynamic parameter=":GROUP_ID" operator="==" value="null">\u000d\u000a:ID,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":GROUP_ID" operator="!=" value="null">\u000d\u000a:GROUP_ID,\u000d\u000a</dynamic>\u000d\u000a:DECISION_STATUS,\u000d\u000a:RECEIVER,\u000d\u000aSTR_TO_DATE(:DUE_DATE, ''%Y-%m-%d''),\u000d\u000a:TITLE, \u000d\u000aREPLACE(REPLACE(REPLACE(:CONTENTS, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"''),\u000d\u000a:LOGIN_MEMBER,\u000d\u000aCURRENT_TIMESTAMP,\u000d\u000a:LOGIN_MEMBER,\u000d\u000aCURRENT_TIMESTAMP\u000d\u000a)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_14','2013-09-25 10:41:03.956000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_14','2013-09-25 10:42:35.725000',4,'DOCUMENT','true ','INSERT INTO CONFERENCE_ATTATCHMENT\u000d\u000a(CONFERENCE_ID, SEQ, CONTENT, FILE_NAME, SIZE, RGST_MEMBER_ID, RGST_DTTM)\u000d\u000aSELECT F.CONFERENCE_ID,\u000d\u000a       F.SEQ,\u000d\u000a       U.CONTENT,\u000d\u000a       U.FILE_NAME,\u000d\u000a       U.SIZE,\u000d\u000a       :LOGIN_MEMBER AS RGST_MEMBER_ID,\u000d\u000a       CURRENT_TIMESTAMP\u000d\u000a  FROM (SELECT :CONFERENCE_ID AS CONFERENCE_ID,\u000d\u000a               IF(MAX(F.SEQ) IS NULL , 0, MAX(F.SEQ)+1) AS SEQ,\u000d\u000a               :VALUE AS ID\u000d\u000a          FROM CONFERENCE_ATTATCHMENT F \u000d\u000a         WHERE F.CONFERENCE_ID = :CONFERENCE_ID) AS F,\u000d\u000a       TMP_UPLOAD_FILE U\u000d\u000a WHERE F.ID = U.ID\u000d\u000a   AND U.ID = :VALUE;')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_14','2013-09-25 10:43:17.960000',4,'DOCUMENT','true ','INSERT INTO DECISION_ATTATCHMENT\u000d\u000a(CONFERENCE_ID, SEQ, CONTENT, FILE_NAME, SIZE, RGST_MEMBER_ID, RGST_DTTM)\u000d\u000aSELECT F.CONFERENCE_ID,\u000d\u000a       F.SEQ,\u000d\u000a       U.CONTENT,\u000d\u000a       U.FILE_NAME,\u000d\u000a       U.SIZE,\u000d\u000a       :LOGIN_MEMBER AS RGST_MEMBER_ID,\u000d\u000a       CURRENT_TIMESTAMP\u000d\u000a  FROM (SELECT :CONFERENCE_ID AS CONFERENCE_ID,\u000d\u000a               IF(MAX(F.SEQ) IS NULL , 0, MAX(F.SEQ)+1) AS SEQ,\u000d\u000a               :VALUE AS ID\u000d\u000a          FROM CONFERENCE_ATTATCHMENT F \u000d\u000a         WHERE F.CONFERENCE_ID = :CONFERENCE_ID) AS F,\u000d\u000a       TMP_UPLOAD_FILE U\u000d\u000a WHERE F.ID = U.ID\u000d\u000a   AND U.ID = :VALUE;')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_14','2013-09-25 10:44:35.258000',4,'DOCUMENT','true ','INSERT INTO DECISION_ATTATCHMENT\u000d\u000a(DECISION_REQUEST_ID, SEQ, CONTENT, FILE_NAME, SIZE, RGST_MEMBER_ID, RGST_DTTM)\u000d\u000aSELECT F.DECISION_REQUEST_ID,\u000d\u000a       F.SEQ,\u000d\u000a       U.CONTENT,\u000d\u000a       U.FILE_NAME,\u000d\u000a       U.SIZE,\u000d\u000a       :LOGIN_MEMBER AS RGST_MEMBER_ID,\u000d\u000a       CURRENT_TIMESTAMP\u000d\u000a  FROM (SELECT :DECISION_REQUEST_ID AS DECISION_REQUEST_ID,\u000d\u000a               IF(MAX(F.SEQ) IS NULL , 0, MAX(F.SEQ)+1) AS SEQ,\u000d\u000a               :VALUE AS ID\u000d\u000a          FROM DECISION_ATTATCHMENT_ATTATCHMENT F \u000d\u000a         WHERE F.DECISION_REQUEST_ID = :ID) AS F,\u000d\u000a       TMP_UPLOAD_FILE U\u000d\u000a WHERE F.ID = U.ID\u000d\u000a   AND U.ID = :VALUE;')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_14','2013-09-25 10:44:52.254000',4,'DOCUMENT','true ','INSERT INTO DECISION_ATTATCHMENT\u000d\u000a(DECISION_REQUEST_ID, SEQ, CONTENT, FILE_NAME, SIZE, RGST_MEMBER_ID, RGST_DTTM)\u000d\u000aSELECT F.DECISION_REQUEST_ID,\u000d\u000a       F.SEQ,\u000d\u000a       U.CONTENT,\u000d\u000a       U.FILE_NAME,\u000d\u000a       U.SIZE,\u000d\u000a       :LOGIN_MEMBER AS RGST_MEMBER_ID,\u000d\u000a       CURRENT_TIMESTAMP\u000d\u000a  FROM (SELECT :DECISION_REQUEST_ID AS DECISION_REQUEST_ID,\u000d\u000a               IF(MAX(F.SEQ) IS NULL , 0, MAX(F.SEQ)+1) AS SEQ,\u000d\u000a               :VALUE AS ID\u000d\u000a          FROM DECISION_ATTATCHMENT F \u000d\u000a         WHERE F.DECISION_REQUEST_ID = :ID) AS F,\u000d\u000a       TMP_UPLOAD_FILE U\u000d\u000a WHERE F.ID = U.ID\u000d\u000a   AND U.ID = :VALUE;')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_14','2013-09-25 12:34:22.732000',4,'DOCUMENT','true ','INSERT INTO DECISION_ATTATCHMENT\u000d\u000a(DECISION_REQUEST_ID, SEQ, CONTENT, FILE_NAME, SIZE, RGST_MEMBER_ID, RGST_DTTM)\u000d\u000aSELECT F.DECISION_REQUEST_ID,\u000d\u000a       F.SEQ,\u000d\u000a       U.CONTENT,\u000d\u000a       U.FILE_NAME,\u000d\u000a       U.SIZE,\u000d\u000a       :LOGIN_MEMBER AS RGST_MEMBER_ID,\u000d\u000a       CURRENT_TIMESTAMP\u000d\u000a  FROM (SELECT :ID AS DECISION_REQUEST_ID,\u000d\u000a               IF(MAX(F.SEQ) IS NULL , 0, MAX(F.SEQ)+1) AS SEQ,\u000d\u000a               :VALUE AS ID\u000d\u000a          FROM DECISION_ATTATCHMENT F \u000d\u000a         WHERE F.DECISION_REQUEST_ID = :ID) AS F,\u000d\u000a       TMP_UPLOAD_FILE U\u000d\u000a WHERE F.ID = U.ID\u000d\u000a   AND U.ID = :VALUE;')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_15','2013-09-26 10:43:30.553000',4,'DOCUMENT','true ','INSERT INTO DECISION_REQUEST_H\u000d\u000a(DECISION_REQUEST_ID, MDF_DTTM, PROJECT_ID, DECISION_STATUS, RECEIVER, DUE_DATE, TITLE, CONTENTS, DECISION_DATE, RGST_MEMBER_ID, RGST_DTTM, MDF_MEMBER_ID)\u000d\u000aSELECT ID, \u000d\u000a       MDF_DTTM, \u000d\u000a       PROJECT_ID, \u000d\u000a       DECISION_STATUS, \u000d\u000a       RECEIVER, \u000d\u000a       DUE_DATE, \u000d\u000a       TITLE, \u000d\u000a       CONTENTS, \u000d\u000a       DECISION_DATE, \u000d\u000a       RGST_MEMBER_ID, \u000d\u000a       RGST_DTTM, \u000d\u000a       MDF_MEMBER_ID\u000d\u000a  FROM DECISION_REQUEST\u000d\u000a WHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_15','2013-09-26 10:43:59.678000',4,'DOCUMENT','true ','INSERT INTO DECISION_REQUEST_H\u000d\u000a(DECISION_REQUEST_ID, MDF_DTTM, PROJECT_ID, GROUP_ID, DECISION_STATUS, RECEIVER, DUE_DATE, TITLE, CONTENTS, DECISION_DATE, RGST_MEMBER_ID, RGST_DTTM, MDF_MEMBER_ID)\u000d\u000aSELECT ID, \u000d\u000a       MDF_DTTM, \u000d\u000a       PROJECT_ID, \u000d\u000a       GROUP_ID,\u000d\u000a       DECISION_STATUS, \u000d\u000a       RECEIVER, \u000d\u000a       DUE_DATE, \u000d\u000a       TITLE, \u000d\u000a       CONTENTS, \u000d\u000a       DECISION_DATE, \u000d\u000a       RGST_MEMBER_ID, \u000d\u000a       RGST_DTTM, \u000d\u000a       MDF_MEMBER_ID\u000d\u000a  FROM DECISION_REQUEST\u000d\u000a WHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_16','2013-09-26 17:15:27.689000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_16','2013-09-26 17:35:55.645000',4,'DOCUMENT','true ','INSERT INTO DECISION_REQUEST\u000d\u000a(ID, PROJECT_ID, GROUP_ID, DECISION_STATUS, RECEIVER, DUE_DATE, TITLE, CONTENTS, RGST_MEMBER_ID, RGST_DTTM, MDF_MEMBER_ID, MDF_DTTM)\u000d\u000aVALUES\u000d\u000a(\u000d\u000a:ID, \u000d\u000a:G_PROJECT_ID, \u000d\u000a<dynamic parameter=":GROUP_ID" operator="==" value="null">\u000d\u000a:ID,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":GROUP_ID" operator="!=" value="null">\u000d\u000a:GROUP_ID,\u000d\u000a</dynamic>\u000d\u000a:DECISION_STATUS,\u000d\u000a:RECEIVER,\u000d\u000aSTR_TO_DATE(:DUE_DATE, ''%Y-%m-%d''),\u000d\u000a:TITLE, \u000d\u000aREPLACE(REPLACE(REPLACE(:CONTENTS, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"''),\u000d\u000a:LOGIN_MEMBER,\u000d\u000aCURRENT_TIMESTAMP,\u000d\u000a:LOGIN_MEMBER,\u000d\u000aCURRENT_TIMESTAMP\u000d\u000a)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_16','2013-09-26 17:48:22.200000',4,'DOCUMENT','true ','INSERT INTO DECISION_REQUEST\u000d\u000a(ID, PROJECT_ID, GROUP_ID, DECISION_STATUS, RECEIVER, DUE_DATE, TITLE, CONTENTS, RGST_MEMBER_ID, RGST_DTTM, MDF_MEMBER_ID, MDF_DTTM)\u000d\u000aSELECT\u000d\u000a:ID, \u000d\u000a:G_PROJECT_ID, \u000d\u000aGROUP_ID,\u000d\u000a:DECISION_STATUS,\u000d\u000a:RECEIVER,\u000d\u000aSTR_TO_DATE(:DUE_DATE, ''%Y-%m-%d''),\u000d\u000a:TITLE, \u000d\u000aREPLACE(REPLACE(REPLACE(:OPINION, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"''),\u000d\u000a:LOGIN_MEMBER,\u000d\u000aCURRENT_TIMESTAMP,\u000d\u000a:LOGIN_MEMBER,\u000d\u000aCURRENT_TIMESTAMP\u000d\u000aFROM DECISION_REQUEST\u000d\u000aWHERE ID = :DECISION_REQUEST_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_16','2013-09-26 18:09:01.191000',4,'DOCUMENT','true ','INSERT INTO DECISION_REQUEST\u000d\u000a(ID, PROJECT_ID, GROUP_ID, DECISION_STATUS, RECEIVER, DUE_DATE, TITLE, CONTENTS, RGST_MEMBER_ID, RGST_DTTM, MDF_MEMBER_ID, MDF_DTTM)\u000d\u000aVALUES(\u000d\u000a:ID, \u000d\u000a:G_PROJECT_ID, \u000d\u000a:GROUP_ID,\u000d\u000a:DECISION_STATUS,\u000d\u000a:RECEIVER,\u000d\u000aSTR_TO_DATE(:DUE_DATE, ''%Y-%m-%d''),\u000d\u000a:TITLE, \u000d\u000aREPLACE(REPLACE(REPLACE(:OPINION, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"''),\u000d\u000a:LOGIN_MEMBER,\u000d\u000aCURRENT_TIMESTAMP,\u000d\u000a:LOGIN_MEMBER,\u000d\u000aCURRENT_TIMESTAMP\u000d\u000a)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_17','2013-09-26 18:23:48.953000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_17','2013-09-26 18:24:19.532000',4,'DOCUMENT','true ','INSERT INTO DECISION_REQUEST_H\u000d\u000a(DECISION_REQUEST_ID, MDF_DTTM, PROJECT_ID, GROUP_ID, DECISION_STATUS, RECEIVER, DUE_DATE, TITLE, CONTENTS, DECISION_DATE, RGST_MEMBER_ID, RGST_DTTM, MDF_MEMBER_ID)\u000d\u000aSELECT ID, \u000d\u000a       MDF_DTTM, \u000d\u000a       PROJECT_ID, \u000d\u000a       GROUP_ID,\u000d\u000a       DECISION_STATUS, \u000d\u000a       RECEIVER, \u000d\u000a       DUE_DATE, \u000d\u000a       TITLE, \u000d\u000a       CONTENTS, \u000d\u000a       DECISION_DATE, \u000d\u000a       RGST_MEMBER_ID, \u000d\u000a       RGST_DTTM, \u000d\u000a       MDF_MEMBER_ID\u000d\u000a  FROM DECISION_REQUEST\u000d\u000a WHERE GROUP_ID = :GROUP_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.insert.project_i_17','2013-09-26 18:25:48.273000',4,'DOCUMENT','true ','INSERT INTO DECISION_REQUEST_H\u000d\u000a(DECISION_REQUEST_ID, MDF_DTTM, PROJECT_ID, GROUP_ID, DECISION_STATUS, RECEIVER, DUE_DATE, TITLE, CONTENTS, DECISION_DATE, RGST_MEMBER_ID, RGST_DTTM, MDF_MEMBER_ID)\u000d\u000aSELECT ID, \u000d\u000a       MDF_DTTM, \u000d\u000a       PROJECT_ID, \u000d\u000a       GROUP_ID,\u000d\u000a       DECISION_STATUS, \u000d\u000a       RECEIVER, \u000d\u000a       DUE_DATE, \u000d\u000a       TITLE, \u000d\u000a       CONTENTS, \u000d\u000a       DECISION_DATE, \u000d\u000a       RGST_MEMBER_ID, \u000d\u000a       RGST_DTTM, \u000d\u000a       MDF_MEMBER_ID\u000d\u000a  FROM DECISION_REQUEST\u000d\u000a WHERE GROUP_ID = (SELECT GROUP_ID FROM DECISION_REQUEST WHERE ID = :ID)')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select','2013-08-07 17:49:24.752000',3,'FOLDER','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.porject_r_14','2013-08-20 12:19:25.658000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_01','2013-08-09 09:44:49.762000',4,'DOCUMENT','true ','SELECT PRJ.ID, PRJ.TITLE, MANAGER.ID MANAGER_ID, MANAGER.NAME MANAGER_NAME, PRJ.FROM_DATE, PRJ.TO_DATE, CODE.NAME STATUS, \u000d\u000a       REGISTER.ID REGISTER_ID, REGISTER.NAME REGISTER_NAME, DATE_FORMAT(PRJ.RGST_DTTM,''%Y-%m-%d'') AS RGST_DTTM\u000d\u000a  FROM PROJECT PRJ, MEMBER AS MANAGER, MEMBER AS REGISTER, CODE\u000d\u000a WHERE 1=1\u000d\u000a   AND PRJ.MANAGER = MANAGER.ID\u000d\u000a   AND PRJ.RGST_MEMBER_ID = REGISTER.ID\u000d\u000a   AND PRJ.PRJ_STATUS = CODE.ID\u000d\u000a   AND PRJ.USE_YN = ''Y''\u000d\u000a<dynamic parameter=":sSearch" operator="!=" value="">\u000d\u000a   AND (PRJ.ID      LIKE CONCAT(CONCAT(''%'', :sSearch), ''%'') OR\u000d\u000a        PRJ.TITLE   LIKE CONCAT(CONCAT(''%'', :sSearch), ''%''))\u000d\u000a</dynamic>\u000d\u000aORDER BY \u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a      PRJ.RGST_DTTM DESC\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a       PRJ.ID\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a       PRJ.TITLE\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a       MANAGER_NAME\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a       PRJ.FROM_DATE\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a       PRJ.TO_DATE\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="5">\u000d\u000a       STATUS\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="6">\u000d\u000a       REGISTER_NAME \u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":iSortCol_0" operator="==" value="7">\u000d\u000a       PRJ.RGST_DTTM\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a       ASC\u000d\u000a    </dynamic>\u000d\u000a    <dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a       DESC\u000d\u000a    </dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_02','2013-08-08 15:16:30.666000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_02','2013-08-08 15:17:13.452000',4,'DOCUMENT','true ','SELECT IF(COUNT(*) > 0, ''Y'', ''N'') DUP_YN\u000d\u000aFROM PROJECT\u000d\u000aWHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_03','2013-08-09 09:47:41.241000',4,'DOCUMENT','true ','SELECT PRJ.ID, PRJ.TITLE, \u000d\u000a       PRJ.SUMMARY, \u000d\u000a       PRJ.MANAGER MANAGER,\u000d\u000a       MBR.NAME MANAGER_NAME, \u000d\u000a       PRJ.MANAGER_ORGANIZATION_NAME ORGANIZATION_NAME, \u000d\u000a       PRJ.MANAGER_ROLE_NAME ROLE_NAME, \u000d\u000a       ACC.MAIL,\u000d\u000a       MBR.PHONE,\u000d\u000a       MBR.MOBILE_PHONE,\u000d\u000a       MBR.JOIN_DATE,\u000d\u000a       IF(MBR.RETIRED_DATE = '''', ''\uadfc\ubb34\uc911'',IF(MBR.RETIRED_DATE IS NULL, "\uadfc\ubb34\uc911", MBR.RETIRED_DATE)) RETIRED_DATE,\u000d\u000a       MBR.PHOTO,\u000d\u000a       CONCAT(PRJ.BUDGET_AMOUNT, '' \uc6d0''),\u000d\u000a       PRJ.FROM_DATE, \u000d\u000a       PRJ.TO_DATE, \u000d\u000a       CODE.NAME PRJ_STATUS, \u000d\u000a       PRJ.RGST_MEMBER_ID, \u000d\u000a       DATE_FORMAT(PRJ.RGST_DTTM,''%Y-%m-%d'') RGST_DTTM, \u000d\u000a       PRJ.MDF_MEMBER_ID, \u000d\u000a       DATE_FORMAT(PRJ.MDF_DTTM,''%Y-%m-%d'') MDF_DTTM\u000d\u000aFROM PROJECT PRJ, CODE, MEMBER MBR, ACCESS_MEMBER ACC\u000d\u000aWHERE 1=1\u000d\u000aAND PRJ.PRJ_STATUS = CODE.ID\u000d\u000aAND PRJ.MANAGER = MBR.ID\u000d\u000aAND MBR.ID = ACC.ID\u000d\u000aAND PRJ.USE_YN = ''Y''\u000d\u000aAND PRJ.ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_03','2013-08-09 09:48:51.158000',4,'DOCUMENT','true ','SELECT PRJ.ID, PRJ.TITLE, \u000d\u000a       PRJ.SUMMARY, \u000d\u000a       PRJ.MANAGER MANAGER,\u000d\u000a       MBR.NAME MANAGER_NAME, \u000d\u000a       PRJ.MANAGER_ORGANIZATION_NAME ORGANIZATION_NAME, \u000d\u000a       PRJ.MANAGER_ROLE_NAME ROLE_NAME, \u000d\u000a       ACC.MAIL,\u000d\u000a       MBR.PHONE,\u000d\u000a       MBR.MOBILE_PHONE,\u000d\u000a       MBR.JOIN_DATE,\u000d\u000a       IF(MBR.RETIRED_DATE = '''', ''\uadfc\ubb34\uc911'',IF(MBR.RETIRED_DATE IS NULL, "\uadfc\ubb34\uc911", MBR.RETIRED_DATE)) RETIRED_DATE,\u000d\u000a       MBR.PHOTO,\u000d\u000a       CONCAT(PRJ.BUDGET_AMOUNT, '' \uc6d0'') BUDGET_AMOUNT,\u000d\u000a       PRJ.FROM_DATE, \u000d\u000a       PRJ.TO_DATE, \u000d\u000a       CODE.NAME PRJ_STATUS, \u000d\u000a       PRJ.RGST_MEMBER_ID, \u000d\u000a       DATE_FORMAT(PRJ.RGST_DTTM,''%Y-%m-%d'') RGST_DTTM, \u000d\u000a       PRJ.MDF_MEMBER_ID, \u000d\u000a       DATE_FORMAT(PRJ.MDF_DTTM,''%Y-%m-%d'') MDF_DTTM\u000d\u000aFROM PROJECT PRJ, CODE, MEMBER MBR, ACCESS_MEMBER ACC\u000d\u000aWHERE 1=1\u000d\u000aAND PRJ.PRJ_STATUS = CODE.ID\u000d\u000aAND PRJ.MANAGER = MBR.ID\u000d\u000aAND MBR.ID = ACC.ID\u000d\u000aAND PRJ.USE_YN = ''Y''\u000d\u000aAND PRJ.ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_03','2013-08-09 09:50:46.292000',4,'DOCUMENT','true ','SELECT PRJ.ID, PRJ.TITLE, \u000d\u000a       PRJ.SUMMARY, \u000d\u000a       PRJ.MANAGER MANAGER,\u000d\u000a       MBR.NAME MANAGER_NAME, \u000d\u000a       PRJ.MANAGER_ORGANIZATION_NAME ORGANIZATION_NAME, \u000d\u000a       PRJ.MANAGER_ROLE_NAME ROLE_NAME, \u000d\u000a       ACC.MAIL,\u000d\u000a       MBR.PHONE,\u000d\u000a       MBR.MOBILE_PHONE,\u000d\u000a       MBR.JOIN_DATE,\u000d\u000a       IF(MBR.RETIRED_DATE = '''', ''\uadfc\ubb34\uc911'',IF(MBR.RETIRED_DATE IS NULL, "\uadfc\ubb34\uc911", MBR.RETIRED_DATE)) RETIRED_DATE,\u000d\u000a       MBR.PHOTO,\u000d\u000a       CONCAT(FORMAT(\u3156\uaebc.BUDGET_AMOUNT, 0), '' \uc6d0'') BUDGET_AMOUNT,\u000d\u000a       PRJ.FROM_DATE, \u000d\u000a       PRJ.TO_DATE, \u000d\u000a       CODE.NAME PRJ_STATUS, \u000d\u000a       PRJ.RGST_MEMBER_ID, \u000d\u000a       DATE_FORMAT(PRJ.RGST_DTTM,''%Y-%m-%d'') RGST_DTTM, \u000d\u000a       PRJ.MDF_MEMBER_ID, \u000d\u000a       DATE_FORMAT(PRJ.MDF_DTTM,''%Y-%m-%d'') MDF_DTTM\u000d\u000aFROM PROJECT PRJ, CODE, MEMBER MBR, ACCESS_MEMBER ACC\u000d\u000aWHERE 1=1\u000d\u000aAND PRJ.PRJ_STATUS = CODE.ID\u000d\u000aAND PRJ.MANAGER = MBR.ID\u000d\u000aAND MBR.ID = ACC.ID\u000d\u000aAND PRJ.USE_YN = ''Y''\u000d\u000aAND PRJ.ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_03','2013-08-09 09:50:51.221000',4,'DOCUMENT','true ','SELECT PRJ.ID, PRJ.TITLE, \u000d\u000a       PRJ.SUMMARY, \u000d\u000a       PRJ.MANAGER MANAGER,\u000d\u000a       MBR.NAME MANAGER_NAME, \u000d\u000a       PRJ.MANAGER_ORGANIZATION_NAME ORGANIZATION_NAME, \u000d\u000a       PRJ.MANAGER_ROLE_NAME ROLE_NAME, \u000d\u000a       ACC.MAIL,\u000d\u000a       MBR.PHONE,\u000d\u000a       MBR.MOBILE_PHONE,\u000d\u000a       MBR.JOIN_DATE,\u000d\u000a       IF(MBR.RETIRED_DATE = '''', ''\uadfc\ubb34\uc911'',IF(MBR.RETIRED_DATE IS NULL, "\uadfc\ubb34\uc911", MBR.RETIRED_DATE)) RETIRED_DATE,\u000d\u000a       MBR.PHOTO,\u000d\u000a       CONCAT(FORMAT(PRJ.BUDGET_AMOUNT, 0), '' \uc6d0'') BUDGET_AMOUNT,\u000d\u000a       PRJ.FROM_DATE, \u000d\u000a       PRJ.TO_DATE, \u000d\u000a       CODE.NAME PRJ_STATUS, \u000d\u000a       PRJ.RGST_MEMBER_ID, \u000d\u000a       DATE_FORMAT(PRJ.RGST_DTTM,''%Y-%m-%d'') RGST_DTTM, \u000d\u000a       PRJ.MDF_MEMBER_ID, \u000d\u000a       DATE_FORMAT(PRJ.MDF_DTTM,''%Y-%m-%d'') MDF_DTTM\u000d\u000aFROM PROJECT PRJ, CODE, MEMBER MBR, ACCESS_MEMBER ACC\u000d\u000aWHERE 1=1\u000d\u000aAND PRJ.PRJ_STATUS = CODE.ID\u000d\u000aAND PRJ.MANAGER = MBR.ID\u000d\u000aAND MBR.ID = ACC.ID\u000d\u000aAND PRJ.USE_YN = ''Y''\u000d\u000aAND PRJ.ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_03','2013-08-09 09:53:28.632000',4,'DOCUMENT','true ','SELECT PRJ.ID, PRJ.TITLE, \u000d\u000a       PRJ.SUMMARY, \u000d\u000a       PRJ.MANAGER MANAGER,\u000d\u000a       MBR.NAME MANAGER_NAME, \u000d\u000a       PRJ.MANAGER_ORGANIZATION_NAME ORGANIZATION_NAME, \u000d\u000a       PRJ.MANAGER_ROLE_NAME ROLE_NAME, \u000d\u000a       ACC.MAIL,\u000d\u000a       MBR.PHONE,\u000d\u000a       MBR.MOBILE_PHONE,\u000d\u000a       MBR.JOIN_DATE,\u000d\u000a       IF(MBR.RETIRED_DATE = '''', ''\uadfc\ubb34\uc911'',IF(MBR.RETIRED_DATE IS NULL, "\uadfc\ubb34\uc911", MBR.RETIRED_DATE)) RETIRED_DATE,\u000d\u000a       MBR.PHOTO,\u000d\u000a       CONCAT(FORMAT(PRJ.BUDGET_AMOUNT, 0), '' \uc6d0'') BUDGET_AMOUNT,\u000d\u000a       PRJ.FROM_DATE, \u000d\u000a       PRJ.TO_DATE, \u000d\u000a       CODE.NAME PRJ_STATUS, \u000d\u000a       RGST.NAME, \u000d\u000a       DATE_FORMAT(PRJ.RGST_DTTM,''%Y-%m-%d'') RGST_DTTM, \u000d\u000a       MDF.NAME, \u000d\u000a       DATE_FORMAT(PRJ.MDF_DTTM,''%Y-%m-%d'') MDF_DTTM\u000d\u000aFROM PROJECT PRJ, CODE, MEMBER MBR, ACCESS_MEMBER ACC, MEMBER RGST, MEMBER MDF\u000d\u000aWHERE 1=1\u000d\u000aAND PRJ.PRJ_STATUS = CODE.ID\u000d\u000aAND PRJ.MANAGER = MBR.ID\u000d\u000aAND PRJ.RGST_MEMBER_ID = RGST.ID\u000d\u000aAND PRJ.MDF_MEMBER_ID = MDF.ID\u000d\u000aAND MBR.ID = ACC.ID\u000d\u000aAND PRJ.USE_YN = ''Y''\u000d\u000aAND PRJ.ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_03','2013-08-09 09:54:27.206000',4,'DOCUMENT','true ','SELECT PRJ.ID, PRJ.TITLE, \u000d\u000a       PRJ.SUMMARY, \u000d\u000a       PRJ.MANAGER MANAGER,\u000d\u000a       MBR.NAME MANAGER_NAME, \u000d\u000a       PRJ.MANAGER_ORGANIZATION_NAME ORGANIZATION_NAME, \u000d\u000a       PRJ.MANAGER_ROLE_NAME ROLE_NAME, \u000d\u000a       ACC.MAIL,\u000d\u000a       MBR.PHONE,\u000d\u000a       MBR.MOBILE_PHONE,\u000d\u000a       MBR.JOIN_DATE,\u000d\u000a       IF(MBR.RETIRED_DATE = '''', ''\uadfc\ubb34\uc911'',IF(MBR.RETIRED_DATE IS NULL, "\uadfc\ubb34\uc911", MBR.RETIRED_DATE)) RETIRED_DATE,\u000d\u000a       MBR.PHOTO,\u000d\u000a       CONCAT(FORMAT(PRJ.BUDGET_AMOUNT, 0), '' \uc6d0'') BUDGET_AMOUNT,\u000d\u000a       PRJ.FROM_DATE, \u000d\u000a       PRJ.TO_DATE, \u000d\u000a       CODE.NAME PRJ_STATUS, \u000d\u000a       RGST.NAME RGST_NAME, \u000d\u000a       DATE_FORMAT(PRJ.RGST_DTTM,''%Y-%m-%d'') RGST_DTTM, \u000d\u000a       MDF.NAME MDF_NAME, \u000d\u000a       DATE_FORMAT(PRJ.MDF_DTTM,''%Y-%m-%d'') MDF_DTTM\u000d\u000aFROM PROJECT PRJ, CODE, MEMBER MBR, ACCESS_MEMBER ACC, MEMBER RGST, MEMBER MDF\u000d\u000aWHERE 1=1\u000d\u000aAND PRJ.PRJ_STATUS = CODE.ID\u000d\u000aAND PRJ.MANAGER = MBR.ID\u000d\u000aAND PRJ.RGST_MEMBER_ID = RGST.ID\u000d\u000aAND PRJ.MDF_MEMBER_ID = MDF.ID\u000d\u000aAND MBR.ID = ACC.ID\u000d\u000aAND PRJ.USE_YN = ''Y''\u000d\u000aAND PRJ.ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_03','2013-08-09 14:52:00.100000',4,'DOCUMENT','true ','SELECT PRJ.ID, PRJ.TITLE, \u000d\u000a       PRJ.SUMMARY, \u000d\u000a       PRJ.MANAGER MANAGER,\u000d\u000a       MBR.NAME MANAGER_NAME, \u000d\u000a       PRJ.MANAGER_ORGANIZATION_NAME ORGANIZATION_NAME, \u000d\u000a       PRJ.MANAGER_ROLE_NAME ROLE_NAME, \u000d\u000a       ACC.MAIL,\u000d\u000a       MBR.PHONE,\u000d\u000a       MBR.MOBILE_PHONE,\u000d\u000a       MBR.JOIN_DATE,\u000d\u000a       IF(MBR.RETIRED_DATE = '''', ''\uadfc\ubb34\uc911'',IF(MBR.RETIRED_DATE IS NULL, "\uadfc\ubb34\uc911", MBR.RETIRED_DATE)) RETIRED_DATE,\u000d\u000a       MBR.PHOTO,\u000d\u000a       CONCAT(FORMAT(PRJ.BUDGET_AMOUNT, 0), '' \uc6d0'') BUDGET_AMOUNT,\u000d\u000a       PRJ.FROM_DATE, \u000d\u000a       PRJ.TO_DATE, \u000d\u000a       CODE.NAME PRJ_STATUS, \u000d\u000a       PRJ.PRJ_STATUS PRJ_STATUS_CD,\u000d\u000a       RGST.NAME RGST_NAME, \u000d\u000a       DATE_FORMAT(PRJ.RGST_DTTM,''%Y-%m-%d'') RGST_DTTM, \u000d\u000a       MDF.NAME MDF_NAME, \u000d\u000a       DATE_FORMAT(PRJ.MDF_DTTM,''%Y-%m-%d'') MDF_DTTM\u000d\u000aFROM PROJECT PRJ, CODE, MEMBER MBR, ACCESS_MEMBER ACC, MEMBER RGST, MEMBER MDF\u000d\u000aWHERE 1=1\u000d\u000aAND PRJ.PRJ_STATUS = CODE.ID\u000d\u000aAND PRJ.MANAGER = MBR.ID\u000d\u000aAND PRJ.RGST_MEMBER_ID = RGST.ID\u000d\u000aAND PRJ.MDF_MEMBER_ID = MDF.ID\u000d\u000aAND MBR.ID = ACC.ID\u000d\u000aAND PRJ.USE_YN = ''Y''\u000d\u000aAND PRJ.ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_04','2013-08-12 14:16:47.710000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_04','2013-08-12 14:17:47.811000',4,'DOCUMENT','true ','SELECT MBR.ID, MBR.NAME, MBR.PHONE, MBR.MOBILE_PHONE, ACC.MAIL, MEMBER_TYPE.NAME, ACC.EXPIRE_DATE,\u000d\u000aORG.NAME, ROLE_NAME.NAME ROLE_NAME\u000d\u000aFROM MEMBER MBR, ACCESS_MEMBER ACC, CODE MEMBER_TYPE, CODE ROLE_NAME, ROLE ROLE, ORGANIZATION ORG, PROJECT_MEMBER PMB\u000d\u000aWHERE MBR.ID = ACC.ID\u000d\u000aAND ACC.MEMBER_TYPE = MEMBER_TYPE.ID\u000d\u000aAND ROLE.ORGANIZATION_ID = ORG.ID\u000d\u000aAND ROLE.MEMBER_ID = MBR.ID\u000d\u000aAND ROLE.ROLE_CODE = ROLE_NAME.ID\u000d\u000aAND PMB.MEMBER_ID = MBR.ID\u000d\u000aAND MBR.USE_YN = ''Y''\u000d\u000aAND ACC.USE_YN = ''Y''\u000d\u000aAND ROLE.USE_YN = ''Y''\u000d\u000aAND ORG.USE_YN = ''Y''\u000d\u000aAND PMB.PROJECT_ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_04','2013-08-12 14:18:49.689000',4,'DOCUMENT','true ','SELECT MBR.ID, MBR.NAME, MBR.PHONE, MBR.MOBILE_PHONE, ACC.MAIL, MEMBER_TYPE.NAME, ACC.EXPIRE_DATE,\u000d\u000aORG.NAME, ROLE_NAME.NAME ROLE_NAME\u000d\u000aFROM MEMBER MBR, ACCESS_MEMBER ACC, CODE MEMBER_TYPE, CODE ROLE_NAME, ROLE ROLE, ORGANIZATION ORG, PROJECT_MEMBER PMB\u000d\u000aWHERE MBR.ID = ACC.ID\u000d\u000aAND ACC.MEMBER_TYPE = MEMBER_TYPE.ID\u000d\u000aAND ROLE.ORGANIZATION_ID = ORG.ID\u000d\u000aAND ROLE.MEMBER_ID = MBR.ID\u000d\u000aAND ROLE.ROLE_CODE = ROLE_NAME.ID\u000d\u000aAND PMB.MEMBER_ID = MBR.ID\u000d\u000aAND MBR.USE_YN = ''Y''\u000d\u000aAND ACC.USE_YN = ''Y''\u000d\u000aAND ROLE.USE_YN = ''Y''\u000d\u000aAND ORG.USE_YN = ''Y''\u000d\u000aAND PMB.PROJECT_ID = :PROJECT_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_04','2013-08-12 14:22:10.719000',4,'DOCUMENT','true ','SELECT MBR.ID, MBR.NAME, MBR.PHONE, MBR.MOBILE_PHONE, ACC.MAIL, MEMBER_TYPE.NAME MEMBER_TYPE, ACC.EXPIRE_DATE,\u000d\u000aORG.NAME ORGANIZATION_NAME, ROLE_NAME.NAME ROLE_NAME\u000d\u000aFROM MEMBER MBR, ACCESS_MEMBER ACC, CODE MEMBER_TYPE, CODE ROLE_NAME, ROLE ROLE, ORGANIZATION ORG, PROJECT_MEMBER PMB\u000d\u000aWHERE MBR.ID = ACC.ID\u000d\u000aAND ACC.MEMBER_TYPE = MEMBER_TYPE.ID\u000d\u000aAND ROLE.ORGANIZATION_ID = ORG.ID\u000d\u000aAND ROLE.MEMBER_ID = MBR.ID\u000d\u000aAND ROLE.ROLE_CODE = ROLE_NAME.ID\u000d\u000aAND PMB.MEMBER_ID = MBR.ID\u000d\u000aAND MBR.USE_YN = ''Y''\u000d\u000aAND ACC.USE_YN = ''Y''\u000d\u000aAND ROLE.USE_YN = ''Y''\u000d\u000aAND ORG.USE_YN = ''Y''\u000d\u000aAND PMB.PROJECT_ID = :PROJECT_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_04','2013-08-12 14:25:00.031000',4,'DOCUMENT','true ','SELECT MBR.ID, MBR.NAME, MBR.PHONE, MBR.MOBILE_PHONE, ACC.MAIL, MEMBER_TYPE.NAME MEMBER_TYPE, ACC.EXPIRE_DATE,\u000d\u000aORG.NAME ORGANIZATION_NAME, ROLE_NAME.NAME ROLE_NAME\u000d\u000aFROM MEMBER MBR, ACCESS_MEMBER ACC, CODE MEMBER_TYPE, CODE ROLE_NAME, ROLE ROLE, ORGANIZATION ORG, PROJECT_MEMBER PMB\u000d\u000aWHERE MBR.ID = ACC.ID\u000d\u000aAND ACC.MEMBER_TYPE = MEMBER_TYPE.ID\u000d\u000aAND ROLE.ORGANIZATION_ID = ORG.ID\u000d\u000aAND ROLE.MEMBER_ID = MBR.ID\u000d\u000aAND ROLE.ROLE_CODE = ROLE_NAME.ID\u000d\u000aAND PMB.MEMBER_ID = MBR.ID\u000d\u000aAND MBR.USE_YN = ''Y''\u000d\u000aAND ACC.USE_YN = ''Y''\u000d\u000aAND ROLE.USE_YN = ''Y''\u000d\u000aAND ORG.USE_YN = ''Y''\u000d\u000aAND PMB.PROJECT_ID = :PROJECT_ID\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_04','2013-08-12 14:29:58.466000',4,'DOCUMENT','true ','SELECT MBR.ID, MBR.NAME, MBR.PHONE, MBR.MOBILE_PHONE, ACC.MAIL, MEMBER_TYPE.NAME MEMBER_TYPE, ACC.EXPIRE_DATE,\u000d\u000aORG.NAME ORGANIZATION_NAME, ROLE_NAME.NAME ROLE_NAME\u000d\u000aFROM MEMBER MBR, ACCESS_MEMBER ACC, CODE MEMBER_TYPE, CODE ROLE_NAME, ROLE ROLE, ORGANIZATION ORG, PROJECT_MEMBER PMB\u000d\u000aWHERE MBR.ID = ACC.ID\u000d\u000aAND ACC.MEMBER_TYPE = MEMBER_TYPE.ID\u000d\u000aAND ROLE.ORGANIZATION_ID = ORG.ID\u000d\u000aAND ROLE.MEMBER_ID = MBR.ID\u000d\u000aAND ROLE.ROLE_CODE = ROLE_NAME.ID\u000d\u000aAND PMB.MEMBER_ID = MBR.ID\u000d\u000aAND MBR.USE_YN = ''Y''\u000d\u000aAND ACC.USE_YN = ''Y''\u000d\u000aAND ROLE.USE_YN = ''Y''\u000d\u000aAND ORG.USE_YN = ''Y''\u000d\u000aAND PMB.PROJECT_ID = :PROJECT_ID\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMBR.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMBR.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ORGANIZATION_NAME">\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ROLE_NAME">\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_04','2013-08-12 14:31:25.913000',4,'DOCUMENT','true ','SELECT MBR.ID, MBR.NAME, MBR.PHONE, MBR.MOBILE_PHONE, ACC.MAIL, MEMBER_TYPE.NAME MEMBER_TYPE, ACC.EXPIRE_DATE,\u000d\u000aORG.NAME ORGANIZATION_NAME, ROLE_NAME.NAME ROLE_NAME\u000d\u000aFROM MEMBER MBR, ACCESS_MEMBER ACC, CODE MEMBER_TYPE, CODE ROLE_NAME, ROLE ROLE, ORGANIZATION ORG, PROJECT_MEMBER PMB\u000d\u000aWHERE MBR.ID = ACC.ID\u000d\u000aAND ACC.MEMBER_TYPE = MEMBER_TYPE.ID\u000d\u000aAND ROLE.ORGANIZATION_ID = ORG.ID\u000d\u000aAND ROLE.MEMBER_ID = MBR.ID\u000d\u000aAND ROLE.ROLE_CODE = ROLE_NAME.ID\u000d\u000aAND PMB.MEMBER_ID = MBR.ID\u000d\u000aAND MBR.USE_YN = ''Y''\u000d\u000aAND ACC.USE_YN = ''Y''\u000d\u000aAND ROLE.USE_YN = ''Y''\u000d\u000aAND ORG.USE_YN = ''Y''\u000d\u000aAND PMB.PROJECT_ID = :PROJECT_ID\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMBR.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMBR.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMBR.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACC.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aMEMBER_TYPE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACC.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ORGANIZATION_NAME">\u000d\u000aORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ROLE_NAME">\u000d\u000aROLE_NAME.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_04','2013-08-12 15:34:49.453000',4,'DOCUMENT','true ','SELECT MBR.ID, MBR.NAME, MBR.PHONE, MBR.MOBILE_PHONE, ACC.MAIL, MEMBER_TYPE.NAME MEMBER_TYPE, ACC.EXPIRE_DATE,\u000d\u000aORG.NAME ORGANIZATION_NAME, ROLE_NAME.NAME ROLE_NAME\u000d\u000aFROM MEMBER MBR, ACCESS_MEMBER ACC, CODE MEMBER_TYPE, CODE ROLE_NAME, ROLE ROLE, ORGANIZATION ORG, PROJECT_MEMBER PMB\u000d\u000aWHERE MBR.ID = ACC.ID\u000d\u000aAND ACC.MEMBER_TYPE = MEMBER_TYPE.ID\u000d\u000aAND ROLE.ORGANIZATION_ID = ORG.ID\u000d\u000aAND ROLE.MEMBER_ID = MBR.ID\u000d\u000aAND ROLE.ROLE_CODE = ROLE_NAME.ID\u000d\u000aAND PMB.MEMBER_ID = MBR.ID\u000d\u000aAND MBR.USE_YN = ''Y''\u000d\u000aAND (MBR.RETIRED_DATE IS NULL OR MBR.RETIRED_DATE = "" OR MBR.RETIRED_DATE > CURRENT_DATE)\u000d\u000aAND ACC.USE_YN = ''Y''\u000d\u000aAND ROLE.USE_YN = ''Y''\u000d\u000aAND ORG.USE_YN = ''Y''\u000d\u000aAND PMB.PROJECT_ID = :PROJECT_ID\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMBR.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMBR.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMBR.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACC.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aMEMBER_TYPE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACC.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ORGANIZATION_NAME">\u000d\u000aORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ROLE_NAME">\u000d\u000aROLE_NAME.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_04','2013-08-12 15:57:06.542000',4,'DOCUMENT','true ','SELECT MBR.ID, MBR.NAME, MBR.PHONE, MBR.MOBILE_PHONE, ACC.MAIL, MEMBER_TYPE.NAME MEMBER_TYPE, ACC.EXPIRE_DATE,\u000d\u000aORG.NAME ORGANIZATION_NAME, ROLE_NAME.NAME ROLE_NAME\u000d\u000aFROM MEMBER MBR, ACCESS_MEMBER ACC, CODE MEMBER_TYPE, CODE ROLE_NAME, ROLE ROLE, ORGANIZATION ORG, PROJECT_MEMBER PMB\u000d\u000aWHERE MBR.ID = ACC.ID\u000d\u000aAND ACC.MEMBER_TYPE = MEMBER_TYPE.ID\u000d\u000aAND ROLE.ORGANIZATION_ID = ORG.ID\u000d\u000aAND ROLE.MEMBER_ID = MBR.ID\u000d\u000aAND ROLE.ROLE_CODE = ROLE_NAME.ID\u000d\u000aAND PMB.MEMBER_ID = MBR.ID\u000d\u000aAND MBR.USE_YN = ''Y''\u000d\u000aAND (MBR.RETIRED_DATE IS NULL OR MBR.RETIRED_DATE = '''' OR MBR.RETIRED_DATE > CURRENT_DATE)\u000d\u000aAND ACC.USE_YN = ''Y''\u000d\u000aAND ROLE.USE_YN = ''Y''\u000d\u000aAND ORG.USE_YN = ''Y''\u000d\u000aAND PMB.PROJECT_ID = :PROJECT_ID\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMBR.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMBR.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMBR.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACC.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aMEMBER_TYPE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACC.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ORGANIZATION_NAME">\u000d\u000aORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ROLE_NAME">\u000d\u000aROLE_NAME.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_04','2013-08-12 19:17:19.860000',4,'DOCUMENT','true ','SELECT MBR.ID, MBR.NAME, MBR.PHONE, MBR.MOBILE_PHONE, ACC.MAIL, MEMBER_TYPE.NAME MEMBER_TYPE, ACC.EXPIRE_DATE,\u000d\u000aORG.NAME ORGANIZATION_NAME, ROLE_NAME.NAME ROLE_NAME\u000d\u000aFROM MEMBER MBR, ACCESS_MEMBER ACC, CODE MEMBER_TYPE, CODE ROLE_NAME, ROLE ROLE, ORGANIZATION ORG, PROJECT_MEMBER PMB\u000d\u000aWHERE MBR.ID = ACC.ID\u000d\u000aAND ACC.MEMBER_TYPE = MEMBER_TYPE.ID\u000d\u000aAND ROLE.ORGANIZATION_ID = ORG.ID\u000d\u000aAND ROLE.MEMBER_ID = MBR.ID\u000d\u000aAND ROLE.ROLE_CODE = ROLE_NAME.ID\u000d\u000aAND PMB.MEMBER_ID = MBR.ID\u000d\u000aAND MBR.USE_YN = ''Y''\u000d\u000aAND (MBR.RETIRED_DATE IS NULL OR MBR.RETIRED_DATE = '''' OR MBR.RETIRED_DATE > CURRENT_DATE)\u000d\u000aAND ACC.USE_YN = ''Y''\u000d\u000aAND ROLE.USE_YN = ''Y''\u000d\u000aAND ORG.USE_YN = ''Y''\u000d\u000aAND PMB.PROJECT_ID = :PROJECT_ID\u000d\u000aAND PMB.ORGANIZATION_ID = :ORGANIZATION_ID\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMBR.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMBR.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMBR.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACC.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aMEMBER_TYPE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACC.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ORGANIZATION_NAME">\u000d\u000aORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ROLE_NAME">\u000d\u000aROLE_NAME.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_04','2013-08-12 19:31:03.582000',4,'DOCUMENT','true ','SELECT MBR.ID, MBR.NAME, MBR.PHONE, MBR.MOBILE_PHONE, ACC.MAIL, MEMBER_TYPE.NAME MEMBER_TYPE, ACC.EXPIRE_DATE,\u000d\u000aORG.NAME ORGANIZATION_NAME, ROLE_NAME.NAME ROLE_NAME\u000d\u000aFROM MEMBER MBR, ACCESS_MEMBER ACC, CODE MEMBER_TYPE, CODE ROLE_NAME, ROLE ROLE, ORGANIZATION ORG, PROJECT_MEMBER PMB\u000d\u000aWHERE MBR.ID = ACC.ID\u000d\u000aAND ACC.MEMBER_TYPE = MEMBER_TYPE.ID\u000d\u000aAND ROLE.ORGANIZATION_ID = ORG.ID\u000d\u000aAND PMB.ORGANIZATION_ID = ORG.ID\u000d\u000aAND ROLE.MEMBER_ID = MBR.ID\u000d\u000aAND ROLE.ROLE_CODE = ROLE_NAME.ID\u000d\u000aAND PMB.MEMBER_ID = MBR.ID\u000d\u000aAND MBR.USE_YN = ''Y''\u000d\u000aAND (MBR.RETIRED_DATE IS NULL OR MBR.RETIRED_DATE = '''' OR MBR.RETIRED_DATE > CURRENT_DATE)\u000d\u000aAND ACC.USE_YN = ''Y''\u000d\u000aAND ROLE.USE_YN = ''Y''\u000d\u000aAND ORG.USE_YN = ''Y''\u000d\u000aAND PMB.PROJECT_ID = :PROJECT_ID\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMBR.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMBR.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMBR.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACC.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aMEMBER_TYPE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACC.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ORGANIZATION_NAME">\u000d\u000aORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ROLE_NAME">\u000d\u000aROLE_NAME.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_04','2013-08-12 19:34:13.542000',4,'DOCUMENT','true ','SELECT MBR.ID, MBR.NAME, MBR.PHONE, MBR.MOBILE_PHONE, ACC.MAIL, MEMBER_TYPE.NAME MEMBER_TYPE, ACC.EXPIRE_DATE,\u000d\u000aORG.NAME ORGANIZATION_NAME, ROLE_NAME.NAME ROLE_NAME\u000d\u000aFROM MEMBER MBR, ACCESS_MEMBER ACC, CODE MEMBER_TYPE, CODE ROLE_NAME, ROLE ROLE, ORGANIZATION ORG, PROJECT_MEMBER PMB\u000d\u000aWHERE MBR.ID = ACC.ID\u000d\u000aAND ACC.MEMBER_TYPE = MEMBER_TYPE.ID\u000d\u000aAND ROLE.ORGANIZATION_ID = ORG.ID\u000d\u000aAND PMB.ORGANIZATION_ID = ORG.ID\u000d\u000aAND ROLE.MEMBER_ID = MBR.ID\u000d\u000aAND ROLE.ROLE_CODE = ROLE_NAME.ID\u000d\u000aAND PMB.MEMBER_ID = MBR.ID\u000d\u000aAND MBR.USE_YN = ''Y''\u000d\u000aAND (MBR.RETIRED_DATE IS NULL OR MBR.RETIRED_DATE = '''' OR MBR.RETIRED_DATE > CURRENT_DATE)\u000d\u000aAND ACC.USE_YN = ''Y''\u000d\u000aAND ROLE.USE_YN = ''Y''\u000d\u000aAND ORG.USE_YN = ''Y''\u000d\u000aAND PMB.PROJECT_ID = :PROJECT_ID\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMBR.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMBR.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMBR.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMBR.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACC.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aMEMBER_TYPE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACC.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ORGANIZATION_NAME">\u000d\u000aORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ROLE_NAME">\u000d\u000aROLE_NAME.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_04','2013-08-12 19:59:40.009000',4,'DOCUMENT','true ','SELECT MBR.ID, MBR.NAME, MBR.PHONE, MBR.MOBILE_PHONE, ACC.MAIL, MEMBER_TYPE.NAME MEMBER_TYPE, ACC.EXPIRE_DATE,\u000d\u000aORG.NAME ORGANIZATION_NAME, ROLE_NAME.NAME ROLE_NAME\u000d\u000aFROM MEMBER MBR, ACCESS_MEMBER ACC, CODE MEMBER_TYPE, CODE ROLE_NAME, ROLE ROLE, ORGANIZATION ORG, PROJECT_MEMBER PMB\u000d\u000aWHERE MBR.ID = ACC.ID\u000d\u000aAND ACC.MEMBER_TYPE = MEMBER_TYPE.ID\u000d\u000aAND ROLE.ORGANIZATION_ID = ORG.ID\u000d\u000aAND PMB.ORGANIZATION_ID = ORG.ID\u000d\u000aAND ROLE.MEMBER_ID = MBR.ID\u000d\u000aAND ROLE.ROLE_CODE = ROLE_NAME.ID\u000d\u000aAND PMB.MEMBER_ID = MBR.ID\u000d\u000aAND MBR.USE_YN = ''Y''\u000d\u000aAND (MBR.RETIRED_DATE IS NULL OR MBR.RETIRED_DATE = '''' OR MBR.RETIRED_DATE > CURRENT_DATE)\u000d\u000aAND ACC.USE_YN = ''Y''\u000d\u000aAND ROLE.USE_YN = ''Y''\u000d\u000aAND ORG.USE_YN = ''Y''\u000d\u000aAND PMB.PROJECT_ID = :PROJECT_ID\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMBR.RGST_DTTM ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMBR.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMBR.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMBR.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACC.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aMEMBER_TYPE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACC.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ORGANIZATION_NAME">\u000d\u000aORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ROLE_NAME">\u000d\u000aROLE_NAME.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_05','2013-08-12 18:21:37.352000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_05','2013-08-12 18:22:18.769000',4,'DOCUMENT','true ','SELECT MANAGER OLD_MANAGER\u000d\u000aFROM PROJECT\u000d\u000aWHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_06','2013-08-13 14:46:10.233000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_06','2013-08-13 14:48:05.092000',4,'DOCUMENT','true ','SELECT PRJ.ID, PRJ.TITLE, MANAGER.ID MANAGER_ID, MANAGER.NAME MANAGER_NAME, PRJ.FROM_DATE, PRJ.TO_DATE, CODE.NAME STATUS, \u000d\u000a       REGISTER.ID REGISTER_ID, REGISTER.NAME REGISTER_NAME, DATE_FORMAT(PRJ.RGST_DTTM,''%Y-%m-%d'') AS RGST_DTTM\u000d\u000a  FROM PROJECT PRJ, MEMBER AS MANAGER, MEMBER AS REGISTER, CODE\u000d\u000a WHERE 1=1\u000d\u000a   AND PRJ.MANAGER = MANAGER.ID\u000d\u000a   AND PRJ.RGST_MEMBER_ID = REGISTER.ID\u000d\u000a   AND PRJ.PRJ_STATUS = CODE.ID\u000d\u000a   AND PRJ.USE_YN = ''Y''\u000d\u000a<dynamic parameter=":KEYWORD" operator="!=" value="">\u000d\u000a   AND (PRJ.ID      LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'') OR\u000d\u000a        PRJ.TITLE   LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%''))\u000d\u000a</dynamic>\u000d\u000aORDER BY PRJ.RGST_DTTM DESC\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_07','2013-08-15 14:23:21.697000',4,'DOCUMENT','true ','SELECT IF(CURRENT_DATE<=FROM_DATE, ''0%'',IF(CURRENT_DATE >= TO_DATE, ''100%'' , CONCAT(ROUND(DATEDIFF(CURRENT_DATE, PRJ.FROM_DATE) / DATEDIFF(PRJ.TO_DATE, PRJ.FROM_DATE) * 100, 2), ''%''))) AS DATE_RATIO,\u000d\u000a       PRJ.BOARD_ID, PRJ.TITLE, MBR.NAME MANAGER, \u000d\u000a       CONCAT(CONCAT(DATE_FORMAT(PRJ.FROM_DATE,''%Y\ub144 %m\uc6d4 %d\uc77c''), '' - ''), DATE_FORMAT(PRJ.TO_DATE,''%Y\ub144 %m\uc6d4 %d\uc77c'')) TERM,\u000d\u000a       CONCAT(FORMAT(BUDGET_AMOUNT, 0), '' \uc6d0'') AS BUDGET_AMOUNT, \u000d\u000a       IF(DATEDIFF(PRJ.TO_DATE,CURRENT_DATE) * -1 > 0, \u000d\u000a       CONCAT(''D+'', DATEDIFF(PRJ.TO_DATE,CURRENT_DATE) * -1), \u000d\u000a       CONCAT(''D-'', DATEDIFF(PRJ.TO_DATE,CURRENT_DATE))\u000d\u000a       ) AS DUE_DATE,\u000d\u000a       10 AS TASK_CNT,\u000d\u000a       PRJ.SUMMARY\u000d\u000aFROM PROJECT AS PRJ\u000d\u000a     LEFT OUTER JOIN MEMBER AS MBR ON PRJ.MANAGER = MBR.ID\u000d\u000a<dynamic parameter=":PROJECT_ID" operator="!=" value="null">\u000d\u000aWHERE ID = :PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000aWHERE ID = :G_PROJECT_ID\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_07','2013-08-15 14:24:44.344000',4,'DOCUMENT','true ','SELECT IF(CURRENT_DATE<=FROM_DATE, ''0%'',IF(CURRENT_DATE >= TO_DATE, ''100%'' , CONCAT(ROUND(DATEDIFF(CURRENT_DATE, PRJ.FROM_DATE) / DATEDIFF(PRJ.TO_DATE, PRJ.FROM_DATE) * 100, 2), ''%''))) AS DATE_RATIO,\u000d\u000a       PRJ.ID, PRJ.BOARD_ID, PRJ.TITLE, MBR.NAME MANAGER, \u000d\u000a       CONCAT(CONCAT(DATE_FORMAT(PRJ.FROM_DATE,''%Y\ub144 %m\uc6d4 %d\uc77c''), '' - ''), DATE_FORMAT(PRJ.TO_DATE,''%Y\ub144 %m\uc6d4 %d\uc77c'')) TERM,\u000d\u000a       CONCAT(FORMAT(BUDGET_AMOUNT, 0), '' \uc6d0'') AS BUDGET_AMOUNT, \u000d\u000a       IF(DATEDIFF(PRJ.TO_DATE,CURRENT_DATE) * -1 > 0, \u000d\u000a       CONCAT(''D+'', DATEDIFF(PRJ.TO_DATE,CURRENT_DATE) * -1), \u000d\u000a       CONCAT(''D-'', DATEDIFF(PRJ.TO_DATE,CURRENT_DATE))\u000d\u000a       ) AS DUE_DATE,\u000d\u000a       10 AS TASK_CNT,\u000d\u000a       PRJ.SUMMARY\u000d\u000aFROM PROJECT AS PRJ\u000d\u000a     LEFT OUTER JOIN MEMBER AS MBR ON PRJ.MANAGER = MBR.ID\u000d\u000a<dynamic parameter=":PROJECT_ID" operator="!=" value="null">\u000d\u000aWHERE ID = :PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000aWHERE ID = :G_PROJECT_ID\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_07','2013-08-15 14:30:47.457000',4,'DOCUMENT','true ','SELECT IF(CURRENT_DATE<=FROM_DATE, ''0%'',IF(CURRENT_DATE >= TO_DATE, ''100%'' , CONCAT(ROUND(DATEDIFF(CURRENT_DATE, PRJ.FROM_DATE) / DATEDIFF(PRJ.TO_DATE, PRJ.FROM_DATE) * 100, 2), ''%''))) AS DATE_RATIO,\u000d\u000a       PRJ.ID, PRJ.BOARD_ID, PRJ.TITLE, MBR.NAME MANAGER, \u000d\u000a       CONCAT(CONCAT(DATE_FORMAT(PRJ.FROM_DATE,''%Y\ub144 %m\uc6d4 %d\uc77c''), '' - ''), DATE_FORMAT(PRJ.TO_DATE,''%Y\ub144 %m\uc6d4 %d\uc77c'')) TERM,\u000d\u000a       CONCAT(FORMAT(BUDGET_AMOUNT, 0), '' \uc6d0'') AS BUDGET_AMOUNT, \u000d\u000a       IF(DATEDIFF(PRJ.TO_DATE,CURRENT_DATE) * -1 > 0, \u000d\u000a       CONCAT(''D+'', DATEDIFF(PRJ.TO_DATE,CURRENT_DATE) * -1), \u000d\u000a       CONCAT(''D-'', DATEDIFF(PRJ.TO_DATE,CURRENT_DATE))\u000d\u000a       ) AS DUE_DATE,\u000d\u000a       10 AS TASK_CNT,\u000d\u000a       PRJ.SUMMARY\u000d\u000aFROM PROJECT AS PRJ\u000d\u000a     LEFT OUTER JOIN MEMBER AS MBR ON PRJ.MANAGER = MBR.ID\u000d\u000a<dynamic parameter=":PROJECT_ID" operator="!=" value="null">\u000d\u000aWHERE PRJ.ID = :PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000aWHERE PRJ.ID = :G_PROJECT_ID\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_08','2013-08-13 22:21:23.299000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_08','2013-08-13 22:30:55.444000',4,'DOCUMENT','true ','SELECT FROM_DATE, TO_DATE\u000d\u000aFROM PROJECT\u000d\u000aWHERE USE_YN = ''Y''\u000d\u000aAND ID = :PROJECT_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_09','2013-09-09 14:57:57.803000',4,'DOCUMENT','true ','<dynamic parameter=":PARENT_ID" operator="==" value="">\u000d\u000a\u0009<dynamic parameter=":ISTOP" operator="==" value="null">\u000d\u000aSELECT SCHDL.ID, \u000d\u000a       SCHDL.TITLE, \u000d\u000a       SCHDL.FROM_DATE, \u000d\u000a       SCHDL.TO_DATE,\u000d\u000a       (SCHDL.TO_DATE - SCHDL.FROM_DATE) + 1 AS DURATION, \u000d\u000a       MEMBER.NAME ASSIGNEE,\u000d\u000a       SCHDL.RGST_MEMBER_ID RGST_MEMBER_ID,\u000d\u000a       IF(SCHDL.ID = SCHDL.PARENT_ID, ''Y'', ''N'')IS_ROOT,\u000d\u000a       IF(COUNT(CHILD.PARENT_ID ) > 0, ''Y'', ''N'') CHILDREN\u000d\u000a  FROM (\u000d\u000a        SELECT SCHDL.ID, \u000d\u000a               SCHDL.PARENT_ID, \u000d\u000a               SCHDL.PROJECT_ID,\u000d\u000a               SCHDL.TITLE, \u000d\u000a               SCHDL.ASSIGNEE, \u000d\u000a               SCHDL.RGST_MEMBER_ID, \u000d\u000a               SCHDL.FROM_DATE, \u000d\u000a               SCHDL.TO_DATE\u000d\u000a          FROM (\u000d\u000a                SELECT * FROM PROJECT_SCHEDULE\u000d\u000a                 WHERE ASSIGNEE=:LOGIN_MEMBER OR RGST_MEMBER_ID = :LOGIN_MEMBER\u000d\u000a               ) AS SCHDL\u000d\u000a               LEFT OUTER JOIN\u000d\u000a               ( \u000d\u000a                SELECT * FROM PROJECT_SCHEDULE\u000d\u000a                 WHERE ASSIGNEE=:LOGIN_MEMBER OR RGST_MEMBER_ID = :LOGIN_MEMBER\u000d\u000a               ) AS CHILD\u000d\u000a            ON CHILD.PARENT_ID = SCHDL.ID\u000d\u000a         WHERE (SCHDL.ID = SCHDL.PARENT_ID AND SCHDL.RGST_MEMBER_ID = :LOGIN_MEMBER)\u000d\u000a            OR (SCHDL.ID != SCHDL.PARENT_ID AND SCHDL.RGST_MEMBER_ID != :LOGIN_MEMBER)\u000d\u000a       ) AS SCHDL\u000d\u000a       LEFT OUTER JOIN \u000d\u000a       (SELECT ID, PARENT_ID, PROJECT_ID\u000d\u000a          FROM PROJECT_SCHEDULE\u000d\u000a         WHERE ASSIGNEE = :LOGIN_MEMBER AND ID != PARENT_ID) AS CHILD \u000d\u000a       ON SCHDL.ID = CHILD.PARENT_ID\u000d\u000a      AND CHILD.PROJECT_ID = SCHDL.PROJECT_ID,\u000d\u000a      PROJECT, MEMBER\u000d\u000a WHERE SCHDL.ASSIGNEE = MEMBER.ID\u000d\u000a   AND SCHDL.PROJECT_ID = PROJECT.ID\u000d\u000a   AND PROJECT.USE_YN = ''Y''\u000d\u000a   AND PROJECT.ID = :PROJECT_ID\u000d\u000aGROUP BY SCHDL.ID, SCHDL.TITLE, SCHDL.FROM_DATE, SCHDL.TO_DATE\u000d\u000aORDER BY SCHDL.FROM_DATE, SCHDL.TO_DATE, SCHDL.RGST_DTTM\u000d\u000a\u0009</dynamic>\u000d\u000a\u0009<dynamic parameter=":ISTOP" operator="==" value="Y">\u000d\u000aSELECT SCHDL.ID, \u000d\u000a       SCHDL.TITLE, \u000d\u000a       SCHDL.FROM_DATE, \u000d\u000a       SCHDL.TO_DATE,\u000d\u000a       (SCHDL.TO_DATE - SCHDL.FROM_DATE) + 1 AS DURATION, \u000d\u000a       MEMBER.NAME ASSIGNEE,\u000d\u000a       SCHDL.RGST_MEMBER_ID RGST_MEMBER_ID,\u000d\u000a       IF(SCHDL.ID = SCHDL.PARENT_ID, ''Y'', ''N'')IS_ROOT,\u000d\u000a       IF(COUNT(CHILD.PARENT_ID ) > 0, ''Y'', ''N'') CHILDREN\u000d\u000a  FROM (\u000d\u000a        SELECT SCHDL.ID, \u000d\u000a               SCHDL.PARENT_ID, \u000d\u000a               SCHDL.PROJECT_ID,\u000d\u000a               SCHDL.TITLE, \u000d\u000a               SCHDL.ASSIGNEE, \u000d\u000a               SCHDL.RGST_MEMBER_ID, \u000d\u000a               SCHDL.FROM_DATE, \u000d\u000a               SCHDL.TO_DATE\u000d\u000a          FROM PROJECT_SCHEDULE AS SCHDL\u000d\u000a         WHERE SCHDL.PARENT_ID = SCHDL.ID\u000d\u000a       ) AS SCHDL\u000d\u000a       LEFT OUTER JOIN \u000d\u000a       (\u000d\u000a        SELECT ID, PARENT_ID, PROJECT_ID\u000d\u000a          FROM PROJECT_SCHEDULE\u000d\u000a         WHERE ID != PARENT_ID) AS CHILD \u000d\u000a       ON SCHDL.ID = CHILD.PARENT_ID\u000d\u000a      AND CHILD.PROJECT_ID = SCHDL.PROJECT_ID,\u000d\u000a      PROJECT, MEMBER\u000d\u000a WHERE SCHDL.ASSIGNEE = MEMBER.ID\u000d\u000a   AND SCHDL.PROJECT_ID = PROJECT.ID\u000d\u000a   AND PROJECT.USE_YN = ''Y''\u000d\u000a   AND PROJECT.ID = :PROJECT_ID\u000d\u000aGROUP BY SCHDL.ID, SCHDL.TITLE, SCHDL.FROM_DATE, SCHDL.TO_DATE\u000d\u000aORDER BY SCHDL.FROM_DATE, SCHDL.TO_DATE\u000d\u000a\u0009</dynamic>\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PARENT_ID" operator="!=" value="">\u000d\u000aSELECT SCHDL.ID, \u000d\u000a       SCHDL.TITLE, \u000d\u000a       SCHDL.FROM_DATE, \u000d\u000a       SCHDL.TO_DATE, \u000d\u000a       (SCHDL.TO_DATE - SCHDL.FROM_DATE) + 1 AS DURATION, \u000d\u000a       MEMBER.NAME ASSIGNEE,\u000d\u000a       SCHDL.RGST_MEMBER_ID RGST_MEMBER_ID,\u000d\u000a       IF(SCHDL.ID = SCHDL.PARENT_ID, ''Y'', ''N'')IS_ROOT,\u000d\u000a       IF(COUNT(C_SCHDL.ID ) > 0, ''Y'', ''N'') CHILDREN\u000d\u000a  FROM PROJECT_SCHEDULE SCHDL\u000d\u000a       LEFT OUTER JOIN (SELECT ID, PARENT_ID FROM PROJECT_SCHEDULE WHERE ID != PARENT_ID) C_SCHDL ON C_SCHDL.PARENT_ID = SCHDL.ID\u000d\u000a       , MEMBER, PROJECT\u000d\u000a WHERE 1=1\u000d\u000a   AND MEMBER.ID = SCHDL.ASSIGNEE\u000d\u000a   AND SCHDL.PROJECT_ID = PROJECT.ID\u000d\u000a   AND SCHDL.ID != SCHDL.PARENT_ID\u000d\u000a   AND SCHDL.PROJECT_ID = :PROJECT_ID\u000d\u000a   AND SCHDL.PARENT_ID = :PARENT_ID\u000d\u000a   AND PROJECT.USE_YN = ''Y''\u000d\u000aGROUP BY SCHDL.ID, SCHDL.TITLE, SCHDL.FROM_DATE\u000d\u000aORDER BY SCHDL.FROM_DATE, SCHDL.TO_DATE\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_09','2013-09-09 14:58:17.575000',4,'DOCUMENT','true ','<dynamic parameter=":PARENT_ID" operator="==" value="">\u000d\u000a\u0009<dynamic parameter=":ISTOP" operator="==" value="null">\u000d\u000aSELECT SCHDL.ID, \u000d\u000a       SCHDL.TITLE, \u000d\u000a       SCHDL.FROM_DATE, \u000d\u000a       SCHDL.TO_DATE,\u000d\u000a       (SCHDL.TO_DATE - SCHDL.FROM_DATE) + 1 AS DURATION, \u000d\u000a       MEMBER.NAME ASSIGNEE,\u000d\u000a       SCHDL.RGST_MEMBER_ID RGST_MEMBER_ID,\u000d\u000a       IF(SCHDL.ID = SCHDL.PARENT_ID, ''Y'', ''N'')IS_ROOT,\u000d\u000a       IF(COUNT(CHILD.PARENT_ID ) > 0, ''Y'', ''N'') CHILDREN\u000d\u000a  FROM (\u000d\u000a        SELECT SCHDL.ID, \u000d\u000a               SCHDL.PARENT_ID, \u000d\u000a               SCHDL.PROJECT_ID,\u000d\u000a               SCHDL.TITLE, \u000d\u000a               SCHDL.ASSIGNEE, \u000d\u000a               SCHDL.RGST_MEMBER_ID, \u000d\u000a               SCHDL.FROM_DATE, \u000d\u000a               SCHDL.TO_DATE\u000d\u000a          FROM (\u000d\u000a                SELECT * FROM PROJECT_SCHEDULE\u000d\u000a                 WHERE ASSIGNEE=:LOGIN_MEMBER OR RGST_MEMBER_ID = :LOGIN_MEMBER\u000d\u000a               ) AS SCHDL\u000d\u000a               LEFT OUTER JOIN\u000d\u000a               ( \u000d\u000a                SELECT * FROM PROJECT_SCHEDULE\u000d\u000a                 WHERE ASSIGNEE=:LOGIN_MEMBER OR RGST_MEMBER_ID = :LOGIN_MEMBER\u000d\u000a               ) AS CHILD\u000d\u000a            ON CHILD.PARENT_ID = SCHDL.ID\u000d\u000a         WHERE (SCHDL.ID = SCHDL.PARENT_ID AND SCHDL.RGST_MEMBER_ID = :LOGIN_MEMBER)\u000d\u000a            OR (SCHDL.ID != SCHDL.PARENT_ID AND SCHDL.RGST_MEMBER_ID != :LOGIN_MEMBER)\u000d\u000a       ) AS SCHDL\u000d\u000a       LEFT OUTER JOIN \u000d\u000a       (SELECT ID, PARENT_ID, PROJECT_ID\u000d\u000a          FROM PROJECT_SCHEDULE\u000d\u000a         WHERE ASSIGNEE = :LOGIN_MEMBER AND ID != PARENT_ID) AS CHILD \u000d\u000a       ON SCHDL.ID = CHILD.PARENT_ID\u000d\u000a      AND CHILD.PROJECT_ID = SCHDL.PROJECT_ID,\u000d\u000a      PROJECT, MEMBER\u000d\u000a WHERE SCHDL.ASSIGNEE = MEMBER.ID\u000d\u000a   AND SCHDL.PROJECT_ID = PROJECT.ID\u000d\u000a   AND PROJECT.USE_YN = ''Y''\u000d\u000a   AND PROJECT.ID = :PROJECT_ID\u000d\u000aGROUP BY SCHDL.ID, SCHDL.TITLE, SCHDL.FROM_DATE, SCHDL.TO_DATE\u000d\u000aORDER BY SCHDL.FROM_DATE, SCHDL.TO_DATE, SCHDL.RGST_DTTM\u000d\u000a\u0009</dynamic>\u000d\u000a\u0009<dynamic parameter=":ISTOP" operator="==" value="Y">\u000d\u000aSELECT SCHDL.ID, \u000d\u000a       SCHDL.TITLE, \u000d\u000a       SCHDL.FROM_DATE, \u000d\u000a       SCHDL.TO_DATE,\u000d\u000a       (SCHDL.TO_DATE - SCHDL.FROM_DATE) + 1 AS DURATION, \u000d\u000a       MEMBER.NAME ASSIGNEE,\u000d\u000a       SCHDL.RGST_MEMBER_ID RGST_MEMBER_ID,\u000d\u000a       IF(SCHDL.ID = SCHDL.PARENT_ID, ''Y'', ''N'')IS_ROOT,\u000d\u000a       IF(COUNT(CHILD.PARENT_ID ) > 0, ''Y'', ''N'') CHILDREN\u000d\u000a  FROM (\u000d\u000a        SELECT SCHDL.ID, \u000d\u000a               SCHDL.PARENT_ID, \u000d\u000a               SCHDL.PROJECT_ID,\u000d\u000a               SCHDL.TITLE, \u000d\u000a               SCHDL.ASSIGNEE, \u000d\u000a               SCHDL.RGST_MEMBER_ID, \u000d\u000a               SCHDL.FROM_DATE, \u000d\u000a               SCHDL.TO_DATE\u000d\u000a          FROM PROJECT_SCHEDULE AS SCHDL\u000d\u000a         WHERE SCHDL.PARENT_ID = SCHDL.ID\u000d\u000a       ) AS SCHDL\u000d\u000a       LEFT OUTER JOIN \u000d\u000a       (\u000d\u000a        SELECT ID, PARENT_ID, PROJECT_ID\u000d\u000a          FROM PROJECT_SCHEDULE\u000d\u000a         WHERE ID != PARENT_ID) AS CHILD \u000d\u000a       ON SCHDL.ID = CHILD.PARENT_ID\u000d\u000a      AND CHILD.PROJECT_ID = SCHDL.PROJECT_ID,\u000d\u000a      PROJECT, MEMBER\u000d\u000a WHERE SCHDL.ASSIGNEE = MEMBER.ID\u000d\u000a   AND SCHDL.PROJECT_ID = PROJECT.ID\u000d\u000a   AND PROJECT.USE_YN = ''Y''\u000d\u000a   AND PROJECT.ID = :PROJECT_ID\u000d\u000aGROUP BY SCHDL.ID, SCHDL.TITLE, SCHDL.FROM_DATE, SCHDL.TO_DATE\u000d\u000aORDER BY SCHDL.FROM_DATE, SCHDL.TO_DATE, SCHDL.RGST_DTTM\u000d\u000a\u0009</dynamic>\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PARENT_ID" operator="!=" value="">\u000d\u000aSELECT SCHDL.ID, \u000d\u000a       SCHDL.TITLE, \u000d\u000a       SCHDL.FROM_DATE, \u000d\u000a       SCHDL.TO_DATE, \u000d\u000a       (SCHDL.TO_DATE - SCHDL.FROM_DATE) + 1 AS DURATION, \u000d\u000a       MEMBER.NAME ASSIGNEE,\u000d\u000a       SCHDL.RGST_MEMBER_ID RGST_MEMBER_ID,\u000d\u000a       IF(SCHDL.ID = SCHDL.PARENT_ID, ''Y'', ''N'')IS_ROOT,\u000d\u000a       IF(COUNT(C_SCHDL.ID ) > 0, ''Y'', ''N'') CHILDREN\u000d\u000a  FROM PROJECT_SCHEDULE SCHDL\u000d\u000a       LEFT OUTER JOIN (SELECT ID, PARENT_ID FROM PROJECT_SCHEDULE WHERE ID != PARENT_ID) C_SCHDL ON C_SCHDL.PARENT_ID = SCHDL.ID\u000d\u000a       , MEMBER, PROJECT\u000d\u000a WHERE 1=1\u000d\u000a   AND MEMBER.ID = SCHDL.ASSIGNEE\u000d\u000a   AND SCHDL.PROJECT_ID = PROJECT.ID\u000d\u000a   AND SCHDL.ID != SCHDL.PARENT_ID\u000d\u000a   AND SCHDL.PROJECT_ID = :PROJECT_ID\u000d\u000a   AND SCHDL.PARENT_ID = :PARENT_ID\u000d\u000a   AND PROJECT.USE_YN = ''Y''\u000d\u000aGROUP BY SCHDL.ID, SCHDL.TITLE, SCHDL.FROM_DATE\u000d\u000aORDER BY SCHDL.FROM_DATE, SCHDL.TO_DATE, SCHDL.RGST_DTTM\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_09','2013-09-09 14:59:45.483000',4,'DOCUMENT','true ','<dynamic parameter=":PARENT_ID" operator="==" value="">\u000d\u000a\u0009<dynamic parameter=":ISTOP" operator="==" value="null">\u000d\u000aSELECT SCHDL.ID, \u000d\u000a       SCHDL.TITLE, \u000d\u000a       SCHDL.FROM_DATE, \u000d\u000a       SCHDL.TO_DATE,\u000d\u000a       (SCHDL.TO_DATE - SCHDL.FROM_DATE) + 1 AS DURATION, \u000d\u000a       MEMBER.NAME ASSIGNEE,\u000d\u000a       SCHDL.RGST_MEMBER_ID RGST_MEMBER_ID,\u000d\u000a       IF(SCHDL.ID = SCHDL.PARENT_ID, ''Y'', ''N'')IS_ROOT,\u000d\u000a       IF(COUNT(CHILD.PARENT_ID ) > 0, ''Y'', ''N'') CHILDREN\u000d\u000a  FROM (\u000d\u000a        SELECT SCHDL.ID, \u000d\u000a               SCHDL.PARENT_ID, \u000d\u000a               SCHDL.PROJECT_ID,\u000d\u000a               SCHDL.TITLE, \u000d\u000a               SCHDL.ASSIGNEE, \u000d\u000a               SCHDL.RGST_MEMBER_ID, \u000d\u000a               SCHDL.FROM_DATE, \u000d\u000a               SCHDL.TO_DATE,\u000d\u000a               SCHDL.RGST_DTTM\u000d\u000a          FROM (\u000d\u000a                SELECT * FROM PROJECT_SCHEDULE\u000d\u000a                 WHERE ASSIGNEE=:LOGIN_MEMBER OR RGST_MEMBER_ID = :LOGIN_MEMBER\u000d\u000a               ) AS SCHDL\u000d\u000a               LEFT OUTER JOIN\u000d\u000a               ( \u000d\u000a                SELECT * FROM PROJECT_SCHEDULE\u000d\u000a                 WHERE ASSIGNEE=:LOGIN_MEMBER OR RGST_MEMBER_ID = :LOGIN_MEMBER\u000d\u000a               ) AS CHILD\u000d\u000a            ON CHILD.PARENT_ID = SCHDL.ID\u000d\u000a         WHERE (SCHDL.ID = SCHDL.PARENT_ID AND SCHDL.RGST_MEMBER_ID = :LOGIN_MEMBER)\u000d\u000a            OR (SCHDL.ID != SCHDL.PARENT_ID AND SCHDL.RGST_MEMBER_ID != :LOGIN_MEMBER)\u000d\u000a       ) AS SCHDL\u000d\u000a       LEFT OUTER JOIN \u000d\u000a       (SELECT ID, PARENT_ID, PROJECT_ID\u000d\u000a          FROM PROJECT_SCHEDULE\u000d\u000a         WHERE ASSIGNEE = :LOGIN_MEMBER AND ID != PARENT_ID) AS CHILD \u000d\u000a       ON SCHDL.ID = CHILD.PARENT_ID\u000d\u000a      AND CHILD.PROJECT_ID = SCHDL.PROJECT_ID,\u000d\u000a      PROJECT, MEMBER\u000d\u000a WHERE SCHDL.ASSIGNEE = MEMBER.ID\u000d\u000a   AND SCHDL.PROJECT_ID = PROJECT.ID\u000d\u000a   AND PROJECT.USE_YN = ''Y''\u000d\u000a   AND PROJECT.ID = :PROJECT_ID\u000d\u000aGROUP BY SCHDL.ID, SCHDL.TITLE, SCHDL.FROM_DATE, SCHDL.TO_DATE\u000d\u000aORDER BY SCHDL.FROM_DATE, SCHDL.TO_DATE, SCHDL.RGST_DTTM\u000d\u000a\u0009</dynamic>\u000d\u000a\u0009<dynamic parameter=":ISTOP" operator="==" value="Y">\u000d\u000aSELECT SCHDL.ID, \u000d\u000a       SCHDL.TITLE, \u000d\u000a       SCHDL.FROM_DATE, \u000d\u000a       SCHDL.TO_DATE,\u000d\u000a       (SCHDL.TO_DATE - SCHDL.FROM_DATE) + 1 AS DURATION, \u000d\u000a       MEMBER.NAME ASSIGNEE,\u000d\u000a       SCHDL.RGST_MEMBER_ID RGST_MEMBER_ID,\u000d\u000a       IF(SCHDL.ID = SCHDL.PARENT_ID, ''Y'', ''N'')IS_ROOT,\u000d\u000a       IF(COUNT(CHILD.PARENT_ID ) > 0, ''Y'', ''N'') CHILDREN\u000d\u000a  FROM (\u000d\u000a        SELECT SCHDL.ID, \u000d\u000a               SCHDL.PARENT_ID, \u000d\u000a               SCHDL.PROJECT_ID,\u000d\u000a               SCHDL.TITLE, \u000d\u000a               SCHDL.ASSIGNEE, \u000d\u000a               SCHDL.RGST_MEMBER_ID, \u000d\u000a               SCHDL.FROM_DATE, \u000d\u000a               SCHDL.TO_DATE,\u000d\u000a               SCHDL.RGST_DTTM\u000d\u000a          FROM PROJECT_SCHEDULE AS SCHDL\u000d\u000a         WHERE SCHDL.PARENT_ID = SCHDL.ID\u000d\u000a       ) AS SCHDL\u000d\u000a       LEFT OUTER JOIN \u000d\u000a       (\u000d\u000a        SELECT ID, PARENT_ID, PROJECT_ID\u000d\u000a          FROM PROJECT_SCHEDULE\u000d\u000a         WHERE ID != PARENT_ID) AS CHILD \u000d\u000a       ON SCHDL.ID = CHILD.PARENT_ID\u000d\u000a      AND CHILD.PROJECT_ID = SCHDL.PROJECT_ID,\u000d\u000a      PROJECT, MEMBER\u000d\u000a WHERE SCHDL.ASSIGNEE = MEMBER.ID\u000d\u000a   AND SCHDL.PROJECT_ID = PROJECT.ID\u000d\u000a   AND PROJECT.USE_YN = ''Y''\u000d\u000a   AND PROJECT.ID = :PROJECT_ID\u000d\u000aGROUP BY SCHDL.ID, SCHDL.TITLE, SCHDL.FROM_DATE, SCHDL.TO_DATE\u000d\u000aORDER BY SCHDL.FROM_DATE, SCHDL.TO_DATE, SCHDL.RGST_DTTM\u000d\u000a\u0009</dynamic>\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PARENT_ID" operator="!=" value="">\u000d\u000aSELECT SCHDL.ID, \u000d\u000a       SCHDL.TITLE, \u000d\u000a       SCHDL.FROM_DATE, \u000d\u000a       SCHDL.TO_DATE, \u000d\u000a       (SCHDL.TO_DATE - SCHDL.FROM_DATE) + 1 AS DURATION, \u000d\u000a       MEMBER.NAME ASSIGNEE,\u000d\u000a       SCHDL.RGST_MEMBER_ID RGST_MEMBER_ID,\u000d\u000a       IF(SCHDL.ID = SCHDL.PARENT_ID, ''Y'', ''N'')IS_ROOT,\u000d\u000a       IF(COUNT(C_SCHDL.ID ) > 0, ''Y'', ''N'') CHILDREN\u000d\u000a  FROM PROJECT_SCHEDULE SCHDL\u000d\u000a       LEFT OUTER JOIN (SELECT ID, PARENT_ID FROM PROJECT_SCHEDULE WHERE ID != PARENT_ID) C_SCHDL ON C_SCHDL.PARENT_ID = SCHDL.ID\u000d\u000a       , MEMBER, PROJECT\u000d\u000a WHERE 1=1\u000d\u000a   AND MEMBER.ID = SCHDL.ASSIGNEE\u000d\u000a   AND SCHDL.PROJECT_ID = PROJECT.ID\u000d\u000a   AND SCHDL.ID != SCHDL.PARENT_ID\u000d\u000a   AND SCHDL.PROJECT_ID = :PROJECT_ID\u000d\u000a   AND SCHDL.PARENT_ID = :PARENT_ID\u000d\u000a   AND PROJECT.USE_YN = ''Y''\u000d\u000aGROUP BY SCHDL.ID, SCHDL.TITLE, SCHDL.FROM_DATE\u000d\u000aORDER BY SCHDL.FROM_DATE, SCHDL.TO_DATE, SCHDL.RGST_DTTM\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_10','2013-08-16 11:31:39.444000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_10','2013-08-16 11:31:48.046000',4,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) under organization\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID,\u000d\u000a       MEMBER.NAME, \u000d\u000a       ACCESS_MEMBER.MAIL,\u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE,\u000d\u000a       MEMBER.PHONE, \u000d\u000a       MEMBER.MOBILE_PHONE, \u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, '''', MEMBER.JOIN_DATE) AS JOIN_DATE,\u000d\u000a       IF(MEMBER.RETIRED_DATE IS NULL, '''', MEMBER.RETIRED_DATE) AS RETIRED_DATE,\u000d\u000a       EP_CODE.NAME AS MEMBER_TYPE, \u000d\u000a       MEMBER.GOOGLE_ID, \u000d\u000a       MEMBER.RGST_DTTM,\u000d\u000a       MEMBER.MDF_DTTM\u000d\u000a  FROM MEMBER, \u000d\u000a       CODE AS EP_CODE, \u000d\u000a       ACCESS_MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.MEMBER_TYPE = EP_CODE.ID \u000d\u000a   AND ACCESS_MEMBER.ID       = MEMBER.ID\u000d\u000a   AND MEMBER.USE_YN          = ''Y''\u000d\u000a   AND ACCESS_MEMBER.USE_YN   = ''Y''\u000d\u000a   AND (RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000a   AND (MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a       OR MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%''))\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMEMBER.NAME ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMEMBER.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMEMBER.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACCESS_MEMBER.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACCESS_MEMBER.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMEMBER.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMEMBER.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="JOIN_DATE">\u000d\u000aMEMBER.JOIN_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RETIRED_DATE">\u000d\u000aMEMBER.RETIRED_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aEP_CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_10','2013-08-16 13:28:49.466000',4,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) under organization\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID,\u000d\u000a       MEMBER.NAME, \u000d\u000a       ACCESS_MEMBER.MAIL,\u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE,\u000d\u000a       MEMBER.PHONE, \u000d\u000a       MEMBER.MOBILE_PHONE, \u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, '''', MEMBER.JOIN_DATE) AS JOIN_DATE,\u000d\u000a       IF(MEMBER.RETIRED_DATE IS NULL, '''', MEMBER.RETIRED_DATE) AS RETIRED_DATE,\u000d\u000a       EP_CODE.NAME AS MEMBER_TYPE, \u000d\u000a       MEMBER.GOOGLE_ID, \u000d\u000a       MEMBER.RGST_DTTM,\u000d\u000a       MEMBER.MDF_DTTM\u000d\u000a  FROM MEMBER, PROJECT_MEMBER PJM,\u000d\u000a       CODE AS EP_CODE, \u000d\u000a       ACCESS_MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.MEMBER_TYPE = EP_CODE.ID \u000d\u000a   AND ACCESS_MEMBER.ID       = MEMBER.ID\u000d\u000a   AND PJM.MEMBER_ID          = MEMBER.ID\u000d\u000a   AND MEMBER.USE_YN          = ''Y''\u000d\u000a   AND ACCESS_MEMBER.USE_YN   = ''Y''\u000d\u000a   AND PJM.PROJECT_ID         = :G_PROJECT_ID\u000d\u000a   AND (RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000a   AND (MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a       OR MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%''))\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMEMBER.NAME ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMEMBER.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMEMBER.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACCESS_MEMBER.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACCESS_MEMBER.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMEMBER.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMEMBER.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="JOIN_DATE">\u000d\u000aMEMBER.JOIN_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RETIRED_DATE">\u000d\u000aMEMBER.RETIRED_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aEP_CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_10','2013-08-16 14:15:39.737000',4,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) under organization\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID,\u000d\u000a       MEMBER.NAME, \u000d\u000a       ACCESS_MEMBER.MAIL,\u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE,\u000d\u000a       MEMBER.PHONE, \u000d\u000a       MEMBER.MOBILE_PHONE, \u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, '''', MEMBER.JOIN_DATE) AS JOIN_DATE,\u000d\u000a       IF(MEMBER.RETIRED_DATE IS NULL, '''', MEMBER.RETIRED_DATE) AS RETIRED_DATE,\u000d\u000a       EP_CODE.NAME AS MEMBER_TYPE\u000d\u000a  FROM MEMBER, PROJECT_MEMBER PJM,\u000d\u000a       CODE AS EP_CODE, \u000d\u000a       ACCESS_MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.MEMBER_TYPE = EP_CODE.ID \u000d\u000a   AND ACCESS_MEMBER.ID       = MEMBER.ID\u000d\u000a   AND PJM.MEMBER_ID          = MEMBER.ID\u000d\u000a   AND MEMBER.USE_YN          = ''Y''\u000d\u000a   AND ACCESS_MEMBER.USE_YN   = ''Y''\u000d\u000a   AND PJM.PROJECT_ID         = :G_PROJECT_ID\u000d\u000a   AND (RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000a   AND (MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a       OR MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%''))\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMEMBER.NAME ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMEMBER.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMEMBER.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACCESS_MEMBER.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACCESS_MEMBER.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMEMBER.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMEMBER.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="JOIN_DATE">\u000d\u000aMEMBER.JOIN_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RETIRED_DATE">\u000d\u000aMEMBER.RETIRED_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aEP_CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_10','2013-08-16 14:24:40.977000',4,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) under organization\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID,\u000d\u000a       MEMBER.NAME, \u000d\u000a       ACCESS_MEMBER.MAIL,\u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE,\u000d\u000a       MEMBER.PHONE, \u000d\u000a       MEMBER.MOBILE_PHONE, \u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, '''', MEMBER.JOIN_DATE) AS JOIN_DATE,\u000d\u000a       IF(MEMBER.RETIRED_DATE IS NULL, ''\uadfc\ubb34\uc911'', IF(MEMBER.RETIRED_DATE = '''', ''\uadfc\ubb34\uc911'', MEMBER.RETIRED_DATE)) AS RETIRED_DATE,\u000d\u000a       EP_CODE.NAME AS MEMBER_TYPE\u000d\u000a  FROM MEMBER, PROJECT_MEMBER PJM,\u000d\u000a       CODE AS EP_CODE, \u000d\u000a       ACCESS_MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.MEMBER_TYPE = EP_CODE.ID \u000d\u000a   AND ACCESS_MEMBER.ID       = MEMBER.ID\u000d\u000a   AND PJM.MEMBER_ID          = MEMBER.ID\u000d\u000a   AND MEMBER.USE_YN          = ''Y''\u000d\u000a   AND ACCESS_MEMBER.USE_YN   = ''Y''\u000d\u000a   AND PJM.PROJECT_ID         = :G_PROJECT_ID\u000d\u000a   AND (RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000a   AND (MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a       OR MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%''))\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMEMBER.NAME ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMEMBER.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMEMBER.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACCESS_MEMBER.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACCESS_MEMBER.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMEMBER.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMEMBER.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="JOIN_DATE">\u000d\u000aMEMBER.JOIN_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RETIRED_DATE">\u000d\u000aMEMBER.RETIRED_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aEP_CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_10','2013-08-16 15:29:17.516000',4,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) under organization\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID,\u000d\u000a       MEMBER.NAME, \u000d\u000a       RL_CODE.NAME,\u000d\u000a       ORGANIZATION.NAME,\u000d\u000a       ACCESS_MEMBER.MAIL,\u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE,\u000d\u000a       MEMBER.PHONE, \u000d\u000a       MEMBER.MOBILE_PHONE, \u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, '''', MEMBER.JOIN_DATE) AS JOIN_DATE,\u000d\u000a       IF(MEMBER.RETIRED_DATE IS NULL, ''\uadfc\ubb34\uc911'', IF(MEMBER.RETIRED_DATE = '''', ''\uadfc\ubb34\uc911'', MEMBER.RETIRED_DATE)) AS RETIRED_DATE,\u000d\u000a       EP_CODE.NAME AS MEMBER_TYPE\u000d\u000a  FROM MEMBER, PROJECT_MEMBER PJM, ORGANIZATION, ROLE\u000d\u000a       CODE AS EP_CODE, CODE AS RL_CODE\u000d\u000a       ACCESS_MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.MEMBER_TYPE = EP_CODE.ID \u000d\u000a   AND ACCESS_MEMBER.ID       = MEMBER.ID\u000d\u000a   AND PJM.MEMBER_ID          = MEMBER.ID\u000d\u000a   AND PJM.ORGANIZATION_ID    = ORGANIZATION.ID\u000d\u000a   AND ROLE.ORGANIZATION_ID   = ORGANIZATION.ID\u000d\u000a   AND ROLE.MEMBER_ID         = PJM.MEMBER_ID\u000d\u000a   AND ROLE.ROLE_CODE         = RL_CODE.ID\u000d\u000a   AND MEMBER.USE_YN          = ''Y''\u000d\u000a   AND ACCESS_MEMBER.USE_YN   = ''Y''\u000d\u000a   AND PJM.PROJECT_ID         = :G_PROJECT_ID\u000d\u000a   AND (RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000a   AND (MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a       OR MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%''))\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMEMBER.NAME ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMEMBER.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMEMBER.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACCESS_MEMBER.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACCESS_MEMBER.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMEMBER.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMEMBER.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="JOIN_DATE">\u000d\u000aMEMBER.JOIN_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RETIRED_DATE">\u000d\u000aMEMBER.RETIRED_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aEP_CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_10','2013-08-16 15:29:32.566000',4,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) under organization\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID,\u000d\u000a       MEMBER.NAME, \u000d\u000a       RL_CODE.NAME ROLE_NAME,\u000d\u000a       ORGANIZATION.NAME ORGANIZATION_NAME,\u000d\u000a       ACCESS_MEMBER.MAIL,\u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE,\u000d\u000a       MEMBER.PHONE, \u000d\u000a       MEMBER.MOBILE_PHONE, \u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, '''', MEMBER.JOIN_DATE) AS JOIN_DATE,\u000d\u000a       IF(MEMBER.RETIRED_DATE IS NULL, ''\uadfc\ubb34\uc911'', IF(MEMBER.RETIRED_DATE = '''', ''\uadfc\ubb34\uc911'', MEMBER.RETIRED_DATE)) AS RETIRED_DATE,\u000d\u000a       EP_CODE.NAME AS MEMBER_TYPE\u000d\u000a  FROM MEMBER, PROJECT_MEMBER PJM, ORGANIZATION, ROLE\u000d\u000a       CODE AS EP_CODE, CODE AS RL_CODE\u000d\u000a       ACCESS_MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.MEMBER_TYPE = EP_CODE.ID \u000d\u000a   AND ACCESS_MEMBER.ID       = MEMBER.ID\u000d\u000a   AND PJM.MEMBER_ID          = MEMBER.ID\u000d\u000a   AND PJM.ORGANIZATION_ID    = ORGANIZATION.ID\u000d\u000a   AND ROLE.ORGANIZATION_ID   = ORGANIZATION.ID\u000d\u000a   AND ROLE.MEMBER_ID         = PJM.MEMBER_ID\u000d\u000a   AND ROLE.ROLE_CODE         = RL_CODE.ID\u000d\u000a   AND MEMBER.USE_YN          = ''Y''\u000d\u000a   AND ACCESS_MEMBER.USE_YN   = ''Y''\u000d\u000a   AND PJM.PROJECT_ID         = :G_PROJECT_ID\u000d\u000a   AND (RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000a   AND (MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a       OR MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%''))\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMEMBER.NAME ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMEMBER.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMEMBER.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACCESS_MEMBER.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACCESS_MEMBER.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMEMBER.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMEMBER.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="JOIN_DATE">\u000d\u000aMEMBER.JOIN_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RETIRED_DATE">\u000d\u000aMEMBER.RETIRED_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aEP_CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_10','2013-08-16 15:31:52.644000',4,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2013.01.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member(role) under organization\u000d\u000a*/\u000d\u000aSELECT MEMBER.ID,\u000d\u000a       MEMBER.NAME, \u000d\u000a       RL_CODE.NAME ROLE_NAME,\u000d\u000a       ORGANIZATION.NAME ORGANIZATION_NAME,\u000d\u000a       ACCESS_MEMBER.MAIL,\u000d\u000a       ACCESS_MEMBER.EXPIRE_DATE,\u000d\u000a       MEMBER.PHONE, \u000d\u000a       MEMBER.MOBILE_PHONE, \u000d\u000a       IF(MEMBER.JOIN_DATE IS NULL, '''', MEMBER.JOIN_DATE) AS JOIN_DATE,\u000d\u000a       IF(MEMBER.RETIRED_DATE IS NULL, ''\uadfc\ubb34\uc911'', IF(MEMBER.RETIRED_DATE = '''', ''\uadfc\ubb34\uc911'', MEMBER.RETIRED_DATE)) AS RETIRED_DATE,\u000d\u000a       EP_CODE.NAME AS MEMBER_TYPE\u000d\u000a  FROM MEMBER, PROJECT_MEMBER PJM, ORGANIZATION, ROLE,\u000d\u000a       CODE AS EP_CODE, CODE AS RL_CODE,\u000d\u000a       ACCESS_MEMBER\u000d\u000a WHERE 1=1\u000d\u000a   AND ACCESS_MEMBER.MEMBER_TYPE = EP_CODE.ID \u000d\u000a   AND ACCESS_MEMBER.ID       = MEMBER.ID\u000d\u000a   AND PJM.MEMBER_ID          = MEMBER.ID\u000d\u000a   AND PJM.ORGANIZATION_ID    = ORGANIZATION.ID\u000d\u000a   AND ROLE.ORGANIZATION_ID   = ORGANIZATION.ID\u000d\u000a   AND ROLE.MEMBER_ID         = PJM.MEMBER_ID\u000d\u000a   AND ROLE.ROLE_CODE         = RL_CODE.ID\u000d\u000a   AND MEMBER.USE_YN          = ''Y''\u000d\u000a   AND ACCESS_MEMBER.USE_YN   = ''Y''\u000d\u000a   AND PJM.PROJECT_ID         = :G_PROJECT_ID\u000d\u000a   AND (RETIRED_DATE IS NULL OR RETIRED_DATE = '''')\u000d\u000a   AND (MEMBER.ID LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%'')\u000d\u000a       OR MEMBER.NAME LIKE CONCAT(CONCAT(''%'', :KEYWORD), ''%''))\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":sortname" operator="==" value="">\u000d\u000aMEMBER.NAME ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="ID">\u000d\u000aMEMBER.ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="NAME">\u000d\u000aMEMBER.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MAIL">\u000d\u000aACCESS_MEMBER.MAIL\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="EXPIRE_DATE">\u000d\u000aACCESS_MEMBER.EXPIRE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="PHONE">\u000d\u000aMEMBER.PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MOBILE_PHONE">\u000d\u000aMEMBER.MOBILE_PHONE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="JOIN_DATE">\u000d\u000aMEMBER.JOIN_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="RETIRED_DATE">\u000d\u000aMEMBER.RETIRED_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortname" operator="==" value="MEMBER_TYPE">\u000d\u000aEP_CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="asc">\u000d\u000aASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sortorder" operator="==" value="desc">\u000d\u000aDESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :start, :rp')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_11','2013-08-17 12:10:45.980000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_11','2013-08-17 12:11:08.726000',4,'DOCUMENT','false','SELECT (SEQ(''PROJECT_SCHEDULE'') AS SCHEDULE_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_11','2013-08-17 16:09:44.082000',4,'DOCUMENT','false','SELECT (SEQ(''PROJECT_SCHEDULE'') AS PROJECT_SCEHDULE_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_11','2013-08-17 16:31:49.631000',4,'DOCUMENT','false','SELECT SEQ(''PROJECT_SCHEDULE'') AS PROJECT_SCEHDULE_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_11','2013-08-17 16:53:27.419000',4,'DOCUMENT','false','SELECT SEQ(''PROJECT_SCHEDULE'') AS PROJECT_SCHEDULE_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_12','2013-08-30 13:01:05.642000',4,'DOCUMENT','true ','SELECT SCHDL.ID, SCHDL.TITLE, SCHDL.FROM_DATE, \u000d\u000aSCHDL.TO_DATE, (SCHDL.TO_DATE - SCHDL.FROM_DATE) + 1 AS DURATION, \u000d\u000aMEMBER.NAME ASSIGNEE,\u000d\u000aIF(SCHDL.ID = SCHDL.PARENT_ID, ''Y'', ''N'')IS_ROOT,\u000d\u000aIF(COUNT(C_SCHDL.PARENT_ID ) > 0, ''Y'', ''N'') CHILDREN\u000d\u000aFROM PROJECT_SCHEDULE SCHDL\u000d\u000a     LEFT OUTER JOIN (SELECT PARENT_ID FROM PROJECT_SCHEDULE WHERE ID != PARENT_ID) C_SCHDL ON C_SCHDL.PARENT_ID = SCHDL.ID\u000d\u000a     , MEMBER, PROJECT\u000d\u000aWHERE 1=1\u000d\u000aAND MEMBER.ID = SCHDL.ASSIGNEE\u000d\u000aAND SCHDL.PROJECT_ID = PROJECT.ID\u000d\u000aAND SCHDL.ID != SCHDL.PARENT_ID\u000d\u000aAND SCHDL.PROJECT_ID = :PROJECT_ID\u000d\u000aAND SCHDL.PARENT_ID = :PARENT_ID\u000d\u000aAND PROJECT.USE_YN = ''Y''\u000d\u000aGROUP BY SCHDL.ID, SCHDL.TITLE, SCHDL.FROM_DATE\u000d\u000aORDER BY SCHDL.FROM_DATE ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_13','2013-08-23 23:09:19.079000',4,'DOCUMENT','true ','SELECT SCHDL.ID,\u000d\u000a       SCHDL.SCHDL_TYPE, \u000d\u000a       SCHDL.PARENT_ID, \u000d\u000a       IF(SCHDL.PARENT_ID=SCHDL.ID, ''\uc0c1\uc704 \uc77c\uc815 \uc5c6\uc74c'', PARENT.TITLE) AS PARENT_TITLE,\u000d\u000a       IF(SCHDL.PARENT_ID=SCHDL.ID, ''\uc0c1\uc704 \uc77c\uc815 \uc5c6\uc74c'', CONCAT(CONCAT(PARENT.FROM_DATE, '' ~ ''), PARENT.TO_DATE)) AS PARENT_TERM,\u000d\u000a       SCHDL.TITLE, \u000d\u000a       SCHDL.ASSIGNEE,\u000d\u000a       SCHDL.FROM_DATE, \u000d\u000a       SCHDL.TO_DATE,\u000d\u000a       SCHDL.SUMMARY,\u000d\u000a       STATUS.NAME SCHDL_STATUS,\u000d\u000a       DATE_FORMAT(SCHDL.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i:%s'') RGST_DTTM,\u000d\u000a       RGST_MEMBER.NAME RGST_MEMBER,\u000d\u000a       ASSIGNEE.NAME ASSIGNEE,\u000d\u000a       SCHDL.ASSIGNEE ASSIGNEE_ID\u000d\u000aFROM PROJECT_SCHEDULE SCHDL, PROJECT_SCHEDULE PARENT, PROJECT PRJ, MEMBER ASSIGNEE, MEMBER RGST_MEMBER,\u000d\u000a     CODE STATUS\u000d\u000aWHERE SCHDL.PARENT_ID = PARENT.ID\u000d\u000aAND PRJ.ID = SCHDL.PROJECT_ID\u000d\u000aAND SCHDL.ASSIGNEE = ASSIGNEE.ID\u000d\u000aAND SCHDL.RGST_MEMBER_ID = RGST_MEMBER.ID\u000d\u000aAND SCHDL.SCHDL_STATUS = STATUS.ID\u000d\u000aAND PRJ.USE_YN = ''Y''\u000d\u000aAND SCHDL.ID = :ID\u000d\u000aAND PRJ.ID = :PROJECT_ID\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_13','2013-08-23 23:34:29.791000',4,'DOCUMENT','true ','SELECT SCHDL.ID,\u000d\u000a       SCHDL.SCHDL_TYPE, \u000d\u000a       SCHDL.PARENT_ID, \u000d\u000a       IF(SCHDL.PARENT_ID=SCHDL.ID, ''\uc0c1\uc704 \uc77c\uc815 \uc5c6\uc74c'', PARENT.TITLE) AS PARENT_TITLE,\u000d\u000a       IF(SCHDL.PARENT_ID=SCHDL.ID, ''\uc0c1\uc704 \uc77c\uc815 \uc5c6\uc74c'', CONCAT(CONCAT(PARENT.FROM_DATE, '' ~ ''), PARENT.TO_DATE)) AS PARENT_TERM,\u000d\u000a       SCHDL.TITLE, \u000d\u000a       SCHDL.ASSIGNEE,\u000d\u000a       SCHDL.FROM_DATE, \u000d\u000a       SCHDL.TO_DATE,\u000d\u000a       SCHDL.SUMMARY,\u000d\u000a       STATUS.NAME SCHDL_STATUS,\u000d\u000a       SCHDL.SCHDL_STATUS SCHDL_STATUS_CD,\u000d\u000a       DATE_FORMAT(SCHDL.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i:%s'') RGST_DTTM,\u000d\u000a       RGST_MEMBER.NAME RGST_MEMBER,\u000d\u000a       ASSIGNEE.NAME ASSIGNEE,\u000d\u000a       SCHDL.ASSIGNEE ASSIGNEE_ID\u000d\u000aFROM PROJECT_SCHEDULE SCHDL, PROJECT_SCHEDULE PARENT, PROJECT PRJ, MEMBER ASSIGNEE, MEMBER RGST_MEMBER,\u000d\u000a     CODE STATUS\u000d\u000aWHERE SCHDL.PARENT_ID = PARENT.ID\u000d\u000aAND PRJ.ID = SCHDL.PROJECT_ID\u000d\u000aAND SCHDL.ASSIGNEE = ASSIGNEE.ID\u000d\u000aAND SCHDL.RGST_MEMBER_ID = RGST_MEMBER.ID\u000d\u000aAND SCHDL.SCHDL_STATUS = STATUS.ID\u000d\u000aAND PRJ.USE_YN = ''Y''\u000d\u000aAND SCHDL.ID = :ID\u000d\u000aAND PRJ.ID = :PROJECT_ID\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_14','2013-08-30 13:01:28.846000',4,'DOCUMENT','true ','SELECT SCHDL.ID, SCHDL.TITLE, SCHDL.FROM_DATE, \u000d\u000aSCHDL.TO_DATE, (SCHDL.TO_DATE - SCHDL.FROM_DATE) + 1 AS DURATION, \u000d\u000aMEMBER.NAME ASSIGNEE,\u000d\u000aIF(SCHDL.ID = SCHDL.PARENT_ID, ''Y'', ''N'')IS_ROOT,\u000d\u000a''N'' CHILDREN,\u000d\u000aSTATUS.ID SCHDL_STATUS_CD,\u000d\u000aSTATUS.NAME SCHDL_STATUS\u000d\u000aFROM PROJECT_SCHEDULE SCHDL,\u000d\u000a     MEMBER, PROJECT, CODE STATUS\u000d\u000aWHERE 1=1\u000d\u000aAND MEMBER.ID = SCHDL.ASSIGNEE\u000d\u000aAND SCHDL.PROJECT_ID = PROJECT.ID\u000d\u000aAND SCHDL.SCHDL_STATUS = STATUS.ID\u000d\u000aAND SCHDL.PROJECT_ID = :PROJECT_ID\u000d\u000aAND SCHDL.ID = :ID\u000d\u000aAND PROJECT.USE_YN = ''Y''\u000d\u000aGROUP BY SCHDL.ID, SCHDL.TITLE, SCHDL.FROM_DATE\u000d\u000aORDER BY SCHDL.FROM_DATE ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_15','2013-08-26 16:49:25.773000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_15','2013-08-26 16:49:40.978000',4,'DOCUMENT','true ','SELECT COMMENT.SEQ, \u000d\u000a       MEMBER.NAME AS MEMBER_NAME,\u000d\u000a       MEMBER.PHOTO,\u000d\u000a       COMMENT.CONTENT, \u000d\u000a       COMMENT.MEMBER_ID, \u000d\u000a       DATE_FORMAT(COMMENT.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %r'') MDF_DTTM\u000d\u000a  FROM BOARD_COMMENT COMMENT\u000d\u000a       LEFT OUTER JOIN VW_MEMBER MEMBER ON MEMBER.ID   = COMMENT.MEMBER_ID\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a ORDER BY COMMENT.MDF_DTTM ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_15','2013-08-26 17:01:30.505000',4,'DOCUMENT','true ','SELECT COMMENT.SEQ, \u000d\u000a       MEMBER.NAME AS MEMBER_NAME,\u000d\u000a       MEMBER.PHOTO,\u000d\u000a       COMMENT.CONTENT, \u000d\u000a       COMMENT.MEMBER_ID, \u000d\u000a       DATE_FORMAT(COMMENT.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %r'') MDF_DTTM\u000d\u000a  FROM SCHEDULE_COMMENT COMMENT\u000d\u000a       LEFT OUTER JOIN VW_MEMBER MEMBER ON MEMBER.ID   = COMMENT.MEMBER_ID\u000d\u000a WHERE BOARD_ID = :PROJECT_SCHEDULE_ID\u000d\u000a ORDER BY COMMENT.MDF_DTTM ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_15','2013-08-26 17:16:32.599000',4,'DOCUMENT','true ','SELECT COMMENT.SEQ, \u000d\u000a       MEMBER.NAME AS MEMBER_NAME,\u000d\u000a       MEMBER.PHOTO,\u000d\u000a       COMMENT.CONTENT, \u000d\u000a       COMMENT.MEMBER_ID, \u000d\u000a       DATE_FORMAT(COMMENT.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %r'') MDF_DTTM\u000d\u000a  FROM SCHEDULE_COMMENT COMMENT\u000d\u000a       LEFT OUTER JOIN VW_MEMBER MEMBER ON MEMBER.ID   = COMMENT.MEMBER_ID\u000d\u000a WHERE PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a ORDER BY COMMENT.MDF_DTTM ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_16','2013-08-26 20:18:18.017000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_16','2013-08-26 20:22:03.171000',4,'DOCUMENT','true ','SELECT FILE_NAME, \u000d\u000a       SEQ, \u000d\u000a       IF(SIZE >= 1024*1024, CONCAT(FLOOR(SIZE/(1024*1024)),''MB''), IF(SIZE>=1024, CONCAT(FLOOR(SIZE/1024), ''KB''), CONCAT(SIZE, ''B''))) AS SIZE\u000d\u000a  FROM BOARD_FILE\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a ORDER BY SEQ ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_16','2013-08-26 20:25:56.198000',4,'DOCUMENT','true ','SELECT FILE_NAME, \u000d\u000a       SEQ, \u000d\u000a       IF(SIZE >= 1024*1024, CONCAT(FLOOR(SIZE/(1024*1024)),''MB''), IF(SIZE>=1024, CONCAT(FLOOR(SIZE/1024), ''KB''), CONCAT(SIZE, ''B''))) AS SIZE\u000d\u000a  FROM SCHEDULE_ATTATCHMENT\u000d\u000a WHERE PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a ORDER BY SEQ ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_16','2013-08-26 20:26:25.681000',4,'DOCUMENT','true ','SELECT FILE_NAME, \u000d\u000a       SEQ,\u000d\u000a       RGST_MEMBER_ID,\u000d\u000a       MDF_DTTM,\u000d\u000a       IF(SIZE >= 1024*1024, CONCAT(FLOOR(SIZE/(1024*1024)),''MB''), IF(SIZE>=1024, CONCAT(FLOOR(SIZE/1024), ''KB''), CONCAT(SIZE, ''B''))) AS SIZE\u000d\u000a  FROM SCHEDULE_ATTATCHMENT\u000d\u000a WHERE PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a ORDER BY SEQ ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_16','2013-08-26 20:43:24.696000',4,'DOCUMENT','true ','SELECT SCHEDULE_ATTATCHMENT.FILE_NAME, \u000d\u000a       SCHEDULE_ATTATCHMENT.SEQ,\u000d\u000a       SCHEDULE_ATTATCHMENT.RGST_MEMBER_ID,\u000d\u000a       MEMBER.NAME AS MEMBER_NAME,\u000d\u000a       SCHEDULE_ATTATCHMENT.MDF_DTTM,\u000d\u000a       IF(SCHEDULE_ATTATCHMENT.SIZE >= 1024*1024, CONCAT(FLOOR(SCHEDULE_ATTATCHMENT.SIZE/(1024*1024)),''MB''), IF(SCHEDULE_ATTATCHMENT.SIZE>=1024, CONCAT(FLOOR(SCHEDULE_ATTATCHMENT.SIZE/1024), ''KB''), CONCAT(SCHEDULE_ATTATCHMENT.SIZE, ''B''))) AS SIZE\u000d\u000a  FROM SCHEDULE_ATTATCHMENT, MEMBER\u000d\u000a WHERE MEMBER.ID = SCHEDULE_ATTATCHMENT.RGST_MEMBER_ID\u000d\u000a       SCHEDULE_ATTATCHMENT.PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a ORDER BY SCHEDULE_ATTATCHMENT.SEQ ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_16','2013-08-26 20:57:29.793000',4,'DOCUMENT','true ','SELECT SCHEDULE_ATTATCHMENT.FILE_NAME, \u000d\u000a       SCHEDULE_ATTATCHMENT.SEQ,\u000d\u000a       SCHEDULE_ATTATCHMENT.RGST_MEMBER_ID,\u000d\u000a       MEMBER.NAME AS MEMBER_NAME,\u000d\u000a       DATE_FORMAT(SCHEDULE_ATTATCHMENT.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %r'') MDF_DTTM,\u000d\u000a       IF(SCHEDULE_ATTATCHMENT.SIZE >= 1024*1024, CONCAT(FLOOR(SCHEDULE_ATTATCHMENT.SIZE/(1024*1024)),''MB''), IF(SCHEDULE_ATTATCHMENT.SIZE>=1024, CONCAT(FLOOR(SCHEDULE_ATTATCHMENT.SIZE/1024), ''KB''), CONCAT(SCHEDULE_ATTATCHMENT.SIZE, ''B''))) AS SIZE\u000d\u000a  FROM SCHEDULE_ATTATCHMENT, MEMBER\u000d\u000a WHERE MEMBER.ID = SCHEDULE_ATTATCHMENT.RGST_MEMBER_ID\u000d\u000a       SCHEDULE_ATTATCHMENT.PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a ORDER BY SCHEDULE_ATTATCHMENT.SEQ ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_16','2013-08-26 21:00:46.253000',4,'DOCUMENT','true ','SELECT SCHEDULE_ATTATCHMENT.FILE_NAME, \u000d\u000a       SCHEDULE_ATTATCHMENT.SEQ,\u000d\u000a       SCHEDULE_ATTATCHMENT.RGST_MEMBER_ID,\u000d\u000a       MEMBER.NAME AS MEMBER_NAME,\u000d\u000a       DATE_FORMAT(SCHEDULE_ATTATCHMENT.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %r'') MDF_DTTM,\u000d\u000a       IF(SCHEDULE_ATTATCHMENT.SIZE >= 1024*1024, CONCAT(FLOOR(SCHEDULE_ATTATCHMENT.SIZE/(1024*1024)),''MB''), IF(SCHEDULE_ATTATCHMENT.SIZE>=1024, CONCAT(FLOOR(SCHEDULE_ATTATCHMENT.SIZE/1024), ''KB''), CONCAT(SCHEDULE_ATTATCHMENT.SIZE, ''B''))) AS SIZE\u000d\u000a  FROM SCHEDULE_ATTATCHMENT, MEMBER\u000d\u000a WHERE MEMBER.ID = SCHEDULE_ATTATCHMENT.RGST_MEMBER_ID\u000d\u000a   AND SCHEDULE_ATTATCHMENT.PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a ORDER BY SCHEDULE_ATTATCHMENT.SEQ ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_16','2013-08-26 21:03:54.089000',4,'DOCUMENT','true ','SELECT SCHEDULE_ATTATCHMENT.FILE_NAME, \u000d\u000a       SCHEDULE_ATTATCHMENT.SEQ,\u000d\u000a       SCHEDULE_ATTATCHMENT.RGST_MEMBER_ID,\u000d\u000a       MEMBER.NAME AS MEMBER_NAME,\u000d\u000a       DATE_FORMAT(SCHEDULE_ATTATCHMENT.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %r'') MDF_DTTM,\u000d\u000a       IF(SCHEDULE_ATTATCHMENT.SIZE >= 1024*1024, CONCAT(FLOOR(SCHEDULE_ATTATCHMENT.SIZE/(1024*1024)),''MB''), IF(SCHEDULE_ATTATCHMENT.SIZE>=1024, CONCAT(FLOOR(SCHEDULE_ATTATCHMENT.SIZE/1024), ''KB''), CONCAT(SCHEDULE_ATTATCHMENT.SIZE, ''B''))) AS SIZE\u000d\u000a  FROM SCHEDULE_ATTATCHMENT, MEMBER\u000d\u000a WHERE MEMBER.ID = SCHEDULE_ATTATCHMENT.RGST_MEMBER_ID\u000d\u000a   AND SCHEDULE_ATTATCHMENT.PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a ORDER BY SCHEDULE_ATTATCHMENT.SEQ ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_17','2013-08-26 20:18:29.366000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_17','2013-08-26 20:22:05.727000',4,'DOCUMENT','true ','SELECT CONTENT, FILE_NAME FROM BOARD_FILE\u000d\u000aWHERE BOARD_ID = :BOARD_ID\u000d\u000a  AND SEQ = :SEQ')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_17','2013-08-26 20:25:31.376000',4,'DOCUMENT','true ','SELECT CONTENT, FILE_NAME FROM SCHEDULE_ATTATCHMENT\u000d\u000aWHERE PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SEQ = :SEQ')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_18','2013-09-02 14:59:50.125000',4,'DOCUMENT','true ','SELECT PRJ.ID, \u000d\u000a       CONCAT(FORMAT(PRJ.BUDGET_AMOUNT, 0), '' \uc6d0'') AS PROJECT_BUDGET, \u000d\u000a       CONCAT(FORMAT(PRJ.BUDGET_AMOUNT - SUM(IF(BDG.AMOUNT IS NULL, 0, BDG.AMOUNT)), 0), '' \uc6d0'') AS PROJECT_BUDGET_REMAIN\u000d\u000a  FROM PROJECT PRJ LEFT OUTER JOIN \u000d\u000a          PROJECT_SCHEDULE SCHDL JOIN BUDGET BDG\u000d\u000a          ON SCHDL.ID = BDG.PROJECT_SCHEDULE_ID\u000d\u000a       ON PRJ.ID = SCHDL.PROJECT_ID\u000d\u000a WHERE SCHDL.ID = SCHDL.PARENT_ID\u000d\u000a   AND PRJ.USE_YN = ''Y''\u000d\u000a   AND PRJ.ID = :G_PROJECT_ID\u000d\u000aGROUP BY PRJ.ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_19','2013-09-02 14:45:03.038000',4,'DOCUMENT','true ',' SELECT BUDGET.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        CONCAT(FORMAT(BUDGET.AMOUNT, 0), '' \uc6d0'') BUDGET_AMOUNT,\u000d\u000a<dynamic parameter=":IS_ROOT" operator="==" value="Y">\u000d\u000a        CONCAT(FORMAT(BUDGET.AMOUNT, 0), '' \uc6d0'') BUDGET_REMAIN,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":IS_ROOT" operator="!=" value="Y">\u000d\u000a\u0009\u0009 "\ud504\ub85c\uc81d\ud2b8 \uc608\uc0b0 \ucc38\uc870" BUDGET_REMAIN,\u000d\u000a</dynamic>\u000d\u000a        BUDGET.SUMMARY SUMMARY,\u000d\u000a\u0009\u0009DATE_FORMAT(BUDGET.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i:%s'') MDF_DTTM\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL, BUDGET, CODE \u000d\u000aWHERE BUDGET.BUDGET_CODE = CODE.ID\u000d\u000a  AND BUDGET.PROJECT_SCHEDULE_ID = SCHDL.ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_19','2013-09-02 14:45:12.326000',4,'DOCUMENT','true ',' SELECT BUDGET.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        CONCAT(FORMAT(BUDGET.AMOUNT, 0), '' \uc6d0'') BUDGET_AMOUNT,\u000d\u000a<dynamic parameter=":IS_ROOT" operator="!=" value="Y">\u000d\u000a        CONCAT(FORMAT(BUDGET.AMOUNT, 0), '' \uc6d0'') BUDGET_REMAIN,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":IS_ROOT" operator="==" value="Y">\u000d\u000a\u0009\u0009 "\ud504\ub85c\uc81d\ud2b8 \uc608\uc0b0 \ucc38\uc870" BUDGET_REMAIN,\u000d\u000a</dynamic>\u000d\u000a        BUDGET.SUMMARY SUMMARY,\u000d\u000a\u0009\u0009DATE_FORMAT(BUDGET.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i:%s'') MDF_DTTM\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL, BUDGET, CODE \u000d\u000aWHERE BUDGET.BUDGET_CODE = CODE.ID\u000d\u000a  AND BUDGET.PROJECT_SCHEDULE_ID = SCHDL.ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_19','2013-09-02 14:47:16.598000',4,'DOCUMENT','true ',' SELECT BUDGET.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        CONCAT(FORMAT(BUDGET.AMOUNT, 0), '' \uc6d0'') BUDGET_AMOUNT,\u000d\u000a        IF(PROJECT_SCHEDULE.ID == PROJECT_SCHEDULE.PARENT_ID, "\ud504\ub85c\uc81d\ud2b8 \uc608\uc0b0 \ucc38\uc870", CONCAT(FORMAT(BUDGET.AMOUNT, 0), '' \uc6d0'')) BUDGET_REMAIN,\u000d\u000a        BUDGET.SUMMARY SUMMARY,\u000d\u000a\u0009\u0009DATE_FORMAT(BUDGET.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i:%s'') MDF_DTTM\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL, BUDGET, CODE \u000d\u000aWHERE BUDGET.BUDGET_CODE = CODE.ID\u000d\u000a  AND BUDGET.PROJECT_SCHEDULE_ID = SCHDL.ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_19','2013-09-02 14:47:45.190000',4,'DOCUMENT','true ',' SELECT BUDGET.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        CONCAT(FORMAT(BUDGET.AMOUNT, 0), '' \uc6d0'') BUDGET_AMOUNT,\u000d\u000a        IF(PROJECT_SCHEDULE.ID = PROJECT_SCHEDULE.PARENT_ID, "\ud504\ub85c\uc81d\ud2b8 \uc608\uc0b0 \ucc38\uc870", CONCAT(FORMAT(BUDGET.AMOUNT, 0), '' \uc6d0'')) BUDGET_REMAIN,\u000d\u000a        BUDGET.SUMMARY SUMMARY,\u000d\u000a\u0009\u0009DATE_FORMAT(BUDGET.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i:%s'') MDF_DTTM\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL, BUDGET, CODE \u000d\u000aWHERE BUDGET.BUDGET_CODE = CODE.ID\u000d\u000a  AND BUDGET.PROJECT_SCHEDULE_ID = SCHDL.ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_19','2013-09-02 14:49:15.252000',4,'DOCUMENT','true ',' SELECT BUDGET.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        CONCAT(FORMAT(BUDGET.AMOUNT, 0), '' \uc6d0'') BUDGET_AMOUNT,\u000d\u000a        IF(SCHDL.ID = SCHDL.PARENT_ID, "\ud504\ub85c\uc81d\ud2b8 \uc608\uc0b0 \ucc38\uc870", CONCAT(FORMAT(BUDGET.AMOUNT, 0), '' \uc6d0'')) BUDGET_REMAIN,\u000d\u000a        BUDGET.SUMMARY SUMMARY,\u000d\u000a\u0009\u0009DATE_FORMAT(BUDGET.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i:%s'') MDF_DTTM\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL, BUDGET, CODE \u000d\u000aWHERE BUDGET.BUDGET_CODE = CODE.ID\u000d\u000a  AND BUDGET.PROJECT_SCHEDULE_ID = SCHDL.ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_19','2013-09-02 16:30:36.869000',4,'DOCUMENT','true ',' SELECT BUDGET.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        CONCAT(FORMAT(BUDGET.AMOUNT, 0), '' \uc6d0'') BUDGET_AMOUNT,\u000d\u000a        IF(SCHDL.ID = SCHDL.PARENT_ID, "\uc608\uc0b0 \ubc30\uc815 \uc794\uc561 \ucc38\uc870", CONCAT(FORMAT(BUDGET.AMOUNT, 0), '' \uc6d0'')) BUDGET_REMAIN,\u000d\u000a        BUDGET.SUMMARY SUMMARY,\u000d\u000a\u0009\u0009DATE_FORMAT(BUDGET.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i:%s'') MDF_DTTM\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL, BUDGET, CODE \u000d\u000aWHERE BUDGET.BUDGET_CODE = CODE.ID\u000d\u000a  AND BUDGET.PROJECT_SCHEDULE_ID = SCHDL.ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_19','2013-09-02 16:54:51.844000',4,'DOCUMENT','true ',' SELECT BUDGET.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        CONCAT(FORMAT(BUDGET.AMOUNT, 0), '' \uc6d0'') BUDGET_AMOUNT,\u000d\u000a        IF(SCHDL.ID = SCHDL.PARENT_ID, "\uc608\uc0b0 \ubc30\uc815 \uc794\uc561 \ucc38\uc870", CONCAT(FORMAT(BUDGET.AMOUNT, 0), '' \uc6d0'')) BUDGET_REMAIN,\u000d\u000a        BUDGET.SUMMARY SUMMARY,\u000d\u000a\u0009    DATE_FORMAT(BUDGET.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i:%s'') MDF_DTTM\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL, BUDGET, CODE \u000d\u000aWHERE BUDGET.BUDGET_CODE = CODE.ID\u000d\u000a  AND BUDGET.PROJECT_SCHEDULE_ID = SCHDL.ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_19','2013-09-02 17:11:53.162000',4,'DOCUMENT','true ',' SELECT BGD_COST.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        CONCAT(FORMAT(BGD_COST.AMOUNT, 0), '' \uc6d0'') BUDGET_AMOUNT,\u000d\u000a        BGD_COST.BUDGET_REMAIN BUDGET_REMAIN,\u000d\u000a        BGD_COST.SUMMARY SUMMARY,\u000d\u000a\u0009DATE_FORMAT(BGD_COST.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i:%s'') MDF_DTTM\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL, \u000d\u000a        (\u000d\u000a        SELECT BUDGET.BUDGET_CODE, BUDGET.PROJECT_SCHEDULE_ID, BUDGET.AMOUNT, BUDGET.SUMMARY, BUDGET.MDF_DTTM,\u000d\u000a               CONCAT(FORMAT(BUDGET.AMOUNT - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)), 0), '' \uc6d0'') BUDGET_REMAIN\u000d\u000a          FROM BUDGET LEFT OUTER JOIN COST\u000d\u000a               ON BUDGET.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND BUDGET.BUDGET_CODE = COST.BUDGET_CODE\u000d\u000a      GROUP BY BUDGET.BUDGET_CODE, BUDGET.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST, \u000d\u000a        CODE \u000d\u000aWHERE BGD_COST.BUDGET_CODE = CODE.ID\u000d\u000a  AND BGD_COST.PROJECT_SCHEDULE_ID = SCHDL.ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_19','2013-09-02 17:12:09.727000',4,'DOCUMENT','true ',' SELECT BGD_COST.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        CONCAT(FORMAT(BGD_COST.AMOUNT, 0), '' \uc6d0'') BUDGET_AMOUNT,\u000d\u000a        BGD_COST.BUDGET_REMAIN BUDGET_REMAIN,\u000d\u000a        BGD_COST.SUMMARY SUMMARY,\u000d\u000a\u0009DATE_FORMAT(BGD_COST.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i:%s'') MDF_DTTM\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL, \u000d\u000a        (\u000d\u000a         SELECT BUDGET.BUDGET_CODE, BUDGET.PROJECT_SCHEDULE_ID, BUDGET.AMOUNT, BUDGET.SUMMARY, BUDGET.MDF_DTTM,\u000d\u000a                CONCAT(FORMAT(BUDGET.AMOUNT - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)), 0), '' \uc6d0'') BUDGET_REMAIN\u000d\u000a           FROM BUDGET LEFT OUTER JOIN COST\u000d\u000a                ON BUDGET.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND BUDGET.BUDGET_CODE = COST.BUDGET_CODE\u000d\u000a       GROUP BY BUDGET.BUDGET_CODE, BUDGET.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST, \u000d\u000a        CODE \u000d\u000aWHERE BGD_COST.BUDGET_CODE = CODE.ID\u000d\u000a  AND BGD_COST.PROJECT_SCHEDULE_ID = SCHDL.ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_19','2013-09-02 17:23:12.755000',4,'DOCUMENT','true ',' SELECT BGD_COST.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        CONCAT(FORMAT(BGD_COST.AMOUNT, 0), '' \uc6d0'') BUDGET_AMOUNT,\u000d\u000a        BGD_COST.BUDGET_REMAIN BUDGET_REMAIN,\u000d\u000a        BGD_COST.SUMMARY SUMMARY,\u000d\u000a\u0009DATE_FORMAT(BGD_COST.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i:%s'') MDF_DTTM\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL, \u000d\u000a        (\u000d\u000a         SELECT BUDGET.BUDGET_CODE, BUDGET.PROJECT_SCHEDULE_ID, BUDGET.AMOUNT, BUDGET.SUMMARY, BUDGET.MDF_DTTM,\u000d\u000a                CONCAT(FORMAT(BUDGET.AMOUNT - BUDGET.ALLOCATION_AMOUNT - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)), 0), '' \uc6d0'') BUDGET_REMAIN\u000d\u000a           FROM BUDGET LEFT OUTER JOIN COST\u000d\u000a                ON BUDGET.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND BUDGET.BUDGET_CODE = COST.BUDGET_CODE\u000d\u000a       GROUP BY BUDGET.BUDGET_CODE, BUDGET.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST, \u000d\u000a        CODE \u000d\u000aWHERE BGD_COST.BUDGET_CODE = CODE.ID\u000d\u000a  AND BGD_COST.PROJECT_SCHEDULE_ID = SCHDL.ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_19','2013-09-02 21:15:52.268000',4,'DOCUMENT','true ',' SELECT BGD_COST.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        CONCAT(FORMAT(BGD_COST.AMOUNT, 0), '' \uc6d0'') BUDGET_AMOUNT,\u000d\u000a        BGD_COST.BUDGET_REMAIN BUDGET_REMAIN,\u000d\u000a        BGD_COST.SUMMARY SUMMARY,\u000d\u000a\u0009DATE_FORMAT(BGD_COST.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i:%s'') MDF_DTTM\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL, \u000d\u000a        (\u000d\u000a           SELECT SCHDL.ID, SCHDL.PARENT_ID, P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID, P.AMOUNT, P.SUMMARY, P.MDF_DTTM,\u000d\u000a           CONCAT(FORMAT(P.AMOUNT - SUM(IF(C.AMOUNT IS NULL, 0, C.AMOUNT)) - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)), 0), '' \uc6d0'') BUDGET_REMAIN\u000d\u000a           FROM BUDGET P LEFT OUTER JOIN COST\u000d\u000a                ON P.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = COST.BUDGET_CODE,\u000d\u000a                PROJECT_SCHEDULE SCHDL LEFT OUTER JOIN BUDGET C\u000d\u000a                ON SCHDL.ID = C.PROJECT_SCHEDULE_ID\u000d\u000a           WHERE SCHDL.PARENT_ID = P.PROJECT_SCHEDULE_ID\u000d\u000a             AND SCHDL.PARENT_ID != SCHDL.ID\u000d\u000a           GROUP BY P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST, \u000d\u000a        CODE \u000d\u000aWHERE BGD_COST.BUDGET_CODE = CODE.ID\u000d\u000a  AND BGD_COST.PROJECT_SCHEDULE_ID = SCHDL.ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_19','2013-09-02 21:16:45.398000',4,'DOCUMENT','true ',' SELECT BGD_COST.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        CONCAT(FORMAT(BGD_COST.AMOUNT, 0), '' \uc6d0'') BUDGET_AMOUNT,\u000d\u000a        BGD_COST.BUDGET_REMAIN BUDGET_REMAIN,\u000d\u000a        BGD_COST.SUMMARY SUMMARY,\u000d\u000a\u0009DATE_FORMAT(BGD_COST.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i:%s'') MDF_DTTM\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL, \u000d\u000a        (\u000d\u000a           SELECT SCHDL.ID, SCHDL.PARENT_ID, P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID, P.AMOUNT, P.SUMMARY, P.MDF_DTTM,\u000d\u000a           CONCAT(FORMAT(P.AMOUNT - SUM(IF(C.AMOUNT IS NULL, 0, C.AMOUNT)) - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)), 0), '' \uc6d0'') BUDGET_REMAIN\u000d\u000a           FROM BUDGET P LEFT OUTER JOIN COST\u000d\u000a                ON P.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = COST.BUDGET_CODE,\u000d\u000a                PROJECT_SCHEDULE SCHDL LEFT OUTER JOIN BUDGET C\u000d\u000a                ON SCHDL.ID = C.PROJECT_SCHEDULE_ID\u000d\u000a           WHERE SCHDL.PARENT_ID = P.PROJECT_SCHEDULE_ID\u000d\u000a             AND SCHDL.PARENT_ID != SCHDL.ID\u000d\u000a           GROUP BY P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST, \u000d\u000a        CODE \u000d\u000aWHERE BGD_COST.BUDGET_CODE = CODE.ID\u000d\u000a  AND BGD_COST.PROJECT_SCHEDULE_ID = SCHDL.ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_19','2013-09-02 21:18:32.360000',4,'DOCUMENT','true ',' SELECT BGD_COST.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        CONCAT(FORMAT(BGD_COST.AMOUNT, 0), '' \uc6d0'') BUDGET_AMOUNT,\u000d\u000a        BGD_COST.BUDGET_REMAIN BUDGET_REMAIN,\u000d\u000a        BGD_COST.SUMMARY SUMMARY,\u000d\u000a        DATE_FORMAT(BGD_COST.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i:%s'') MDF_DTTM\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL, \u000d\u000a        (\u000d\u000a           SELECT SCHDL.ID, SCHDL.PARENT_ID, P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID, P.AMOUNT, P.SUMMARY, P.MDF_DTTM,\u000d\u000a           CONCAT(FORMAT(P.AMOUNT - SUM(IF(C.AMOUNT IS NULL, 0, C.AMOUNT)) - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)), 0), '' \uc6d0'') BUDGET_REMAIN\u000d\u000a           FROM BUDGET P LEFT OUTER JOIN COST\u000d\u000a                ON P.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = COST.BUDGET_CODE,\u000d\u000a                PROJECT_SCHEDULE SCHDL LEFT OUTER JOIN BUDGET C\u000d\u000a                ON SCHDL.ID = C.PROJECT_SCHEDULE_ID\u000d\u000a           WHERE SCHDL.PARENT_ID = P.PROJECT_SCHEDULE_ID\u000d\u000a             AND SCHDL.PARENT_ID != SCHDL.ID\u000d\u000a           GROUP BY P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST, \u000d\u000a        CODE \u000d\u000aWHERE BGD_COST.BUDGET_CODE = CODE.ID\u000d\u000a  AND BGD_COST.PROJECT_SCHEDULE_ID = SCHDL.ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_19','2013-09-02 21:24:00.529000',4,'DOCUMENT','true ',' SELECT BGD_COST.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        CONCAT(FORMAT(BGD_COST.AMOUNT, 0), '' \uc6d0'') BUDGET_AMOUNT,\u000d\u000a        BGD_COST.BUDGET_REMAIN BUDGET_REMAIN,\u000d\u000a        BGD_COST.SUMMARY SUMMARY,\u000d\u000a        DATE_FORMAT(BGD_COST.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i:%s'') MDF_DTTM\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL, \u000d\u000a        (\u000d\u000a               SELECT P.PROJECT_SCHEDULE_ID, P.AMOUNT, P.SUMMARY, P.MDF_DTTM, P.BUDGET_CODE,\u000d\u000a                      CONCAT(FORMAT(P.AMOUNT - SUM(IF(C.AMOUNT IS NULL, 0, C.AMOUNT)) - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)), 0), '' \uc6d0'') BUDGET_REMAIN\u000d\u000a                 FROM BUDGET P LEFT OUTER JOIN COST\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = COST.BUDGET_CODE\u000d\u000a                      LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a                      LEFT OUTER JOIN BUDGET C\u000d\u000a                      ON SCHDL.ID = C.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = C.BUDGET_CODE AND SCHDL.PARENT_ID != C.PROJECT_SCHEDULE_ID\u000d\u000a               GROUP BY P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST, \u000d\u000a        CODE \u000d\u000aWHERE BGD_COST.BUDGET_CODE = CODE.ID\u000d\u000a  AND BGD_COST.PROJECT_SCHEDULE_ID = SCHDL.ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_20','2013-09-03 00:02:26.828000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_20','2013-09-03 00:02:37.962000',4,'DOCUMENT','true ',' SELECT BGD_COST.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        CONCAT(FORMAT(BGD_COST.AMOUNT, 0), '' \uc6d0'') BUDGET_AMOUNT,\u000d\u000a        BGD_COST.BUDGET_REMAIN BUDGET_REMAIN,\u000d\u000a        BGD_COST.SUMMARY SUMMARY,\u000d\u000a        DATE_FORMAT(BGD_COST.MDF_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i:%s'') MDF_DTTM\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL, \u000d\u000a        (\u000d\u000a               SELECT P.PROJECT_SCHEDULE_ID, P.AMOUNT, P.SUMMARY, P.MDF_DTTM, P.BUDGET_CODE,\u000d\u000a                      CONCAT(FORMAT(P.AMOUNT - SUM(IF(C.AMOUNT IS NULL, 0, C.AMOUNT)) - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)), 0), '' \uc6d0'') BUDGET_REMAIN\u000d\u000a                 FROM BUDGET P LEFT OUTER JOIN COST\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = COST.BUDGET_CODE\u000d\u000a                      LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a                      LEFT OUTER JOIN BUDGET C\u000d\u000a                      ON SCHDL.ID = C.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = C.BUDGET_CODE AND SCHDL.PARENT_ID != C.PROJECT_SCHEDULE_ID\u000d\u000a               GROUP BY P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST, \u000d\u000a        CODE \u000d\u000aWHERE BGD_COST.BUDGET_CODE = CODE.ID\u000d\u000a  AND BGD_COST.PROJECT_SCHEDULE_ID = SCHDL.ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_20','2013-09-03 01:15:35.167000',4,'DOCUMENT','false',' SELECT CODE.ID BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        IF(BGD_COST.BUDGET_REMAIN IS NULL, BGD_COST.AMOUNT, BGD_COST.BUDGET_REMAIN) BUDGET_REMAIN\u000d\u000a   FROM \u000d\u000a        CODE \u000d\u000a        LEFT OUTER JOIN\u000d\u000a        (\u000d\u000a               SELECT P.PROJECT_SCHEDULE_ID PROJECT_SCHEDULE_ID, P.BUDGET_CODE BUDGET_CODE, P.AMOUNT,\u000d\u000a                      P.AMOUNT - SUM(IF(C.AMOUNT IS NULL, 0, C.AMOUNT)) - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)) BUDGET_REMAIN\u000d\u000a                 FROM BUDGET P LEFT OUTER JOIN COST\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = COST.BUDGET_CODE\u000d\u000a                      LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a                      LEFT OUTER JOIN BUDGET C\u000d\u000a                      ON SCHDL.ID = C.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = C.BUDGET_CODE AND SCHDL.PARENT_ID != C.PROJECT_SCHEDULE_ID\u000d\u000a               GROUP BY P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST ON CODE.ID = BGD_COST.BUDGET_CODE AND BGD_COST.PROJECT_SCHEDULE_ID = ''20130829135947075''\u000d\u000aWHERE CODE.CODE_GROUP_ID = ''BG001''')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_20','2013-09-03 01:21:20.735000',4,'DOCUMENT','false',' SELECT CODE.ID BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        BGD_COST.BUDGET_REMAIN BUDGET_REMAIN\u000d\u000a   FROM CODE \u000d\u000a        LEFT OUTER JOIN\u000d\u000a        (\u000d\u000a               SELECT P.PROJECT_SCHEDULE_ID PROJECT_SCHEDULE_ID, P.BUDGET_CODE BUDGET_CODE, P.AMOUNT,\u000d\u000a                      P.AMOUNT - SUM(IF(C.AMOUNT IS NULL, 0, C.AMOUNT)) - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)) BUDGET_REMAIN\u000d\u000a                 FROM BUDGET P LEFT OUTER JOIN COST\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = COST.BUDGET_CODE\u000d\u000a                      LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a                      LEFT OUTER JOIN BUDGET C\u000d\u000a                      ON SCHDL.ID = C.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = C.BUDGET_CODE AND SCHDL.PARENT_ID != C.PROJECT_SCHEDULE_ID\u000d\u000a               GROUP BY P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST ON CODE.ID = BGD_COST.BUDGET_CODE AND BGD_COST.PROJECT_SCHEDULE_ID = ''20130829140033076''\u000d\u000aWHERE CODE.CODE_GROUP_ID = ''BG001''')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_20','2013-09-03 01:26:45.719000',4,'DOCUMENT','false',' SELECT CODE.ID BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        IF(BGD_COST.BUDGET_REMAIN IS NULL, S.AMOUNT,BGD_COST.BUDGET_REMAIN) BUDGET_REMAIN\u000d\u000a   FROM CODE \u000d\u000a        LEFT OUTER JOIN\u000d\u000a        (\u000d\u000a               SELECT P.PROJECT_SCHEDULE_ID PROJECT_SCHEDULE_ID, P.BUDGET_CODE BUDGET_CODE, P.AMOUNT,\u000d\u000a                      P.AMOUNT - SUM(IF(C.AMOUNT IS NULL, 0, C.AMOUNT)) - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)) BUDGET_REMAIN\u000d\u000a                 FROM BUDGET P LEFT OUTER JOIN COST\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = COST.BUDGET_CODE\u000d\u000a                      LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a                      LEFT OUTER JOIN BUDGET C\u000d\u000a                      ON SCHDL.ID = C.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = C.BUDGET_CODE AND SCHDL.PARENT_ID != C.PROJECT_SCHEDULE_ID\u000d\u000a               GROUP BY P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST ON CODE.ID = BGD_COST.BUDGET_CODE AND BGD_COST.PROJECT_SCHEDULE_ID = ''20130829140033076'',\u000d\u000a        PROJECT_SCHEDULE, BUDGET S\u000d\u000aWHERE CODE.CODE_GROUP_ID = ''BG001''\u000d\u000a  AND PROJECT_SCHEDULE.ID = ''20130829140033076''\u000d\u000a  AND PROJECT_SCHEDULE.PARENT_ID = S.PROJECT_SCHEDULE_ID\u000d\u000a  AND S.BUDGET_CODE = CODE.ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_20','2013-09-03 01:28:18.514000',4,'DOCUMENT','false',' SELECT CODE.ID BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        IF(BGD_COST.BUDGET_REMAIN IS NULL, S.AMOUNT, S.AMOUNT - BGD_COST.BUDGET_REMAIN) BUDGET_REMAIN\u000d\u000a   FROM CODE \u000d\u000a        LEFT OUTER JOIN\u000d\u000a        (\u000d\u000a               SELECT P.PROJECT_SCHEDULE_ID PROJECT_SCHEDULE_ID, P.BUDGET_CODE BUDGET_CODE, P.AMOUNT,\u000d\u000a                      P.AMOUNT - SUM(IF(C.AMOUNT IS NULL, 0, C.AMOUNT)) - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)) BUDGET_REMAIN\u000d\u000a                 FROM BUDGET P LEFT OUTER JOIN COST\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = COST.BUDGET_CODE\u000d\u000a                      LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a                      LEFT OUTER JOIN BUDGET C\u000d\u000a                      ON SCHDL.ID = C.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = C.BUDGET_CODE AND SCHDL.PARENT_ID != C.PROJECT_SCHEDULE_ID\u000d\u000a               GROUP BY P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST ON CODE.ID = BGD_COST.BUDGET_CODE AND BGD_COST.PROJECT_SCHEDULE_ID = ''20130829140033076'',\u000d\u000a        PROJECT_SCHEDULE, BUDGET S\u000d\u000aWHERE CODE.CODE_GROUP_ID = ''BG001''\u000d\u000a  AND PROJECT_SCHEDULE.ID = ''20130829140033076''\u000d\u000a  AND PROJECT_SCHEDULE.PARENT_ID = S.PROJECT_SCHEDULE_ID\u000d\u000a  AND S.BUDGET_CODE = CODE.ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_20','2013-09-03 01:43:38.073000',4,'DOCUMENT','true ',' SELECT BGD_COST.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        BGD_COST.BUDGET_REMAIN BUDGET_REMAIN\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL,\u000d\u000a        (\u000d\u000a               SELECT P.PROJECT_SCHEDULE_ID, P.AMOUNT, P.SUMMARY, P.MDF_DTTM, P.BUDGET_CODE,\u000d\u000a                      CONCAT(FORMAT(P.AMOUNT - SUM(IF(C.AMOUNT IS NULL, 0, C.AMOUNT)) - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)), 0), '' \uc6d0'') BUDGET_REMAIN\u000d\u000a                 FROM BUDGET P LEFT OUTER JOIN COST\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = COST.BUDGET_CODE\u000d\u000a                      LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a                      LEFT OUTER JOIN BUDGET C\u000d\u000a                      ON SCHDL.ID = C.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = C.BUDGET_CODE AND SCHDL.PARENT_ID != C.PROJECT_SCHEDULE_ID\u000d\u000a               GROUP BY P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST, \u000d\u000a        CODE \u000d\u000aWHERE BGD_COST.BUDGET_CODE = CODE.ID\u000d\u000a  AND BGD_COST.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_20','2013-09-03 01:45:16.653000',4,'DOCUMENT','true ',' SELECT BGD_COST.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        BGD_COST.BUDGET_REMAIN BUDGET_REMAIN\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL,\u000d\u000a        (\u000d\u000a               SELECT P.PROJECT_SCHEDULE_ID, P.AMOUNT, P.SUMMARY, P.MDF_DTTM, P.BUDGET_CODE,\u000d\u000a                      CONCAT(FORMAT(P.AMOUNT - SUM(IF(C.AMOUNT IS NULL, 0, C.AMOUNT)) - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)), 0), '' \uc6d0'') BUDGET_REMAIN\u000d\u000a                 FROM BUDGET P LEFT OUTER JOIN COST\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = COST.BUDGET_CODE\u000d\u000a                      LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a                      LEFT OUTER JOIN BUDGET C\u000d\u000a                      ON SCHDL.ID = C.PROJECT_SCHEDULE_ID \u000d\u000a                      AND P.BUDGET_CODE = C.BUDGET_CODE \u000d\u000a                      AND SCHDL.PARENT_ID != C.PROJECT_SCHEDULE_ID\u000d\u000a                      AND C.PROJECT_SCHEDULE_ID != :PROJECT_SCHEDULE_ID\u000d\u000a               GROUP BY P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST, \u000d\u000a        CODE \u000d\u000aWHERE BGD_COST.BUDGET_CODE = CODE.ID\u000d\u000a  AND BGD_COST.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_20','2013-09-03 01:47:15.393000',4,'DOCUMENT','true ','\u000d\u000a SELECT BGD_COST.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        BGD_COST.BUDGET_REMAIN BUDGET_REMAIN\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL,\u000d\u000a        (\u000d\u000a               SELECT P.PROJECT_SCHEDULE_ID, P.AMOUNT, P.SUMMARY, P.MDF_DTTM, P.BUDGET_CODE,\u000d\u000a                      P.AMOUNT - SUM(IF(C.AMOUNT IS NULL, 0, C.AMOUNT)) - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)) BUDGET_REMAIN\u000d\u000a                 FROM BUDGET P LEFT OUTER JOIN COST\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = COST.BUDGET_CODE\u000d\u000a                      LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a                      LEFT OUTER JOIN BUDGET C\u000d\u000a                      ON SCHDL.ID = C.PROJECT_SCHEDULE_ID \u000d\u000a                      AND P.BUDGET_CODE = C.BUDGET_CODE \u000d\u000a                      AND SCHDL.PARENT_ID != C.PROJECT_SCHEDULE_ID\u000d\u000a                      AND C.PROJECT_SCHEDULE_ID != :PROJECT_SCHEDULE_ID\u000d\u000a               GROUP BY P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST, \u000d\u000a        CODE \u000d\u000aWHERE BGD_COST.BUDGET_CODE = CODE.ID\u000d\u000a  AND BGD_COST.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_20','2013-09-03 01:47:45.536000',4,'DOCUMENT','true ','<dynamic parameter="IS_ROOT" operator="!=" value="Y">\u000d\u000a SELECT BGD_COST.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        BGD_COST.BUDGET_REMAIN BUDGET_REMAIN\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL,\u000d\u000a        (\u000d\u000a               SELECT P.PROJECT_SCHEDULE_ID, P.AMOUNT, P.SUMMARY, P.MDF_DTTM, P.BUDGET_CODE,\u000d\u000a                      P.AMOUNT - SUM(IF(C.AMOUNT IS NULL, 0, C.AMOUNT)) - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)) BUDGET_REMAIN\u000d\u000a                 FROM BUDGET P LEFT OUTER JOIN COST\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = COST.BUDGET_CODE\u000d\u000a                      LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a                      LEFT OUTER JOIN BUDGET C\u000d\u000a                      ON SCHDL.ID = C.PROJECT_SCHEDULE_ID \u000d\u000a                      AND P.BUDGET_CODE = C.BUDGET_CODE \u000d\u000a                      AND SCHDL.PARENT_ID != C.PROJECT_SCHEDULE_ID\u000d\u000a                      AND C.PROJECT_SCHEDULE_ID != :PROJECT_SCHEDULE_ID\u000d\u000a               GROUP BY P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST, \u000d\u000a        CODE \u000d\u000aWHERE BGD_COST.BUDGET_CODE = CODE.ID\u000d\u000a  AND BGD_COST.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_20','2013-09-03 01:48:01.930000',4,'DOCUMENT','true ','<dynamic parameter="IS_ROOT" operator="!=" value="Y">\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter="IS_ROOT" operator="!=" value="Y">\u000d\u000a SELECT BGD_COST.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        BGD_COST.BUDGET_REMAIN BUDGET_REMAIN\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL,\u000d\u000a        (\u000d\u000a               SELECT P.PROJECT_SCHEDULE_ID, P.AMOUNT, P.SUMMARY, P.MDF_DTTM, P.BUDGET_CODE,\u000d\u000a                      P.AMOUNT - SUM(IF(C.AMOUNT IS NULL, 0, C.AMOUNT)) - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)) BUDGET_REMAIN\u000d\u000a                 FROM BUDGET P LEFT OUTER JOIN COST\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = COST.BUDGET_CODE\u000d\u000a                      LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a                      LEFT OUTER JOIN BUDGET C\u000d\u000a                      ON SCHDL.ID = C.PROJECT_SCHEDULE_ID \u000d\u000a                      AND P.BUDGET_CODE = C.BUDGET_CODE \u000d\u000a                      AND SCHDL.PARENT_ID != C.PROJECT_SCHEDULE_ID\u000d\u000a                      AND C.PROJECT_SCHEDULE_ID != :PROJECT_SCHEDULE_ID\u000d\u000a               GROUP BY P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST, \u000d\u000a        CODE \u000d\u000aWHERE BGD_COST.BUDGET_CODE = CODE.ID\u000d\u000a  AND BGD_COST.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_20','2013-09-03 02:00:43.769000',4,'DOCUMENT','true ','<dynamic parameter="IS_ROOT" operator="!=" value="Y">\u000d\u000a  SELECT CODE.ID BUDGET_CODE, CODE.NAME BUDGET_NAME, REMAIN.PROJECT_BUDGET_REMAIN BUDGET_REMAIN\u000d\u000a    FROM (\u000d\u000a          SELECT PRJ.BUDGET_AMOUNT - SUM(IF(BDG.AMOUNT IS NULL, 0, BDG.AMOUNT)) AS PROJECT_BUDGET_REMAIN\u000d\u000a            FROM PROJECT PRJ \u000d\u000a                 LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL \u000d\u000a                 JOIN BUDGET BDG\u000d\u000a                 ON SCHDL.ID = BDG.PROJECT_SCHEDULE_ID\u000d\u000a                 ON PRJ.ID = SCHDL.PROJECT_ID\u000d\u000a           WHERE SCHDL.ID = SCHDL.PARENT_ID\u000d\u000a             AND PRJ.USE_YN = ''Y''\u000d\u000a             AND PRJ.ID = :G_PROJECT_ID\u000d\u000a        GROUP BY PRJ.ID\u000d\u000a         ) REMAIN, CODE\u000d\u000aWHERE CODE.CODE_GROUP_ID = ''BG001''\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter="IS_ROOT" operator="!=" value="Y">\u000d\u000a SELECT BGD_COST.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        BGD_COST.BUDGET_REMAIN BUDGET_REMAIN\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL,\u000d\u000a        (\u000d\u000a               SELECT P.PROJECT_SCHEDULE_ID, P.AMOUNT, P.SUMMARY, P.MDF_DTTM, P.BUDGET_CODE,\u000d\u000a                      P.AMOUNT - SUM(IF(C.AMOUNT IS NULL, 0, C.AMOUNT)) - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)) BUDGET_REMAIN\u000d\u000a                 FROM BUDGET P LEFT OUTER JOIN COST\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = COST.BUDGET_CODE\u000d\u000a                      LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a                      LEFT OUTER JOIN BUDGET C\u000d\u000a                      ON SCHDL.ID = C.PROJECT_SCHEDULE_ID \u000d\u000a                      AND P.BUDGET_CODE = C.BUDGET_CODE \u000d\u000a                      AND SCHDL.PARENT_ID != C.PROJECT_SCHEDULE_ID\u000d\u000a                      AND C.PROJECT_SCHEDULE_ID != :PROJECT_SCHEDULE_ID\u000d\u000a               GROUP BY P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST, \u000d\u000a        CODE \u000d\u000aWHERE BGD_COST.BUDGET_CODE = CODE.ID\u000d\u000a  AND BGD_COST.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_20','2013-09-03 02:07:43.178000',4,'DOCUMENT','true ','<dynamic parameter=":IS_ROOT" operator="!=" value="Y">\u000d\u000a  SELECT CODE.ID BUDGET_CODE, CODE.NAME BUDGET_NAME, REMAIN.PROJECT_BUDGET_REMAIN BUDGET_REMAIN\u000d\u000a    FROM (\u000d\u000a          SELECT PRJ.BUDGET_AMOUNT - SUM(IF(BDG.AMOUNT IS NULL, 0, BDG.AMOUNT)) AS PROJECT_BUDGET_REMAIN\u000d\u000a            FROM PROJECT PRJ \u000d\u000a                 LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL \u000d\u000a                 JOIN BUDGET BDG\u000d\u000a                 ON SCHDL.ID = BDG.PROJECT_SCHEDULE_ID\u000d\u000a                 ON PRJ.ID = SCHDL.PROJECT_ID\u000d\u000a           WHERE SCHDL.ID = SCHDL.PARENT_ID\u000d\u000a             AND PRJ.USE_YN = ''Y''\u000d\u000a             AND PRJ.ID = :G_PROJECT_ID\u000d\u000a        GROUP BY PRJ.ID\u000d\u000a         ) REMAIN, CODE\u000d\u000aWHERE CODE.CODE_GROUP_ID = ''BG001''\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":IS_ROOT" operator="!=" value="Y">\u000d\u000a SELECT BGD_COST.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        BGD_COST.BUDGET_REMAIN BUDGET_REMAIN\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL,\u000d\u000a        (\u000d\u000a               SELECT P.PROJECT_SCHEDULE_ID, P.AMOUNT, P.SUMMARY, P.MDF_DTTM, P.BUDGET_CODE,\u000d\u000a                      P.AMOUNT - SUM(IF(C.AMOUNT IS NULL, 0, C.AMOUNT)) - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)) BUDGET_REMAIN\u000d\u000a                 FROM BUDGET P LEFT OUTER JOIN COST\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = COST.BUDGET_CODE\u000d\u000a                      LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a                      LEFT OUTER JOIN BUDGET C\u000d\u000a                      ON SCHDL.ID = C.PROJECT_SCHEDULE_ID \u000d\u000a                      AND P.BUDGET_CODE = C.BUDGET_CODE \u000d\u000a                      AND SCHDL.PARENT_ID != C.PROJECT_SCHEDULE_ID\u000d\u000a                      AND C.PROJECT_SCHEDULE_ID != :PROJECT_SCHEDULE_ID\u000d\u000a               GROUP BY P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST, \u000d\u000a        CODE \u000d\u000aWHERE BGD_COST.BUDGET_CODE = CODE.ID\u000d\u000a  AND BGD_COST.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_20','2013-09-03 02:08:25.902000',4,'DOCUMENT','true ','<dynamic parameter=":IS_ROOT" operator="==" value="Y">\u000d\u000a  SELECT CODE.ID BUDGET_CODE, CODE.NAME BUDGET_NAME, REMAIN.PROJECT_BUDGET_REMAIN BUDGET_REMAIN\u000d\u000a    FROM (\u000d\u000a          SELECT PRJ.BUDGET_AMOUNT - SUM(IF(BDG.AMOUNT IS NULL, 0, BDG.AMOUNT)) AS PROJECT_BUDGET_REMAIN\u000d\u000a            FROM PROJECT PRJ \u000d\u000a                 LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL \u000d\u000a                 JOIN BUDGET BDG\u000d\u000a                 ON SCHDL.ID = BDG.PROJECT_SCHEDULE_ID\u000d\u000a                 ON PRJ.ID = SCHDL.PROJECT_ID\u000d\u000a           WHERE SCHDL.ID = SCHDL.PARENT_ID\u000d\u000a             AND PRJ.USE_YN = ''Y''\u000d\u000a             AND PRJ.ID = :G_PROJECT_ID\u000d\u000a        GROUP BY PRJ.ID\u000d\u000a         ) REMAIN, CODE\u000d\u000aWHERE CODE.CODE_GROUP_ID = ''BG001''\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":IS_ROOT" operator="!=" value="Y">\u000d\u000a SELECT BGD_COST.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        BGD_COST.BUDGET_REMAIN BUDGET_REMAIN\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL,\u000d\u000a        (\u000d\u000a               SELECT P.PROJECT_SCHEDULE_ID, P.AMOUNT, P.SUMMARY, P.MDF_DTTM, P.BUDGET_CODE,\u000d\u000a                      P.AMOUNT - SUM(IF(C.AMOUNT IS NULL, 0, C.AMOUNT)) - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)) BUDGET_REMAIN\u000d\u000a                 FROM BUDGET P LEFT OUTER JOIN COST\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = COST.BUDGET_CODE\u000d\u000a                      LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a                      LEFT OUTER JOIN BUDGET C\u000d\u000a                      ON SCHDL.ID = C.PROJECT_SCHEDULE_ID \u000d\u000a                      AND P.BUDGET_CODE = C.BUDGET_CODE \u000d\u000a                      AND SCHDL.PARENT_ID != C.PROJECT_SCHEDULE_ID\u000d\u000a                      AND C.PROJECT_SCHEDULE_ID != :PROJECT_SCHEDULE_ID\u000d\u000a               GROUP BY P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST, \u000d\u000a        CODE \u000d\u000aWHERE BGD_COST.BUDGET_CODE = CODE.ID\u000d\u000a  AND BGD_COST.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_20','2013-09-03 03:29:14.372000',4,'DOCUMENT','true ','<dynamic parameter=":IS_ROOT" operator="==" value="Y">\u000d\u000a  SELECT CODE.ID BUDGET_CODE, CODE.NAME BUDGET_NAME, REMAIN.PROJECT_BUDGET_REMAIN BUDGET_REMAIN\u000d\u000a    FROM (\u000d\u000a          SELECT PRJ.BUDGET_AMOUNT - SUM(IF(BDG.AMOUNT IS NULL, 0, BDG.AMOUNT)) AS PROJECT_BUDGET_REMAIN\u000d\u000a            FROM PROJECT PRJ \u000d\u000a                 LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL \u000d\u000a                 JOIN BUDGET BDG\u000d\u000a                 ON SCHDL.ID = BDG.PROJECT_SCHEDULE_ID\u000d\u000a                 ON PRJ.ID = SCHDL.PROJECT_ID\u000d\u000a           WHERE SCHDL.ID = SCHDL.PARENT_ID\u000d\u000a             AND PRJ.USE_YN = ''Y''\u000d\u000a             AND PRJ.ID = :G_PROJECT_ID\u000d\u000a        GROUP BY PRJ.ID\u000d\u000a         ) REMAIN, CODE\u000d\u000aWHERE CODE.CODE_GROUP_ID = ''BG001''\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":IS_ROOT" operator="!=" value="Y">\u000d\u000a SELECT BGD_COST.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        BGD_COST.BUDGET_REMAIN BUDGET_REMAIN\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL,\u000d\u000a        (\u000d\u000a               SELECT P.PROJECT_SCHEDULE_ID, P.AMOUNT, P.SUMMARY, P.MDF_DTTM, P.BUDGET_CODE,\u000d\u000a                      P.AMOUNT - SUM(IF(C.AMOUNT IS NULL, 0, C.AMOUNT)) - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)) BUDGET_REMAIN\u000d\u000a                 FROM BUDGET P LEFT OUTER JOIN COST\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = COST.BUDGET_CODE\u000d\u000a                      LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a                      LEFT OUTER JOIN BUDGET C\u000d\u000a                      ON SCHDL.ID = C.PROJECT_SCHEDULE_ID \u000d\u000a                      AND P.BUDGET_CODE = C.BUDGET_CODE \u000d\u000a                      AND SCHDL.PARENT_ID != C.PROJECT_SCHEDULE_ID\u000d\u000a               GROUP BY P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST, \u000d\u000a        CODE \u000d\u000aWHERE BGD_COST.BUDGET_CODE = CODE.ID\u000d\u000a  AND BGD_COST.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_21','2013-09-06 11:35:55.133000',4,'DOCUMENT','true ','SELECT COST.ID, \u000d\u000a       BDG.NAME BUDGET_NAME, \u000d\u000a       PMT.NAME PAYMENT_NAME, \u000d\u000a       COST.AMOUNT,\u000d\u000a       COST.EXECUTOR,\u000d\u000a       COST.USE_DTL,\u000d\u000a       MBR.NAME RECEIVER,\u000d\u000a       COST.PAYMENT_DATE\u000d\u000a  FROM COST, CODE BDG, CODE PMT, MEMBER MBR\u000d\u000a WHERE COST.BUDGET_CODE = BDG.ID\u000d\u000a   AND COST.PAYMENT_CODE = PMT.ID\u000d\u000a   AND COST.RECEIVER = MEMBER.ID\u000d\u000a   AND PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000aORDER BY COST.RGST_DTTM ASC\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_21','2013-09-06 11:37:08.709000',4,'DOCUMENT','true ','SELECT COST.ID, \u000d\u000a       BDG.NAME BUDGET_NAME, \u000d\u000a       PMT.NAME PAYMENT_NAME, \u000d\u000a       COST.AMOUNT,\u000d\u000a       COST.EXECUTOR,\u000d\u000a       COST.USE_DTL,\u000d\u000a       MBR.NAME RECEIVER,\u000d\u000a       COST.PAYMENT_DATE\u000d\u000a  FROM COST, CODE BDG, CODE PMT, MEMBER MBR\u000d\u000a WHERE COST.BUDGET_CODE = BDG.ID\u000d\u000a   AND COST.PAYMENT_CODE = PMT.ID\u000d\u000a   AND COST.RECEIVER = MBR.ID\u000d\u000a   AND PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000aORDER BY COST.RGST_DTTM ASC\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_21','2013-09-06 11:38:47.956000',4,'DOCUMENT','true ','SELECT COST.ID, \u000d\u000a       BDG.NAME BUDGET_NAME, \u000d\u000a       PMT.NAME PAYMENT_NAME, \u000d\u000a       COST.AMOUNT,\u000d\u000a       MBR.NAME EXECUTOR,\u000d\u000a       COST.USE_DTL,\u000d\u000a       COST.RECEIVER,\u000d\u000a       COST.PAYMENT_DATE\u000d\u000a  FROM COST, CODE BDG, CODE PMT, MEMBER MBR\u000d\u000a WHERE COST.BUDGET_CODE = BDG.ID\u000d\u000a   AND COST.PAYMENT_CODE = PMT.ID\u000d\u000a   AND COST.EXECUTOR = MBR.ID\u000d\u000a   AND PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000aORDER BY COST.RGST_DTTM ASC\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_21','2013-09-06 11:47:31.501000',4,'DOCUMENT','true ','SELECT COST.ID, \u000d\u000a       BDG.NAME BUDGET_NAME, \u000d\u000a       PMT.NAME PAYMENT_NAME, \u000d\u000a       COST.AMOUNT,\u000d\u000a       MBR.NAME EXECUTOR,\u000d\u000a       COST.USE_DTL,\u000d\u000a       COST.RECEIVER,\u000d\u000a       COST.PAYMENT_DATE\u000d\u000a  FROM COST, CODE BDG, CODE PMT, MEMBER MBR\u000d\u000a WHERE COST.BUDGET_CODE = BDG.ID\u000d\u000a   AND COST.PAYMENT_CODE = PMT.ID\u000d\u000a   AND COST.EXECUTOR = MBR.ID\u000d\u000a   AND PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000aORDER BY COST.RGST_DTTM DESC\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_21','2013-09-06 13:33:07.228000',4,'DOCUMENT','true ','SELECT COST.ID, \u000d\u000a       BDG.NAME BUDGET_NAME, \u000d\u000a       PMT.NAME PAYMENT_NAME, \u000d\u000a       COST.AMOUNT,\u000d\u000a       MBR.NAME EXECUTOR,\u000d\u000a       COST.USE_DTL,\u000d\u000a       COST.RECEIVER,\u000d\u000a       COST.PAYMENT_DATE\u000d\u000a  FROM COST, CODE BDG, CODE PMT, MEMBER MBR\u000d\u000a WHERE COST.BUDGET_CODE = BDG.ID\u000d\u000a   AND COST.PAYMENT_CODE = PMT.ID\u000d\u000a   AND COST.EXECUTOR = MBR.ID\u000d\u000a   AND PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000aORDER BY COST.PAYMENT_DATE DESC\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_21','2013-09-06 13:33:22.873000',4,'DOCUMENT','true ','SELECT COST.ID, \u000d\u000a       BDG.NAME BUDGET_NAME, \u000d\u000a       PMT.NAME PAYMENT_NAME, \u000d\u000a       COST.AMOUNT,\u000d\u000a       MBR.NAME EXECUTOR,\u000d\u000a       COST.USE_DTL,\u000d\u000a       COST.RECEIVER,\u000d\u000a       COST.PAYMENT_DATE\u000d\u000a  FROM COST, CODE BDG, CODE PMT, MEMBER MBR\u000d\u000a WHERE COST.BUDGET_CODE = BDG.ID\u000d\u000a   AND COST.PAYMENT_CODE = PMT.ID\u000d\u000a   AND COST.EXECUTOR = MBR.ID\u000d\u000a   AND PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000aORDER BY COST.PAYMENT_DATE ASC\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_21','2013-09-06 13:33:36.144000',4,'DOCUMENT','true ','SELECT COST.ID, \u000d\u000a       BDG.NAME BUDGET_NAME, \u000d\u000a       PMT.NAME PAYMENT_NAME, \u000d\u000a       COST.AMOUNT,\u000d\u000a       MBR.NAME EXECUTOR,\u000d\u000a       COST.USE_DTL,\u000d\u000a       COST.RECEIVER,\u000d\u000a       COST.PAYMENT_DATE\u000d\u000a  FROM COST, CODE BDG, CODE PMT, MEMBER MBR\u000d\u000a WHERE COST.BUDGET_CODE = BDG.ID\u000d\u000a   AND COST.PAYMENT_CODE = PMT.ID\u000d\u000a   AND COST.EXECUTOR = MBR.ID\u000d\u000a   AND PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000aORDER BY COST.PAYMENT_DATE DESC\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_21','2013-09-06 18:00:50.714000',4,'DOCUMENT','true ','SELECT COST.ID, \u000d\u000a       BDG.NAME BUDGET_NAME, \u000d\u000a       PMT.NAME PAYMENT_NAME, \u000d\u000a       CONCAT(FORMAT(COST.AMOUNT,0), '' \uc6d0'') AMOUNT,\u000d\u000a       MBR.NAME EXECUTOR,\u000d\u000a       COST.USE_DTL,\u000d\u000a       COST.RECEIVER,\u000d\u000a       COST.PAYMENT_DATE\u000d\u000a  FROM COST, CODE BDG, CODE PMT, MEMBER MBR\u000d\u000a WHERE COST.BUDGET_CODE = BDG.ID\u000d\u000a   AND COST.PAYMENT_CODE = PMT.ID\u000d\u000a   AND COST.EXECUTOR = MBR.ID\u000d\u000a   AND PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000aORDER BY COST.PAYMENT_DATE DESC\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_22','2013-09-05 15:41:11.082000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_22','2013-09-05 15:46:45.134000',4,'DOCUMENT','false','SELECT ID PAYMENT_CODE, NAME PAYMENT_NAME \u000d\u000a  FROM CODE\u000d\u000a WHERE CODE_GROUP_ID = ''BG002''')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_23','2013-09-06 11:39:59.013000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_23','2013-09-06 11:40:04.480000',4,'DOCUMENT','true ','<dynamic parameter=":IS_ROOT" operator="==" value="Y">\u000d\u000a  SELECT CODE.ID BUDGET_CODE, CODE.NAME BUDGET_NAME, REMAIN.PROJECT_BUDGET_REMAIN BUDGET_REMAIN\u000d\u000a    FROM (\u000d\u000a          SELECT PRJ.BUDGET_AMOUNT - SUM(IF(BDG.AMOUNT IS NULL, 0, BDG.AMOUNT)) AS PROJECT_BUDGET_REMAIN\u000d\u000a            FROM PROJECT PRJ \u000d\u000a                 LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL \u000d\u000a                 JOIN BUDGET BDG\u000d\u000a                 ON SCHDL.ID = BDG.PROJECT_SCHEDULE_ID\u000d\u000a                 ON PRJ.ID = SCHDL.PROJECT_ID\u000d\u000a           WHERE SCHDL.ID = SCHDL.PARENT_ID\u000d\u000a             AND PRJ.USE_YN = ''Y''\u000d\u000a             AND PRJ.ID = :G_PROJECT_ID\u000d\u000a        GROUP BY PRJ.ID\u000d\u000a         ) REMAIN, CODE\u000d\u000aWHERE CODE.CODE_GROUP_ID = ''BG001''\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":IS_ROOT" operator="!=" value="Y">\u000d\u000a SELECT BGD_COST.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        BGD_COST.BUDGET_REMAIN BUDGET_REMAIN\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL,\u000d\u000a        (\u000d\u000a               SELECT P.PROJECT_SCHEDULE_ID, P.AMOUNT, P.SUMMARY, P.MDF_DTTM, P.BUDGET_CODE,\u000d\u000a                      P.AMOUNT - SUM(IF(C.AMOUNT IS NULL, 0, C.AMOUNT)) - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)) BUDGET_REMAIN\u000d\u000a                 FROM BUDGET P LEFT OUTER JOIN COST\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = COST.BUDGET_CODE\u000d\u000a                      LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a                      LEFT OUTER JOIN BUDGET C\u000d\u000a                      ON SCHDL.ID = C.PROJECT_SCHEDULE_ID \u000d\u000a                      AND P.BUDGET_CODE = C.BUDGET_CODE \u000d\u000a                      AND SCHDL.PARENT_ID != C.PROJECT_SCHEDULE_ID\u000d\u000a               GROUP BY P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST, \u000d\u000a        CODE \u000d\u000aWHERE BGD_COST.BUDGET_CODE = CODE.ID\u000d\u000a  AND BGD_COST.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_23','2013-09-06 11:42:42.061000',4,'DOCUMENT','true ',' SELECT BGD_COST.BUDGET_CODE BUDGET_CODE,\u000d\u000a        CODE.NAME BUDGET_NAME,\u000d\u000a        BGD_COST.BUDGET_REMAIN BUDGET_REMAIN\u000d\u000a   FROM PROJECT_SCHEDULE SCHDL,\u000d\u000a        (\u000d\u000a               SELECT P.PROJECT_SCHEDULE_ID, P.AMOUNT, P.SUMMARY, P.MDF_DTTM, P.BUDGET_CODE,\u000d\u000a                      P.AMOUNT - SUM(IF(C.AMOUNT IS NULL, 0, C.AMOUNT)) - SUM(IF(COST.AMOUNT IS NULL, 0, COST.AMOUNT)) BUDGET_REMAIN\u000d\u000a                 FROM BUDGET P LEFT OUTER JOIN COST\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = COST.PROJECT_SCHEDULE_ID AND P.BUDGET_CODE = COST.BUDGET_CODE\u000d\u000a                      LEFT OUTER JOIN PROJECT_SCHEDULE SCHDL\u000d\u000a                      ON P.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a                      LEFT OUTER JOIN BUDGET C\u000d\u000a                      ON SCHDL.ID = C.PROJECT_SCHEDULE_ID \u000d\u000a                      AND P.BUDGET_CODE = C.BUDGET_CODE \u000d\u000a                      AND SCHDL.PARENT_ID != C.PROJECT_SCHEDULE_ID\u000d\u000a               GROUP BY P.BUDGET_CODE, P.PROJECT_SCHEDULE_ID\u000d\u000a        ) BGD_COST, \u000d\u000a        CODE \u000d\u000aWHERE BGD_COST.BUDGET_CODE = CODE.ID\u000d\u000a  AND BGD_COST.PROJECT_SCHEDULE_ID = SCHDL.PARENT_ID\u000d\u000a  AND SCHDL.ID = :PROJECT_SCHEDULE_ID\u000d\u000a  AND SCHDL.PROJECT_ID = :G_PROJECT_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_24','2013-09-06 16:40:49.478000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_24','2013-09-06 16:54:57.475000',4,'DOCUMENT','true ','SELECT COST.BUDGET_CODE BUDGET_CODE, \u000d\u000a       COST.PAYMENT_CODE PAYMENT_CODE, \u000d\u000a       COST.SUMMARY SUMMARY, \u000d\u000a       RGSTER.NAME RGST_MEMBER,\u000d\u000a       COST.RGST_DTTM RGST_DTTM,\u000d\u000a       MDFIER.NAME MDF_MEMBER,\u000d\u000a       COST.MDF_DTTM MDF_DTTM,\u000d\u000a       BDG.NAME BUDGET_NAME,\u000d\u000a       PMT.NAME PAYMENT_TYPE,\u000d\u000a       COST.AMOUNT AMOUNT,\u000d\u000a       EXCTOR.NAME EXECUTOR,\u000d\u000a       COST.EXECUTOR EXECUTOR_ID,\u000d\u000a       COST.USE_DTL USE_DTL,\u000d\u000a       COST.RECEIVER RECEIVER,\u000d\u000a       COST.PAYMENT_DATE PAYMENT_DATE,\u000d\u000a       COST.FILE_NAME FILE_NAME,\u000d\u000a       COST.ATTATCH_FILE ATTATCH_FILE\u000d\u000a  FROM COST, MEMBER RGSTER, MEMBER MDFIER, MEMBER EXCTOR, CODE BDG, CODE PMT\u000d\u000a WHERE COST.RGST_MEMBER_ID = RGSTER.ID\u000d\u000a   AND COST.MDF_MEMBER_ID = MDFIER.ID\u000d\u000a   AND COST.EXECUTOR = EXCTOR.ID\u000d\u000a   AND COST.BUDGET_CODE = BDG.ID\u000d\u000a   AND COST.PAYMENT_CODE = PMT.ID\u000d\u000a   AND COST.ID = :COST_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_24','2013-09-06 17:58:44.557000',4,'DOCUMENT','true ','SELECT COST.BUDGET_CODE BUDGET_CODE, \u000d\u000a       COST.PAYMENT_CODE PAYMENT_CODE, \u000d\u000a       COST.SUMMARY SUMMARY, \u000d\u000a       RGSTER.NAME RGST_MEMBER,\u000d\u000a       COST.RGST_DTTM RGST_DTTM,\u000d\u000a       MDFIER.NAME MDF_MEMBER,\u000d\u000a       COST.MDF_DTTM MDF_DTTM,\u000d\u000a       BDG.NAME BUDGET_NAME,\u000d\u000a       PMT.NAME PAYMENT_TYPE,\u000d\u000a       FORMAT(COST.AMOUNT,0) AMOUNT,\u000d\u000a       EXCTOR.NAME EXECUTOR,\u000d\u000a       COST.EXECUTOR EXECUTOR_ID,\u000d\u000a       COST.USE_DTL USE_DTL,\u000d\u000a       COST.RECEIVER RECEIVER,\u000d\u000a       COST.PAYMENT_DATE PAYMENT_DATE,\u000d\u000a       COST.FILE_NAME FILE_NAME,\u000d\u000a       COST.ATTATCH_FILE ATTATCH_FILE\u000d\u000a  FROM COST, MEMBER RGSTER, MEMBER MDFIER, MEMBER EXCTOR, CODE BDG, CODE PMT\u000d\u000a WHERE COST.RGST_MEMBER_ID = RGSTER.ID\u000d\u000a   AND COST.MDF_MEMBER_ID = MDFIER.ID\u000d\u000a   AND COST.EXECUTOR = EXCTOR.ID\u000d\u000a   AND COST.BUDGET_CODE = BDG.ID\u000d\u000a   AND COST.PAYMENT_CODE = PMT.ID\u000d\u000a   AND COST.ID = :COST_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_24','2013-09-06 17:59:25.297000',4,'DOCUMENT','true ','SELECT COST.BUDGET_CODE BUDGET_CODE, \u000d\u000a       COST.PAYMENT_CODE PAYMENT_CODE, \u000d\u000a       COST.SUMMARY SUMMARY, \u000d\u000a       RGSTER.NAME RGST_MEMBER,\u000d\u000a       COST.RGST_DTTM RGST_DTTM,\u000d\u000a       MDFIER.NAME MDF_MEMBER,\u000d\u000a       COST.MDF_DTTM MDF_DTTM,\u000d\u000a       BDG.NAME BUDGET_NAME,\u000d\u000a       PMT.NAME PAYMENT_TYPE,\u000d\u000a       CONCAST(FORMAT(COST.AMOUNT,0), '' \uc6d0'') AMOUNT,\u000d\u000a       EXCTOR.NAME EXECUTOR,\u000d\u000a       COST.EXECUTOR EXECUTOR_ID,\u000d\u000a       COST.USE_DTL USE_DTL,\u000d\u000a       COST.RECEIVER RECEIVER,\u000d\u000a       COST.PAYMENT_DATE PAYMENT_DATE,\u000d\u000a       COST.FILE_NAME FILE_NAME,\u000d\u000a       COST.ATTATCH_FILE ATTATCH_FILE\u000d\u000a  FROM COST, MEMBER RGSTER, MEMBER MDFIER, MEMBER EXCTOR, CODE BDG, CODE PMT\u000d\u000a WHERE COST.RGST_MEMBER_ID = RGSTER.ID\u000d\u000a   AND COST.MDF_MEMBER_ID = MDFIER.ID\u000d\u000a   AND COST.EXECUTOR = EXCTOR.ID\u000d\u000a   AND COST.BUDGET_CODE = BDG.ID\u000d\u000a   AND COST.PAYMENT_CODE = PMT.ID\u000d\u000a   AND COST.ID = :COST_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_24','2013-09-06 18:00:05.223000',4,'DOCUMENT','true ','SELECT COST.BUDGET_CODE BUDGET_CODE, \u000d\u000a       COST.PAYMENT_CODE PAYMENT_CODE, \u000d\u000a       COST.SUMMARY SUMMARY, \u000d\u000a       RGSTER.NAME RGST_MEMBER,\u000d\u000a       COST.RGST_DTTM RGST_DTTM,\u000d\u000a       MDFIER.NAME MDF_MEMBER,\u000d\u000a       COST.MDF_DTTM MDF_DTTM,\u000d\u000a       BDG.NAME BUDGET_NAME,\u000d\u000a       PMT.NAME PAYMENT_TYPE,\u000d\u000a       CONCAT(FORMAT(COST.AMOUNT,0), '' \uc6d0'') AMOUNT,\u000d\u000a       EXCTOR.NAME EXECUTOR,\u000d\u000a       COST.EXECUTOR EXECUTOR_ID,\u000d\u000a       COST.USE_DTL USE_DTL,\u000d\u000a       COST.RECEIVER RECEIVER,\u000d\u000a       COST.PAYMENT_DATE PAYMENT_DATE,\u000d\u000a       COST.FILE_NAME FILE_NAME,\u000d\u000a       COST.ATTATCH_FILE ATTATCH_FILE\u000d\u000a  FROM COST, MEMBER RGSTER, MEMBER MDFIER, MEMBER EXCTOR, CODE BDG, CODE PMT\u000d\u000a WHERE COST.RGST_MEMBER_ID = RGSTER.ID\u000d\u000a   AND COST.MDF_MEMBER_ID = MDFIER.ID\u000d\u000a   AND COST.EXECUTOR = EXCTOR.ID\u000d\u000a   AND COST.BUDGET_CODE = BDG.ID\u000d\u000a   AND COST.PAYMENT_CODE = PMT.ID\u000d\u000a   AND COST.ID = :COST_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_25','2013-09-16 12:18:01.043000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_25','2013-09-16 12:18:04.072000',4,'DOCUMENT','false','SELECT SEQ(''PROJECT_SCHEDULE'') AS PROJECT_SCHEDULE_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_25','2013-09-16 12:18:35.780000',4,'DOCUMENT','false','SELECT SEQ(''CONFERENCE'') AS ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_25','2013-09-16 12:18:50.217000',4,'DOCUMENT','false','SELECT SEQ(''CONFERENCE'') AS CONFERENCE_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_26','2013-10-04 11:31:07.845000',4,'DOCUMENT','true ','SELECT CNFS.ID, \u000d\u000a       CNFS.TITLE, \u000d\u000a       DATE_FORMAT(CNFS.CONFERENCE_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') CONFERENCE_DATE, \u000d\u000a       CNFS.PARTICIPANTS, \u000d\u000a       CNFS.PLACE, \u000d\u000a       DATE_FORMAT(CNFS.FROM_TIME, ''%h:%i %p'') FROM_TIME,\u000d\u000a       DATE_FORMAT(CNFS.TO_TIME, ''%h:%i %p'') TO_TIME,\u000d\u000a       CNFS.RGST_MEMBER_ID MEMBER_ID,\u000d\u000a       MBR.NAME MEMBER_NAME,\u000d\u000a       ORG.NAME MEMBER_ORGANIZATION\u000d\u000a  FROM CONFERENCE CNFS ,MEMBER MBR, PROJECT_MEMBER PMBR, ORGANIZATION ORG\u000d\u000a WHERE CNFS.RGST_MEMBER_ID = PMBR.MEMBER_ID\u000d\u000a   AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a   AND PMBR.ORGANIZATION_ID = ORG.ID\u000d\u000a   AND PMBR.PROJECT_ID = :G_PROJECT_ID\u000d\u000a<dynamic parameter=":S_TITLE" operator="!=" value="null">\u000d\u000a   AND CNFS.TITLE LIKE CONCAT(CONCAT(''%'',:S_TITLE),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_CONFERENCE_DATE" operator="!=" value="null">\u000d\u000a   AND CNFS.CONFERENCE_DATE = STR_TO_DATE(:S_CONFERENCE_DATE, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_MEMBER_ORGANIZATION" operator="!=" value="null">\u000d\u000a   AND ORG.NAME LIKE CONCAT(CONCAT(''%'',:S_MEMBER_ORGANIZATION),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_MEMBER_NAME" operator="!=" value="null">\u000d\u000a   AND MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_MEMBER_NAME),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         CNFS.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         CNFS.TITLE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         CNFS.TITLE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         CNFS.CONFERENCE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         CNFS.FROM_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         CNFS.TO_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="5">\u000d\u000a         ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="6">\u000d\u000a         MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_27','2013-09-16 17:40:43.451000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_27','2013-09-16 18:08:51.482000',4,'DOCUMENT','false','SELECT CNFS.ID, \u000d\u000a       CNFS.TITLE, \u000d\u000a       DATE_FORMAT(CNFS.CONFERENCE_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') CONFERENCE_DATE, \u000d\u000a       CNFS.PARTICIPANTS, \u000d\u000a       CNFS.PLACE, \u000d\u000a       DATE_FORMAT(CNFS.FROM_TIME, ''%h:%i %p'') FROM_TIME,\u000d\u000a       DATE_FORMAT(CNFS.TO_TIME, ''%h:%i %p'') TO_TIME,\u000d\u000a       CNFS.RGST_MEMBER_ID MEMBER_ID,\u000d\u000a       MBR.NAME MEMBER_NAME,\u000d\u000a       ORG.NAME MEMBER_ORGANIZATION\u000d\u000a  FROM CONFERENCE CNFS ,MEMBER MBR, PROJECT_MEMBER PMBR, ORGANIZATION ORG\u000d\u000a WHERE CNFS.RGST_MEMBER_ID = PMBR.MEMBER_ID\u000d\u000a   AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a   AND PMBR.ORGANIZATION_ID = ORG.ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_27','2013-09-16 18:09:06.435000',4,'DOCUMENT','true ','SELECT CNFS.ID, \u000d\u000a       CNFS.TITLE, \u000d\u000a       DATE_FORMAT(CNFS.CONFERENCE_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') CONFERENCE_DATE, \u000d\u000a       CNFS.PARTICIPANTS, \u000d\u000a       CNFS.PLACE, \u000d\u000a       DATE_FORMAT(CNFS.FROM_TIME, ''%h:%i %p'') FROM_TIME,\u000d\u000a       DATE_FORMAT(CNFS.TO_TIME, ''%h:%i %p'') TO_TIME,\u000d\u000a       CNFS.RGST_MEMBER_ID MEMBER_ID,\u000d\u000a       MBR.NAME MEMBER_NAME,\u000d\u000a       ORG.NAME MEMBER_ORGANIZATION\u000d\u000a  FROM CONFERENCE CNFS ,MEMBER MBR, PROJECT_MEMBER PMBR, ORGANIZATION ORG\u000d\u000a WHERE CNFS.RGST_MEMBER_ID = PMBR.MEMBER_ID\u000d\u000a   AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a   AND PMBR.ORGANIZATION_ID = ORG.ID\u000d\u000a   AND CNFS.ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_27','2013-09-16 19:45:26.439000',4,'DOCUMENT','true ','SELECT CNFS.ID, \u000d\u000a       CNFS.TITLE, \u000d\u000a       DATE_FORMAT(CNFS.CONFERENCE_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') CONFERENCE_DATE, \u000d\u000a       CNFS.PARTICIPANTS, \u000d\u000a       CNFS.PLACE, \u000d\u000a       DATE_FORMAT(CNFS.FROM_TIME, ''%h:%i %p'') FROM_TIME,\u000d\u000a       DATE_FORMAT(CNFS.TO_TIME, ''%h:%i %p'') TO_TIME,\u000d\u000a       CNFS.CONTENTS CONTENTS\u000d\u000a       CNFS.RGST_MEMBER_ID MEMBER_ID,\u000d\u000a       MBR.NAME MEMBER_NAME,\u000d\u000a       ORG.NAME MEMBER_ORGANIZATION\u000d\u000a  FROM CONFERENCE CNFS ,MEMBER MBR, PROJECT_MEMBER PMBR, ORGANIZATION ORG\u000d\u000a WHERE CNFS.RGST_MEMBER_ID = PMBR.MEMBER_ID\u000d\u000a   AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a   AND PMBR.ORGANIZATION_ID = ORG.ID\u000d\u000a   AND CNFS.ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_27','2013-09-16 19:46:14.965000',4,'DOCUMENT','true ','SELECT CNFS.ID, \u000d\u000a       CNFS.TITLE, \u000d\u000a       DATE_FORMAT(CNFS.CONFERENCE_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') CONFERENCE_DATE, \u000d\u000a       CNFS.PARTICIPANTS, \u000d\u000a       CNFS.PLACE, \u000d\u000a       DATE_FORMAT(CNFS.FROM_TIME, ''%h:%i %p'') FROM_TIME,\u000d\u000a       DATE_FORMAT(CNFS.TO_TIME, ''%h:%i %p'') TO_TIME,\u000d\u000a       CNFS.CONTENTS CONTENTS,\u000d\u000a       CNFS.RGST_MEMBER_ID MEMBER_ID,\u000d\u000a       MBR.NAME MEMBER_NAME,\u000d\u000a       ORG.NAME MEMBER_ORGANIZATION\u000d\u000a  FROM CONFERENCE CNFS ,MEMBER MBR, PROJECT_MEMBER PMBR, ORGANIZATION ORG\u000d\u000a WHERE CNFS.RGST_MEMBER_ID = PMBR.MEMBER_ID\u000d\u000a   AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a   AND PMBR.ORGANIZATION_ID = ORG.ID\u000d\u000a   AND CNFS.ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_27','2013-09-16 20:15:50.487000',4,'DOCUMENT','true ','SELECT CNFS.ID, \u000d\u000a       CNFS.TITLE, \u000d\u000a       DATE_FORMAT(CNFS.CONFERENCE_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') CONFERENCE_DATE, \u000d\u000a       CNFS.PARTICIPANTS, \u000d\u000a       CNFS.PLACE, \u000d\u000a       DATE_FORMAT(CNFS.FROM_TIME, ''%h:%i %p'') FROM_TIME,\u000d\u000a       DATE_FORMAT(CNFS.TO_TIME, ''%h:%i %p'') TO_TIME,\u000d\u000a       CNFS.RGST_DTTM RGST_DTTM,\u000d\u000a       CNFS.CONTENTS CONTENTS,\u000d\u000a       CNFS.RGST_MEMBER_ID MEMBER_ID,\u000d\u000a       MBR.NAME MEMBER_NAME,\u000d\u000a       ORG.NAME MEMBER_ORGANIZATION\u000d\u000a  FROM CONFERENCE CNFS ,MEMBER MBR, PROJECT_MEMBER PMBR, ORGANIZATION ORG\u000d\u000a WHERE CNFS.RGST_MEMBER_ID = PMBR.MEMBER_ID\u000d\u000a   AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a   AND PMBR.ORGANIZATION_ID = ORG.ID\u000d\u000a   AND CNFS.ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_27','2013-09-16 20:16:22.701000',4,'DOCUMENT','true ','SELECT CNFS.ID, \u000d\u000a       CNFS.TITLE, \u000d\u000a       DATE_FORMAT(CNFS.CONFERENCE_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') CONFERENCE_DATE, \u000d\u000a       CNFS.PARTICIPANTS, \u000d\u000a       CNFS.PLACE, \u000d\u000a       DATE_FORMAT(CNFS.FROM_TIME, ''%h:%i %p'') FROM_TIME,\u000d\u000a       DATE_FORMAT(CNFS.TO_TIME, ''%h:%i %p'') TO_TIME,\u000d\u000a       DATE_FORMAT(CNFS.RGST_DTTM RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       CNFS.CONTENTS CONTENTS,\u000d\u000a       CNFS.RGST_MEMBER_ID MEMBER_ID,\u000d\u000a       MBR.NAME MEMBER_NAME,\u000d\u000a       ORG.NAME MEMBER_ORGANIZATION\u000d\u000a  FROM CONFERENCE CNFS ,MEMBER MBR, PROJECT_MEMBER PMBR, ORGANIZATION ORG\u000d\u000a WHERE CNFS.RGST_MEMBER_ID = PMBR.MEMBER_ID\u000d\u000a   AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a   AND PMBR.ORGANIZATION_ID = ORG.ID\u000d\u000a   AND CNFS.ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_27','2013-09-16 20:16:29.112000',4,'DOCUMENT','true ','SELECT CNFS.ID, \u000d\u000a       CNFS.TITLE, \u000d\u000a       DATE_FORMAT(CNFS.CONFERENCE_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') CONFERENCE_DATE, \u000d\u000a       CNFS.PARTICIPANTS, \u000d\u000a       CNFS.PLACE, \u000d\u000a       DATE_FORMAT(CNFS.FROM_TIME, ''%h:%i %p'') FROM_TIME,\u000d\u000a       DATE_FORMAT(CNFS.TO_TIME, ''%h:%i %p'') TO_TIME,\u000d\u000a       DATE_FORMAT(CNFS.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       CNFS.CONTENTS CONTENTS,\u000d\u000a       CNFS.RGST_MEMBER_ID MEMBER_ID,\u000d\u000a       MBR.NAME MEMBER_NAME,\u000d\u000a       ORG.NAME MEMBER_ORGANIZATION\u000d\u000a  FROM CONFERENCE CNFS ,MEMBER MBR, PROJECT_MEMBER PMBR, ORGANIZATION ORG\u000d\u000a WHERE CNFS.RGST_MEMBER_ID = PMBR.MEMBER_ID\u000d\u000a   AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a   AND PMBR.ORGANIZATION_ID = ORG.ID\u000d\u000a   AND CNFS.ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_28','2013-09-16 18:57:07.719000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_28','2013-09-16 18:59:20.029000',4,'DOCUMENT','true ','SELECT FILE_NAME, \u000d\u000a       SEQ, \u000d\u000a       IF(SIZE >= 1024*1024, CONCAT(FLOOR(SIZE/(1024*1024)),''MB''), IF(SIZE>=1024, CONCAT(FLOOR(SIZE/1024), ''KB''), CONCAT(SIZE, ''B''))) AS SIZE\u000d\u000a  FROM CONFERENCT_ATTATCHMENT\u000d\u000a WHERE BOARD_ID = :BOARD_ID\u000d\u000a ORDER BY SEQ ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_28','2013-09-16 19:00:48.658000',4,'DOCUMENT','true ','SELECT FILE_NAME, \u000d\u000a       SEQ, \u000d\u000a       IF(SIZE >= 1024*1024, CONCAT(FLOOR(SIZE/(1024*1024)),''MB''), IF(SIZE>=1024, CONCAT(FLOOR(SIZE/1024), ''KB''), CONCAT(SIZE, ''B''))) AS SIZE\u000d\u000a  FROM CONFERENCT_ATTATCHMENT\u000d\u000a WHERE CONFERENCE_ID = :ID\u000d\u000a ORDER BY SEQ ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_28','2013-09-16 19:01:38.084000',4,'DOCUMENT','true ','SELECT FILE_NAME, \u000d\u000a       SEQ, \u000d\u000a       IF(SIZE >= 1024*1024, CONCAT(FLOOR(SIZE/(1024*1024)),''MB''), IF(SIZE>=1024, CONCAT(FLOOR(SIZE/1024), ''KB''), CONCAT(SIZE, ''B''))) AS SIZE\u000d\u000a  FROM CONFERENCE_ATTATCHMENT\u000d\u000a WHERE CONFERENCE_ID = :ID\u000d\u000a ORDER BY SEQ ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_29','2013-09-16 20:28:45.001000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_29','2013-09-16 20:29:35.386000',4,'DOCUMENT','true ','SELECT CONTENT, FILE_NAME FROM CONFERENCE_ATTATCHMENT\u000d\u000aWHERE CONFERENCE_ID = :CONFERENCE_ID\u000d\u000a  AND SEQ = :SEQ')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_30','2013-10-04 13:04:27.931000',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1) WEEK_COUNT, \u000d\u000a       PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1 MONTH_COUNT, \u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="==" value="RPTYPRT002">\u000d\u000a       IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a       CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a       CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       PERIOD,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="==" value="RPTYPRT003">\u000d\u000a       IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a       CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), LAST_DAY(RPT.RGST_DTTM)), \u000d\u000a       CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), LAST_DAY(PJT.FROM_DATE)))\u000d\u000a       PERIOD, \u000d\u000a</dynamic>\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID\u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND PJT.ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND PJT.ID = RPT_PMBR.PROJECT_ID\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_MEMBER" operator="!=" value="null">\u000d\u000a   AND RPT_MBR.NAME CONCAT(CONCAT(''%'',:S_RGST_MEMBER),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         RPT.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         RPT_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         RPT_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_30','2013-10-11 12:07:25.962000',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1) WEEK_COUNT, \u000d\u000a       PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1 MONTH_COUNT, \u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="==" value="RPTYPRT001">\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="==" value="RPTYPRT002">\u000d\u000a       IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a       CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a       CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       PERIOD,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="==" value="RPTYPRT003">\u000d\u000a       IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a       CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), LAST_DAY(RPT.RGST_DTTM)), \u000d\u000a       CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), LAST_DAY(PJT.FROM_DATE)))\u000d\u000a       PERIOD, \u000d\u000a</dynamic>\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID\u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND PJT.ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND PJT.ID = RPT_PMBR.PROJECT_ID\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_MEMBER" operator="!=" value="null">\u000d\u000a   AND RPT_MBR.NAME CONCAT(CONCAT(''%'',:S_RGST_MEMBER),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         RPT.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         RPT_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         RPT_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_30','2013-10-11 12:08:33.138000',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1) WEEK_COUNT, \u000d\u000a       PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1 MONTH_COUNT, \u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="==" value="RPTYPRT002">\u000d\u000a       IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a       CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a       CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       PERIOD,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="==" value="RPTYPRT003">\u000d\u000a       IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a       CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), LAST_DAY(RPT.RGST_DTTM)), \u000d\u000a       CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), LAST_DAY(PJT.FROM_DATE)))\u000d\u000a       PERIOD, \u000d\u000a</dynamic>\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID\u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND PJT.ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND PJT.ID = RPT_PMBR.PROJECT_ID\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_MEMBER" operator="!=" value="null">\u000d\u000a   AND RPT_MBR.NAME CONCAT(CONCAT(''%'',:S_RGST_MEMBER),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         RPT.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         RPT_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         RPT_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_30','2013-10-11 12:15:19.926000',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1) WEEK_COUNT, \u000d\u000a       PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1 MONTH_COUNT, \u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            ''123''\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), LAST_DAY(RPT.RGST_DTTM)), \u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), LAST_DAY(PJT.FROM_DATE)))\u000d\u000a       END AS PERIOD,\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID\u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND PJT.ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND PJT.ID = RPT_PMBR.PROJECT_ID\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_MEMBER" operator="!=" value="null">\u000d\u000a   AND RPT_MBR.NAME CONCAT(CONCAT(''%'',:S_RGST_MEMBER),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         RPT.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         RPT_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         RPT_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_30','2013-10-11 12:18:15.160000',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1) WEEK_COUNT, \u000d\u000a       PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1 MONTH_COUNT, \u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''))\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), LAST_DAY(RPT.RGST_DTTM)), \u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), LAST_DAY(PJT.FROM_DATE)))\u000d\u000a       END AS PERIOD,\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID\u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND PJT.ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND PJT.ID = RPT_PMBR.PROJECT_ID\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_MEMBER" operator="!=" value="null">\u000d\u000a   AND RPT_MBR.NAME CONCAT(CONCAT(''%'',:S_RGST_MEMBER),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         RPT.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         RPT_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         RPT_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_30','2013-10-11 12:21:39.237000',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1) WEEK_COUNT, \u000d\u000a       PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1 MONTH_COUNT, \u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''))\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), LAST_DAY(RPT.RGST_DTTM)), \u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), LAST_DAY(PJT.FROM_DATE)))\u000d\u000a       END AS PERIOD,\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID\u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND PJT.ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND PJT.ID = RPT_PMBR.PROJECT_ID\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a<dynamic parameter=":S_RQ_TO_ME" operator="==" value="null">\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_MEMBER" operator="!=" value="null">\u000d\u000a   AND RPT_MBR.NAME CONCAT(CONCAT(''%'',:S_RGST_MEMBER),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         RPT.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         RPT_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         RPT_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_30','2013-10-11 12:22:12.488000',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1) WEEK_COUNT, \u000d\u000a       PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1 MONTH_COUNT, \u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''))\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), LAST_DAY(RPT.RGST_DTTM)), \u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), LAST_DAY(PJT.FROM_DATE)))\u000d\u000a       END AS PERIOD,\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID\u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND PJT.ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND PJT.ID = RPT_PMBR.PROJECT_ID\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="!=" value="null">\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_MEMBER" operator="!=" value="null">\u000d\u000a   AND RPT_MBR.NAME CONCAT(CONCAT(''%'',:S_RGST_MEMBER),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         RPT.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         RPT_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         RPT_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_30','2013-10-11 12:22:37.781000',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1) WEEK_COUNT, \u000d\u000a       PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1 MONTH_COUNT, \u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''))\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), LAST_DAY(RPT.RGST_DTTM)), \u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), LAST_DAY(PJT.FROM_DATE)))\u000d\u000a       END AS PERIOD,\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID\u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND PJT.ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND PJT.ID = RPT_PMBR.PROJECT_ID\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="!=" value="null">\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_MEMBER" operator="!=" value="null">\u000d\u000a   AND RPT_MBR.NAME CONCAT(CONCAT(''%'',:S_RGST_MEMBER),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         RPT.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         RPT_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         RPT_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_30','2013-10-11 12:28:23.334000',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1) WEEK_COUNT, \u000d\u000a       PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1 MONTH_COUNT, \u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''))\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(RPT.RGST_DTTM), ''%Y\ub144 %m\uc6d4 %d\uc77c'')), \u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(PJT.FROM_DATE), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       END AS PERIOD,\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID\u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND PJT.ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND PJT.ID = RPT_PMBR.PROJECT_ID\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="!=" value="null">\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_MEMBER" operator="!=" value="null">\u000d\u000a   AND RPT_MBR.NAME CONCAT(CONCAT(''%'',:S_RGST_MEMBER),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         RPT.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         RPT_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         RPT_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_30','2013-10-11 12:29:51.619000',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1) WEEK_COUNT, \u000d\u000a       PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1 MONTH_COUNT, \u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''))\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(RPT.RGST_DTTM), ''%Y\ub144 %m\uc6d4 %d\uc77c'')), \u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(PJT.FROM_DATE), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       END AS PERIOD,\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID\u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND PJT.ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND PJT.ID = RPT_PMBR.PROJECT_ID\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="!=" value="null">\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER_ID" operator="!=" value="null">\u000d\u000a   AND RPT.RECEIVER = :S_RECEIVER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_MEMBER" operator="!=" value="null">\u000d\u000a   AND RPT_MBR.NAME CONCAT(CONCAT(''%'',:S_RGST_MEMBER),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         RPT.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         RPT_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         RPT_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_30','2013-10-11 12:36:44.721000',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a             1\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1)\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1\u000d\u000a       END AS DIFF_COUNT,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''))\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(RPT.RGST_DTTM), ''%Y\ub144 %m\uc6d4 %d\uc77c'')), \u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(PJT.FROM_DATE), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       END AS PERIOD,\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID\u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND PJT.ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND PJT.ID = RPT_PMBR.PROJECT_ID\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="!=" value="null">\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER_ID" operator="!=" value="null">\u000d\u000a   AND RPT.RECEIVER = :S_RECEIVER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_MEMBER" operator="!=" value="null">\u000d\u000a   AND RPT_MBR.NAME CONCAT(CONCAT(''%'',:S_RGST_MEMBER),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         RPT.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         RPT_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         RPT_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_30','2013-10-11 12:39:41.797000',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a             1 AS DIFF_COUNT,\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1) AS DIFF_COUNT,\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1 AS DIFF_COUNT,\u000d\u000a       END \u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''))\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(RPT.RGST_DTTM), ''%Y\ub144 %m\uc6d4 %d\uc77c'')), \u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(PJT.FROM_DATE), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       END AS PERIOD,\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID\u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND PJT.ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND PJT.ID = RPT_PMBR.PROJECT_ID\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="!=" value="null">\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER_ID" operator="!=" value="null">\u000d\u000a   AND RPT.RECEIVER = :S_RECEIVER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_MEMBER" operator="!=" value="null">\u000d\u000a   AND RPT_MBR.NAME CONCAT(CONCAT(''%'',:S_RGST_MEMBER),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         RPT.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         RPT_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         RPT_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_30','2013-10-11 12:40:51.298000',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            ''\uc77c\uc77c\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ''\uc8fc\uac04\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            ''\uc6d4\uac04\ubcf4\uace0''\u000d\u000a       END AS RPT_TYPE_NAME,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a             1\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1)\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1\u000d\u000a       END AS DIFF_COUNT,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''))\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(RPT.RGST_DTTM), ''%Y\ub144 %m\uc6d4 %d\uc77c'')), \u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(PJT.FROM_DATE), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       END AS PERIOD,\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID\u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND PJT.ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND PJT.ID = RPT_PMBR.PROJECT_ID\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="!=" value="null">\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER_ID" operator="!=" value="null">\u000d\u000a   AND RPT.RECEIVER = :S_RECEIVER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_MEMBER" operator="!=" value="null">\u000d\u000a   AND RPT_MBR.NAME CONCAT(CONCAT(''%'',:S_RGST_MEMBER),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         RPT.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         RPT_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         RPT_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_30','2013-10-11 12:49:26.223000',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            ''\uc77c\uc77c\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ''\uc8fc\uac04\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            ''\uc6d4\uac04\ubcf4\uace0''\u000d\u000a       END AS RPT_TYPE_NAME,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a             1\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1)\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1\u000d\u000a       END AS DIFF_COUNT,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''))\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(RPT.RGST_DTTM), ''%Y\ub144 %m\uc6d4 %d\uc77c'')), \u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(PJT.FROM_DATE), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       END AS PERIOD,\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID\u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND PJT.ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND PJT.ID = RPT_PMBR.PROJECT_ID\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="!=" value="null">\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER_ID" operator="!=" value="null">\u000d\u000a   AND RPT.RECEIVER = :S_RECEIVER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_MEMBER" operator="!=" value="null">\u000d\u000a   AND RPT_MBR.NAME CONCAT(CONCAT(''%'',:S_RGST_MEMBER),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         RPT.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         RPT_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         RPT_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000a         RPT.REPORT_TYPE DESC\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_30','2013-10-11 12:52:36.869000',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            ''\uc77c\uc77c\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ''\uc8fc\uac04\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            ''\uc6d4\uac04\ubcf4\uace0''\u000d\u000a       END AS RPT_TYPE_NAME,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a             1\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1)\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1\u000d\u000a       END AS DIFF_COUNT,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''))\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(RPT.RGST_DTTM), ''%Y\ub144 %m\uc6d4 %d\uc77c'')), \u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(PJT.FROM_DATE), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       END AS PERIOD,\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID\u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND PJT.ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND PJT.ID = RPT_PMBR.PROJECT_ID\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="!=" value="null">\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER_ID" operator="!=" value="null">\u000d\u000a   AND RPT.RECEIVER = :S_RECEIVER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_MEMBER" operator="!=" value="null">\u000d\u000a   AND RPT_MBR.NAME CONCAT(CONCAT(''%'',:S_RGST_MEMBER),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         RPT.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         RPT_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         RPT_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000a         ,RPT.REPORT_TYPE DESC\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_30','2013-10-11 13:07:26.380000',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            ''\uc77c\uc77c\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ''\uc8fc\uac04\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            ''\uc6d4\uac04\ubcf4\uace0''\u000d\u000a       END AS RPT_TYPE_NAME,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a             1\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1)\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1\u000d\u000a       END AS DIFF_COUNT,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''))\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(RPT.RGST_DTTM), ''%Y\ub144 %m\uc6d4 %d\uc77c'')), \u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(PJT.FROM_DATE), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       END AS PERIOD,\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID\u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND PJT.ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND PJT.ID = RPT_PMBR.PROJECT_ID\u000d\u000a<dynamic parameter=":S_RQ_CUR" operator="==" value="Y">\u000d\u000a   AND CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a1=1\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a1=1\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a1=1\u000d\u000a       END\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="!=" value="null">\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER_ID" operator="!=" value="null">\u000d\u000a   AND RPT.RECEIVER = :S_RECEIVER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_MEMBER" operator="!=" value="null">\u000d\u000a   AND RPT_MBR.NAME CONCAT(CONCAT(''%'',:S_RGST_MEMBER),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         RPT.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         RPT_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         RPT_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000a         ,RPT.REPORT_TYPE DESC\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_30','2013-10-11 13:07:45.756000',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            ''\uc77c\uc77c\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ''\uc8fc\uac04\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            ''\uc6d4\uac04\ubcf4\uace0''\u000d\u000a       END AS RPT_TYPE_NAME,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a             1\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1)\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1\u000d\u000a       END AS DIFF_COUNT,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''))\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(RPT.RGST_DTTM), ''%Y\ub144 %m\uc6d4 %d\uc77c'')), \u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(PJT.FROM_DATE), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       END AS PERIOD,\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID\u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND PJT.ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND PJT.ID = RPT_PMBR.PROJECT_ID\u000d\u000a<dynamic parameter=":S_RQ_CUR" operator="==" value="Y">\u000d\u000a   AND CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a1=1\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a1=1\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a1=1\u000d\u000a       END\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="!=" value="null">\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER_ID" operator="!=" value="null">\u000d\u000a   AND RPT.RECEIVER = :S_RECEIVER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_MEMBER" operator="!=" value="null">\u000d\u000a   AND RPT_MBR.NAME CONCAT(CONCAT(''%'',:S_RGST_MEMBER),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         RPT.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         RPT_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         RPT_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000a         ,RPT.REPORT_TYPE DESC\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_30','2013-10-11 13:11:42.842000',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            ''\uc77c\uc77c\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ''\uc8fc\uac04\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            ''\uc6d4\uac04\ubcf4\uace0''\u000d\u000a       END AS RPT_TYPE_NAME,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a             1\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1)\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1\u000d\u000a       END AS DIFF_COUNT,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''))\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(RPT.RGST_DTTM), ''%Y\ub144 %m\uc6d4 %d\uc77c'')), \u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(PJT.FROM_DATE), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       END AS PERIOD,\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID\u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND PJT.ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND PJT.ID = RPT_PMBR.PROJECT_ID\u000d\u000a<dynamic parameter=":S_RQ_CUR" operator="==" value="Y">\u000d\u000a   AND CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(CURRENT_DATE, ''%Y-%m-%d'')\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a1=1\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a1=1\u000d\u000a       END\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="!=" value="null">\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER_ID" operator="!=" value="null">\u000d\u000a   AND RPT.RECEIVER = :S_RECEIVER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_MEMBER" operator="!=" value="null">\u000d\u000a   AND RPT_MBR.NAME CONCAT(CONCAT(''%'',:S_RGST_MEMBER),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         RPT.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         RPT_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         RPT_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000a         ,RPT.REPORT_TYPE DESC\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_30','2013-10-11 13:32:45.081000',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            ''\uc77c\uc77c\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ''\uc8fc\uac04\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            ''\uc6d4\uac04\ubcf4\uace0''\u000d\u000a       END AS RPT_TYPE_NAME,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a             1\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1)\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1\u000d\u000a       END AS DIFF_COUNT,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''))\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(RPT.RGST_DTTM), ''%Y\ub144 %m\uc6d4 %d\uc77c'')), \u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(PJT.FROM_DATE), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       END AS PERIOD,\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID\u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND PJT.ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND PJT.ID = RPT_PMBR.PROJECT_ID\u000d\u000a<dynamic parameter=":S_RQ_CUR" operator="==" value="Y">\u000d\u000a   AND CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(CURRENT_DATE, ''%Y-%m-%d'')\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a1=1\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m'') = STR_TO_DATE(CURRENT_DATE, ''%Y-%m'')\u000d\u000a       END\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="!=" value="null">\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER_ID" operator="!=" value="null">\u000d\u000a   AND RPT.RECEIVER = :S_RECEIVER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_MEMBER" operator="!=" value="null">\u000d\u000a   AND RPT_MBR.NAME CONCAT(CONCAT(''%'',:S_RGST_MEMBER),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         RPT.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         RPT_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         RPT_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000a         ,RPT.REPORT_TYPE DESC\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_30','2013-10-11 13:37:08.642000',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            ''\uc77c\uc77c\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ''\uc8fc\uac04\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            ''\uc6d4\uac04\ubcf4\uace0''\u000d\u000a       END AS RPT_TYPE_NAME,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a             1\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1)\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1\u000d\u000a       END AS DIFF_COUNT,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''))\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(RPT.RGST_DTTM), ''%Y\ub144 %m\uc6d4 %d\uc77c'')), \u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(PJT.FROM_DATE), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       END AS PERIOD,\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID\u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND PJT.ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND PJT.ID = RPT_PMBR.PROJECT_ID\u000d\u000a<dynamic parameter=":S_RQ_CUR" operator="==" value="Y">\u000d\u000a   AND CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(CURRENT_DATE, ''%Y-%m-%d'')\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            (WEEK(RPT.RGST_DTTM) = WEEK(CURRENT_DATE) AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y'') = STR_TO_DATE(CURRENT_DATE, ''%Y''))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m'') = STR_TO_DATE(CURRENT_DATE, ''%Y-%m'')\u000d\u000a       END\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="!=" value="null">\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER_ID" operator="!=" value="null">\u000d\u000a   AND RPT.RECEIVER = :S_RECEIVER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_MEMBER" operator="!=" value="null">\u000d\u000a   AND RPT_MBR.NAME CONCAT(CONCAT(''%'',:S_RGST_MEMBER),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         RPT.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         RPT_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         RPT_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000a         ,RPT.REPORT_TYPE DESC\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_30','2013-10-11 13:40:04.996000',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            ''\uc77c\uc77c\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ''\uc8fc\uac04\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            ''\uc6d4\uac04\ubcf4\uace0''\u000d\u000a       END AS RPT_TYPE_NAME,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a             1\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1)\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1\u000d\u000a       END AS DIFF_COUNT,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''))\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(RPT.RGST_DTTM), ''%Y\ub144 %m\uc6d4 %d\uc77c'')), \u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(PJT.FROM_DATE), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       END AS PERIOD,\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID\u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND PJT.ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND PJT.ID = RPT_PMBR.PROJECT_ID\u000d\u000a<dynamic parameter=":S_RQ_CUR" operator="==" value="Y">\u000d\u000a   AND CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(CURRENT_DATE, ''%Y-%m-%d'')\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            (WEEK(RPT.RGST_DTTM) = WEEK(CURRENT_DATE) AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y'') = STR_TO_DATE(CURRENT_DATE, ''%Y''))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m'') = STR_TO_DATE(CURRENT_DATE, ''%Y-%m'')\u000d\u000a       END\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="!=" value="null">\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER_ID" operator="!=" value="null">\u000d\u000a   AND RPT.RECEIVER = :S_RECEIVER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_MEMBER" operator="!=" value="null">\u000d\u000a   AND RPT_MBR.NAME CONCAT(CONCAT(''%'',:S_RGST_MEMBER),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a         RPT.REPORT_TYPE DESC,\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         RPT.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         RPT_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         RPT_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_30','2013-10-11 14:33:41.678000',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            ''\uc77c\uc77c\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ''\uc8fc\uac04\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            ''\uc6d4\uac04\ubcf4\uace0''\u000d\u000a       END AS RPT_TYPE_NAME,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m%d''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m%d'')) + 1\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1)\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1\u000d\u000a       END AS DIFF_COUNT,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''))\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(RPT.RGST_DTTM), ''%Y\ub144 %m\uc6d4 %d\uc77c'')), \u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(PJT.FROM_DATE), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       END AS PERIOD,\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID\u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND PJT.ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND PJT.ID = RPT_PMBR.PROJECT_ID\u000d\u000a<dynamic parameter=":S_RQ_CUR" operator="==" value="Y">\u000d\u000a   AND CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(CURRENT_DATE, ''%Y-%m-%d'')\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            (WEEK(RPT.RGST_DTTM) = WEEK(CURRENT_DATE) AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y'') = STR_TO_DATE(CURRENT_DATE, ''%Y''))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m'') = STR_TO_DATE(CURRENT_DATE, ''%Y-%m'')\u000d\u000a       END\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="!=" value="null">\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER_ID" operator="!=" value="null">\u000d\u000a   AND RPT.RECEIVER = :S_RECEIVER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_MEMBER" operator="!=" value="null">\u000d\u000a   AND RPT_MBR.NAME CONCAT(CONCAT(''%'',:S_RGST_MEMBER),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a         RPT.REPORT_TYPE DESC,\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         RPT.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         RPT_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         RPT_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_30','2013-10-11 14:44:55.672000',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            ''\uc77c\uc77c\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ''\uc8fc\uac04\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            ''\uc6d4\uac04\ubcf4\uace0''\u000d\u000a       END AS RPT_TYPE_NAME,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            DATEDIFF(RGST_DTTM, DATE_FORMAT(''20130812'', ''%Y%m%d'')) + 1\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1)\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1\u000d\u000a       END AS DIFF_COUNT,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''))\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(RPT.RGST_DTTM), ''%Y\ub144 %m\uc6d4 %d\uc77c'')), \u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(PJT.FROM_DATE), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       END AS PERIOD,\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID\u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND PJT.ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND PJT.ID = RPT_PMBR.PROJECT_ID\u000d\u000a<dynamic parameter=":S_RQ_CUR" operator="==" value="Y">\u000d\u000a   AND CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(CURRENT_DATE, ''%Y-%m-%d'')\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            (WEEK(RPT.RGST_DTTM) = WEEK(CURRENT_DATE) AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y'') = STR_TO_DATE(CURRENT_DATE, ''%Y''))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m'') = STR_TO_DATE(CURRENT_DATE, ''%Y-%m'')\u000d\u000a       END\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="!=" value="null">\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER_ID" operator="!=" value="null">\u000d\u000a   AND RPT.RECEIVER = :S_RECEIVER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_MEMBER" operator="!=" value="null">\u000d\u000a   AND RPT_MBR.NAME CONCAT(CONCAT(''%'',:S_RGST_MEMBER),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a         RPT.REPORT_TYPE DESC,\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         RPT.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         RPT_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         RPT_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_30','2013-10-11 14:46:01.928000',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            ''\uc77c\uc77c\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ''\uc8fc\uac04\ubcf4\uace0''\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            ''\uc6d4\uac04\ubcf4\uace0''\u000d\u000a       END AS RPT_TYPE_NAME,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            DATEDIFF(RPT.RGST_DTTM, DATE_FORMAT(''20130812'', ''%Y%m%d'')) + 1\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1)\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1\u000d\u000a       END AS DIFF_COUNT,\u000d\u000a       CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c''))\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(RPT.RGST_DTTM), ''%Y\ub144 %m\uc6d4 %d\uc77c'')), \u000d\u000a            CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), DATE_FORMAT(LAST_DAY(PJT.FROM_DATE), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       END AS PERIOD,\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID\u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND PJT.ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND PJT.ID = RPT_PMBR.PROJECT_ID\u000d\u000a<dynamic parameter=":S_RQ_CUR" operator="==" value="Y">\u000d\u000a   AND CASE RPT.REPORT_TYPE\u000d\u000a       WHEN ''RPTYPRT001'' THEN\u000d\u000a            STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(CURRENT_DATE, ''%Y-%m-%d'')\u000d\u000a       WHEN ''RPTYPRT002'' THEN\u000d\u000a            (WEEK(RPT.RGST_DTTM) = WEEK(CURRENT_DATE) AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y'') = STR_TO_DATE(CURRENT_DATE, ''%Y''))\u000d\u000a       WHEN ''RPTYPRT003'' THEN\u000d\u000a            STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m'') = STR_TO_DATE(CURRENT_DATE, ''%Y-%m'')\u000d\u000a       END\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="!=" value="null">\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(RPT.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER_ID" operator="!=" value="null">\u000d\u000a   AND RPT.RECEIVER = :S_RECEIVER_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_MEMBER" operator="!=" value="null">\u000d\u000a   AND RPT_MBR.NAME CONCAT(CONCAT(''%'',:S_RGST_MEMBER),''%'')\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a         RPT.REPORT_TYPE DESC,\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         RPT.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         RPT_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         RPT_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_31','2013-09-27 15:05:36.001000',4,'DOCUMENT','true ','SELECT RPT.ID ID, \u000d\u000a       ROUND(DATEDIFF(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) - 1) DAY), DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) - 1) DAY))/7 + 1) WEEK_COUNT, \u000d\u000a       PERIOD_DIFF(DATE_FORMAT(RPT.RGST_DTTM, ''%Y%m''), DATE_FORMAT(PJT.FROM_DATE, ''%Y%m'')) + 1 MONTH_COUNT, \u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="==" value="RPTYPRT002">\u000d\u000a       IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a       CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(RPT.RGST_DTTM, INTERVAL (DAYOFWEEK(RPT.RGST_DTTM) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')),\u000d\u000a       CONCAT(CONCAT(DATE_FORMAT(DATE_SUB(PJT.FROM_DATE, INTERVAL (DAYOFWEEK(PJT.FROM_DATE) -1) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c''), '' ~ ''), DATE_FORMAT(DATE_ADD(RPT.RGST_DTTM, INTERVAL (7 - DAYOFWEEK(RPT.RGST_DTTM)) DAY), ''%Y\ub144 %m\uc6d4 %d\uc77c'')))\u000d\u000a       PERIOD,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":REPORT_TYPE" operator="==" value="RPTYPRT003">\u000d\u000a       IF(RPT.RGST_DTTM > PJT.FROM_DATE,\u000d\u000a       CONCAT(CONCAT(DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), LAST_DAY(RPT.RGST_DTTM)), \u000d\u000a       CONCAT(CONCAT(DATE_FORMAT(PJT.FROM_DATE, ''%Y\ub144 %m\uc6d4 01\uc77c''), '' ~ ''), LAST_DAY(PJT.FROM_DATE)))\u000d\u000a       PERIOD, \u000d\u000a</dynamic>\u000d\u000a       DATE_FORMAT(RPT.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c %h\uc2dc %i\ubd84'') RGST_DTTM,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       RPT.RECEIVER RECEIVER_ID,\u000d\u000a       RPT_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       RPT_MBR.NAME MEMBER_NAME,\u000d\u000a       RPT.RGST_MEMBER_ID MEMBER_ID,\u000d\u000a       RPT.CURRENT CURRENT,\u000d\u000a       RPT.NEXT NEXT,\u000d\u000a       RPT.EVALUATION EVALUATION,\u000d\u000a       RPT.ISSUE ISSUE       \u000d\u000a  FROM PROJECT PJT,\u000d\u000a       REPORT RPT,\u000d\u000a       MEMBER RCV_MBR, \u000d\u000a       MEMBER RPT_MBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       PROJECT_MEMBER RPT_PMBR, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       ORGANIZATION RPT_ORG\u000d\u000a WHERE RPT.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND RPT.PROJECT_ID = PJT.ID\u000d\u000a   AND RPT.RGST_MEMBER_ID = RPT_PMBR.MEMBER_ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND RPT_PMBR.MEMBER_ID = RPT_MBR.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND RPT_PMBR.ORGANIZATION_ID = RPT_ORG.ID\u000d\u000a   AND RPT.PROJECT_ID = :G_PROJECT_ID\u000d\u000a   AND RPT.REPORT_TYPE = :REPORT_TYPE\u000d\u000a   AND RPT.ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_32','2013-10-02 09:45:03.806000',4,'DOCUMENT','true ','SELECT DR.ID ID,\u000d\u000a       DR.TITLE TITLE,\u000d\u000a       CODE.NAME DECISION_STATUS,\u000d\u000a       DATE_FORMAT(DR.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       DATE_FORMAT(DR.DUE_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') DUE_DATE,\u000d\u000a       DR.RGST_MEMBER_ID MEMBER_ID,\u000d\u000a       MBR_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       MBR.NAME MEMBER_NAME,\u000d\u000a       DR.RECEIVER RECEIVER_ID,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER\u000d\u000a  FROM DECISION_REQUEST DR, \u000d\u000a       PROJECT_MEMBER PMBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       ORGANIZATION MBR_ORG, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       MEMBER MBR,\u000d\u000a       MEMBER RCV_MBR,\u000d\u000a       CODE\u000d\u000a WHERE DR.RGST_MEMBER_ID = PMBR.MEMBER_ID\u000d\u000a   AND DR.PROJECT_ID = PMBR.PROJECT_ID\u000d\u000a   AND DR.PROJECT_ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND DR.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND PMBR.ORGANIZATION_ID = MBR_ORG.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND DR.DECISION_STATUS = CODE.ID\u000d\u000a   AND DR.GROUP_ID = DR.ID\u000d\u000a   AND DR.PROJECT_ID = :G_PROJECT_ID\u000d\u000a<dynamic parameter=":S_TITLE" operator="!=" value="null">\u000d\u000a   AND DR.TITLE LIKE CONCAT(CONCAT(''%'',:S_TITLE),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_DECISION_STATUS" operator="!=" value="null">\u000d\u000a   AND DR.DECISION_STATUS = :S_DECISION_STATUS\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(DR.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_MEMBER_NAME" operator="!=" value="null">\u000d\u000a   AND MBR.NAME = :S_MEMBER_NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME = :S_RECEIVER\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         DR.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         DR.TITLE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         DR.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         DR.DUE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         MBR_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="5">\u000d\u000a         MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="6">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="7">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_32','2013-10-11 11:29:26.940000',4,'DOCUMENT','true ','SELECT DR.ID ID,\u000d\u000a       DR.TITLE TITLE,\u000d\u000a       CODE.NAME DECISION_STATUS,\u000d\u000a       DATE_FORMAT(DR.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       DATE_FORMAT(DR.DUE_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') DUE_DATE,\u000d\u000a       DR.RGST_MEMBER_ID MEMBER_ID,\u000d\u000a       MBR_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       MBR.NAME MEMBER_NAME,\u000d\u000a       DR.RECEIVER RECEIVER_ID,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER\u000d\u000a  FROM DECISION_REQUEST DR, \u000d\u000a       PROJECT_MEMBER PMBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       ORGANIZATION MBR_ORG, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       MEMBER MBR,\u000d\u000a       MEMBER RCV_MBR,\u000d\u000a       CODE\u000d\u000a WHERE DR.RGST_MEMBER_ID = PMBR.MEMBER_ID\u000d\u000a   AND DR.PROJECT_ID = PMBR.PROJECT_ID\u000d\u000a   AND DR.PROJECT_ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND DR.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND PMBR.ORGANIZATION_ID = MBR_ORG.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND DR.DECISION_STATUS = CODE.ID\u000d\u000a   AND DR.GROUP_ID = DR.ID\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000a   AND DR.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_TITLE" operator="!=" value="null">\u000d\u000a   AND DR.TITLE LIKE CONCAT(CONCAT(''%'',:S_TITLE),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_DECISION_STATUS" operator="!=" value="null">\u000d\u000a   AND DR.DECISION_STATUS = :S_DECISION_STATUS\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(DR.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_MEMBER_NAME" operator="!=" value="null">\u000d\u000a   AND MBR.NAME = :S_MEMBER_NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME = :S_RECEIVER\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         DR.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         DR.TITLE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         DR.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         DR.DUE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         MBR_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="5">\u000d\u000a         MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="6">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="7">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_32','2013-10-11 11:33:12.222000',4,'DOCUMENT','true ','SELECT DR.ID ID,\u000d\u000a       DR.TITLE TITLE,\u000d\u000a       CODE.NAME DECISION_STATUS,\u000d\u000a       DATE_FORMAT(DR.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       DATE_FORMAT(DR.DUE_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') DUE_DATE,\u000d\u000a       DR.RGST_MEMBER_ID MEMBER_ID,\u000d\u000a       MBR_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       MBR.NAME MEMBER_NAME,\u000d\u000a       DR.RECEIVER RECEIVER_ID,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER\u000d\u000a  FROM DECISION_REQUEST DR, \u000d\u000a       PROJECT_MEMBER PMBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       ORGANIZATION MBR_ORG, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       MEMBER MBR,\u000d\u000a       MEMBER RCV_MBR,\u000d\u000a       CODE\u000d\u000a WHERE DR.RGST_MEMBER_ID = PMBR.MEMBER_ID\u000d\u000a   AND DR.PROJECT_ID = PMBR.PROJECT_ID\u000d\u000a   AND DR.PROJECT_ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND DR.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND PMBR.ORGANIZATION_ID = MBR_ORG.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND DR.DECISION_STATUS = CODE.ID\u000d\u000a   AND DR.GROUP_ID = DR.ID\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000a   AND DR.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_TITLE" operator="!=" value="null">\u000d\u000a   AND DR.TITLE LIKE CONCAT(CONCAT(''%'',:S_TITLE),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_DECISION_STATUS" operator="!=" value="null">\u000d\u000a   AND DR.DECISION_STATUS = :S_DECISION_STATUS\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(DR.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_MEMBER_NAME" operator="!=" value="null">\u000d\u000a   AND MBR.NAME = :S_MEMBER_NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME = :S_RECEIVER\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER_ID" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.MEMBER_ID = :S_RECEIVER_ID\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         DR.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         DR.TITLE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         DR.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         DR.DUE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         MBR_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="5">\u000d\u000a         MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="6">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="7">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_32','2013-10-11 11:34:30.543000',4,'DOCUMENT','true ','SELECT DR.ID ID,\u000d\u000a       DR.TITLE TITLE,\u000d\u000a       CODE.NAME DECISION_STATUS,\u000d\u000a       DATE_FORMAT(DR.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       DATE_FORMAT(DR.DUE_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') DUE_DATE,\u000d\u000a       DR.RGST_MEMBER_ID MEMBER_ID,\u000d\u000a       MBR_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       MBR.NAME MEMBER_NAME,\u000d\u000a       DR.RECEIVER RECEIVER_ID,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER\u000d\u000a  FROM DECISION_REQUEST DR, \u000d\u000a       PROJECT_MEMBER PMBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       ORGANIZATION MBR_ORG, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       MEMBER MBR,\u000d\u000a       MEMBER RCV_MBR,\u000d\u000a       CODE\u000d\u000a WHERE DR.RGST_MEMBER_ID = PMBR.MEMBER_ID\u000d\u000a   AND DR.PROJECT_ID = PMBR.PROJECT_ID\u000d\u000a   AND DR.PROJECT_ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND DR.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND PMBR.ORGANIZATION_ID = MBR_ORG.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND DR.DECISION_STATUS = CODE.ID\u000d\u000a   AND DR.GROUP_ID = DR.ID\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000a   AND DR.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_TITLE" operator="!=" value="null">\u000d\u000a   AND DR.TITLE LIKE CONCAT(CONCAT(''%'',:S_TITLE),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_DECISION_STATUS" operator="!=" value="null">\u000d\u000a   AND DR.DECISION_STATUS = :S_DECISION_STATUS\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(DR.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_MEMBER_NAME" operator="!=" value="null">\u000d\u000a   AND MBR.NAME = :S_MEMBER_NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME = :S_RECEIVER\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER_ID" operator="!=" value="null">\u000d\u000a   AND DR.RECEIVER = :S_RECEIVER_ID\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         DR.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         DR.TITLE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         DR.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         DR.DUE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         MBR_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="5">\u000d\u000a         MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="6">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="7">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_32','2013-10-11 11:36:55.043000',4,'DOCUMENT','true ','SELECT DR.ID ID,\u000d\u000a       DR.TITLE TITLE,\u000d\u000a       CODE.NAME DECISION_STATUS,\u000d\u000a       DATE_FORMAT(DR.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       DATE_FORMAT(DR.DUE_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') DUE_DATE,\u000d\u000a       DR.RGST_MEMBER_ID MEMBER_ID,\u000d\u000a       MBR_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       MBR.NAME MEMBER_NAME,\u000d\u000a       DR.RECEIVER RECEIVER_ID,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER\u000d\u000a  FROM DECISION_REQUEST DR, \u000d\u000a       PROJECT_MEMBER PMBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       ORGANIZATION MBR_ORG, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       MEMBER MBR,\u000d\u000a       MEMBER RCV_MBR,\u000d\u000a       CODE\u000d\u000a WHERE DR.RGST_MEMBER_ID = PMBR.MEMBER_ID\u000d\u000a   AND DR.PROJECT_ID = PMBR.PROJECT_ID\u000d\u000a   AND DR.PROJECT_ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND DR.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND PMBR.ORGANIZATION_ID = MBR_ORG.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND DR.DECISION_STATUS = CODE.ID\u000d\u000a   AND DR.GROUP_ID = DR.ID\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000a   AND DR.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_TITLE" operator="!=" value="null">\u000d\u000a   AND DR.TITLE LIKE CONCAT(CONCAT(''%'',:S_TITLE),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_DECISION_STATUS" operator="!=" value="null">\u000d\u000a   AND DR.DECISION_STATUS = :S_DECISION_STATUS\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RQ_TO_ME" operator="!=" value="null">\u000d\u000a   AND (DR.DECISION_STATUS = ''DCSSTPR001'' OR DR.DECISION_STATUS = ''DCSSTPR002'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(DR.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_MEMBER_NAME" operator="!=" value="null">\u000d\u000a   AND MBR.NAME = :S_MEMBER_NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME = :S_RECEIVER\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER_ID" operator="!=" value="null">\u000d\u000a   AND DR.RECEIVER = :S_RECEIVER_ID\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         DR.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         DR.TITLE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         DR.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         DR.DUE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         MBR_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="5">\u000d\u000a         MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="6">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="7">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_32','2013-10-11 12:06:20.963000',4,'DOCUMENT','true ','SELECT DR.ID ID,\u000d\u000a       DR.TITLE TITLE,\u000d\u000a       CODE.NAME DECISION_STATUS,\u000d\u000a       DATE_FORMAT(DR.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       DATE_FORMAT(DR.DUE_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') DUE_DATE,\u000d\u000a       DR.RGST_MEMBER_ID MEMBER_ID,\u000d\u000a       MBR_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       MBR.NAME MEMBER_NAME,\u000d\u000a       DR.RECEIVER RECEIVER_ID,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER\u000d\u000a  FROM DECISION_REQUEST DR, \u000d\u000a       PROJECT_MEMBER PMBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       ORGANIZATION MBR_ORG, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       MEMBER MBR,\u000d\u000a       MEMBER RCV_MBR,\u000d\u000a       CODE\u000d\u000a WHERE DR.RGST_MEMBER_ID = PMBR.MEMBER_ID\u000d\u000a   AND DR.PROJECT_ID = PMBR.PROJECT_ID\u000d\u000a   AND DR.PROJECT_ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND DR.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND PMBR.ORGANIZATION_ID = MBR_ORG.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND DR.DECISION_STATUS = CODE.ID\u000d\u000a   AND DR.GROUP_ID = DR.ID\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000a   AND DR.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_TITLE" operator="!=" value="null">\u000d\u000a   AND DR.TITLE LIKE CONCAT(CONCAT(''%'',:S_TITLE),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_DECISION_STATUS" operator="!=" value="null">\u000d\u000a   AND DR.DECISION_STATUS = :S_DECISION_STATUS\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RQ_TO_ME" operator="!=" value="null">\u000d\u000a   AND (DR.DECISION_STATUS = ''DCSSTPR001'' OR DR.DECISION_STATUS = ''DCSSTPR002'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(DR.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_MEMBER_NAME" operator="!=" value="null">\u000d\u000a   AND MBR.NAME = :S_MEMBER_NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME = LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER_ID" operator="!=" value="null">\u000d\u000a   AND DR.RECEIVER = :S_RECEIVER_ID\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         DR.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         DR.TITLE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         DR.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         DR.DUE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         MBR_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="5">\u000d\u000a         MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="6">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="7">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_32','2013-10-11 12:06:31.333000',4,'DOCUMENT','true ','SELECT DR.ID ID,\u000d\u000a       DR.TITLE TITLE,\u000d\u000a       CODE.NAME DECISION_STATUS,\u000d\u000a       DATE_FORMAT(DR.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       DATE_FORMAT(DR.DUE_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') DUE_DATE,\u000d\u000a       DR.RGST_MEMBER_ID MEMBER_ID,\u000d\u000a       MBR_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       MBR.NAME MEMBER_NAME,\u000d\u000a       DR.RECEIVER RECEIVER_ID,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER\u000d\u000a  FROM DECISION_REQUEST DR, \u000d\u000a       PROJECT_MEMBER PMBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       ORGANIZATION MBR_ORG, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       MEMBER MBR,\u000d\u000a       MEMBER RCV_MBR,\u000d\u000a       CODE\u000d\u000a WHERE DR.RGST_MEMBER_ID = PMBR.MEMBER_ID\u000d\u000a   AND DR.PROJECT_ID = PMBR.PROJECT_ID\u000d\u000a   AND DR.PROJECT_ID = RCV_PMBR.PROJECT_ID\u000d\u000a   AND DR.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND PMBR.ORGANIZATION_ID = MBR_ORG.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND DR.DECISION_STATUS = CODE.ID\u000d\u000a   AND DR.GROUP_ID = DR.ID\u000d\u000a<dynamic parameter=":G_PROJECT_ID" operator="!=" value="null">\u000d\u000a   AND DR.PROJECT_ID = :G_PROJECT_ID\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_TITLE" operator="!=" value="null">\u000d\u000a   AND DR.TITLE LIKE CONCAT(CONCAT(''%'',:S_TITLE),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_DECISION_STATUS" operator="!=" value="null">\u000d\u000a   AND DR.DECISION_STATUS = :S_DECISION_STATUS\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RQ_TO_ME" operator="!=" value="null">\u000d\u000a   AND (DR.DECISION_STATUS = ''DCSSTPR001'' OR DR.DECISION_STATUS = ''DCSSTPR002'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RGST_DTTM" operator="!=" value="null">\u000d\u000a   AND STR_TO_DATE(DR.RGST_DTTM, ''%Y-%m-%d'') = STR_TO_DATE(:S_RGST_DTTM, ''%Y-%m-%d'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_MEMBER_NAME" operator="!=" value="null">\u000d\u000a   AND MBR.NAME = LIKE CONCAT(CONCAT(''%'',:S_MEMBER_NAME),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER" operator="!=" value="null">\u000d\u000a   AND RCV_MBR.NAME = LIKE CONCAT(CONCAT(''%'',:S_RECEIVER),''%'')\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":S_RECEIVER_ID" operator="!=" value="null">\u000d\u000a   AND DR.RECEIVER = :S_RECEIVER_ID\u000d\u000a</dynamic>\u000d\u000aORDER BY\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         DR.RGST_DTTM DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         DR.TITLE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         CODE.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         DR.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         DR.DUE_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         MBR_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="5">\u000d\u000a         MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="6">\u000d\u000a         RCV_ORG.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="7">\u000d\u000a         RCV_MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>\u000d\u000aLIMIT :iDisplayStart, :iDisplayLength')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_33','2013-09-25 10:40:06.959000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_33','2013-09-25 10:42:10.188000',4,'DOCUMENT','false','SELECT SEQ(''DECISION_REQUEST'') AS ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_34','2013-09-27 11:45:15.115000',4,'DOCUMENT','true ','SELECT DR.TITLE TITLE,\u000d\u000a       DR.DECISION_STATUS STATUS_CODE,\u000d\u000a       DR.GROUP_ID GROUP_ID,\u000d\u000a       CODE.NAME DECISION_STATUS,\u000d\u000a       DATE_FORMAT(DR.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM,\u000d\u000a       DATE_FORMAT(DR.DUE_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') DUE_DATE,\u000d\u000a       IF(DR.DECISION_DATE IS NULL, '''', DATE_FORMAT(DR.DECISION_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'')) DECISION_DATE,\u000d\u000a       DR.RGST_MEMBER_ID MEMBER_ID,\u000d\u000a       MBR_ORG.NAME MEMBER_ORGANIZATION,\u000d\u000a       MBR.NAME MEMBER_NAME,\u000d\u000a       DR.RECEIVER RECEIVER_ID,\u000d\u000a       RCV_ORG.NAME RECEIVER_ORGANIZATION,\u000d\u000a       RCV_MBR.NAME RECEIVER,\u000d\u000a       IF(DR.CONTENTS IS NULL, '''', DR.CONTENTS) CONTENTS\u000d\u000a  FROM DECISION_REQUEST DR, \u000d\u000a       PROJECT_MEMBER PMBR, \u000d\u000a       PROJECT_MEMBER RCV_PMBR, \u000d\u000a       ORGANIZATION MBR_ORG, \u000d\u000a       ORGANIZATION RCV_ORG, \u000d\u000a       MEMBER MBR,\u000d\u000a       MEMBER RCV_MBR,\u000d\u000a       CODE\u000d\u000a WHERE DR.RGST_MEMBER_ID = PMBR.MEMBER_ID\u000d\u000a   AND DR.RECEIVER = RCV_PMBR.MEMBER_ID\u000d\u000a   AND PMBR.ORGANIZATION_ID = MBR_ORG.ID\u000d\u000a   AND RCV_PMBR.ORGANIZATION_ID = RCV_ORG.ID\u000d\u000a   AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a   AND RCV_PMBR.MEMBER_ID = RCV_MBR.ID\u000d\u000a   AND DR.DECISION_STATUS = CODE.ID\u000d\u000a   AND DR.PROJECT_ID = :G_PROJECT_ID\u000d\u000a   AND DR.ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_35','2013-09-25 13:51:06.007000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_35','2013-09-25 13:51:58.549000',4,'DOCUMENT','true ','SELECT FILE_NAME, \u000d\u000a       SEQ, \u000d\u000a       IF(SIZE >= 1024*1024, CONCAT(FLOOR(SIZE/(1024*1024)),''MB''), IF(SIZE>=1024, CONCAT(FLOOR(SIZE/1024), ''KB''), CONCAT(SIZE, ''B''))) AS SIZE\u000d\u000a  FROM DECISION_ATTATCHMENT\u000d\u000a WHERE DECISION_REQUEST_ID = :ID\u000d\u000a ORDER BY SEQ ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_35','2013-09-25 14:19:49.460000',4,'DOCUMENT','true ','SELECT FILE_NAME, \u000d\u000a       SEQ, \u000d\u000a       IF(SIZE >= 1024*1024, CONCAT(FLOOR(SIZE/(1024*1024)),''MB''), IF(SIZE>=1024, CONCAT(FLOOR(SIZE/1024), ''KB''), CONCAT(SIZE, ''B''))) AS SIZE\u000d\u000a  FROM DECISION_ATTATCHMENT\u000d\u000a WHERE DECISION_REQUEST_ID = :DECISION_REQUEST_ID\u000d\u000a ORDER BY SEQ ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_35','2013-09-25 14:20:25.433000',4,'DOCUMENT','true ','SELECT FILE_NAME, \u000d\u000a       SEQ, \u000d\u000a       IF(SIZE >= 1024*1024, CONCAT(FLOOR(SIZE/(1024*1024)),''MB''), IF(SIZE>=1024, CONCAT(FLOOR(SIZE/1024), ''KB''), CONCAT(SIZE, ''B''))) AS SIZE\u000d\u000a  FROM DECISION_ATTATCHMENT\u000d\u000a WHERE DECISION_REQUEST_ID = :ID\u000d\u000a ORDER BY SEQ ASC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_36','2013-09-25 14:20:49.495000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_36','2013-09-25 14:21:14.454000',4,'DOCUMENT','true ','SELECT CONTENT, FILE_NAME FROM DECISION_ATTATCHMENT\u000d\u000aWHERE DECISION_REQUEST_ID = :DECISION_REQUEST_ID\u000d\u000a  AND SEQ = :SEQ')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_37','2013-09-26 17:52:59.369000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_37','2013-09-26 18:07:20.258000',4,'DOCUMENT','true ','SELECT GROUP_ID FROM DECISION_REQUEST\u000d\u000aWHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_38','2013-09-27 11:44:22.788000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_38','2013-09-27 11:44:30.816000',4,'DOCUMENT','true ','SELECT DR.OPINION, ORG.NAME, MBR.NAME\u000d\u000aFROM\u000d\u000a(\u000d\u000aSELECT IF(ID = GROUP_ID, OPINION, CONTENTS) OPINION, IF(ID = GROUP_ID, RECEIVER, RGST_MEMBER_ID) RECEIVER_ID\u000d\u000a  FROM DECISION_REQUEST\u000d\u000a WHERE GROUP_ID = :GROUP_ID\u000d\u000aORDER BY RGST_DTTM\u000d\u000a) DR,\u000d\u000aPROJECT_MEMBER PMBR, MEMBER MBR, ORGANIZATION ORG\u000d\u000aWHERE DR.RECEIVER_ID = PMBR.MEMBER_ID\u000d\u000a  AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a  AND PMBR.ORGANIZATION_ID = ORG.ID\u000d\u000a  AND OPINION IS NOT NULL')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_38','2013-09-27 11:48:26.570000',4,'DOCUMENT','true ','SELECT DR.OPINION, ORG.NAME ORGANIZATION, MBR.NAME RECEIVER_NAME\u000d\u000aFROM\u000d\u000a(\u000d\u000aSELECT IF(ID = GROUP_ID, OPINION, CONTENTS) OPINION, IF(ID = GROUP_ID, RECEIVER, RGST_MEMBER_ID) RECEIVER_ID\u000d\u000a  FROM DECISION_REQUEST\u000d\u000a WHERE GROUP_ID = :GROUP_ID\u000d\u000aORDER BY RGST_DTTM\u000d\u000a) DR,\u000d\u000aPROJECT_MEMBER PMBR, MEMBER MBR, ORGANIZATION ORG\u000d\u000aWHERE DR.RECEIVER_ID = PMBR.MEMBER_ID\u000d\u000a  AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a  AND PMBR.ORGANIZATION_ID = ORG.ID\u000d\u000a  AND OPINION IS NOT NULL')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_38','2013-09-27 12:40:27.770000',4,'DOCUMENT','true ','SELECT DR.OPINION, ORG.NAME ORGANIZATION, CODE.NAME ROLE, MBR.NAME RECEIVER_NAME, OPINION_DATE\u000d\u000a  FROM\u000d\u000a      (\u000d\u000a      SELECT IF(ID = GROUP_ID, OPINION, CONTENTS) OPINION, \u000d\u000a             IF(ID = GROUP_ID, RECEIVER, RGST_MEMBER_ID) RECEIVER_ID,\u000d\u000a             IF(ID = GROUP_ID, DECISION_DATE, RGST_DTTM) OPINION_DATE\u000d\u000a        FROM DECISION_REQUEST\u000d\u000a       WHERE GROUP_ID = :GROUP_ID\u000d\u000a      ORDER BY RGST_DTTM\u000d\u000a      ) DR,\u000d\u000a      PROJECT_MEMBER PMBR, MEMBER MBR, ORGANIZATION ORG\u000d\u000aWHERE DR.RECEIVER_ID = PMBR.MEMBER_ID\u000d\u000a  AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a  AND PMBR.ORGANIZATION_ID = ORG.ID\u000d\u000a  AND PMBR.ORGANIZATION_ID = ROLE.ORGANIZATION_ID\u000d\u000a  AND PMBR.MEMBER_ID = ROLE.MEMBER_ID \u000d\u000a  AND ROLE.ROLE_CODE = CODE.ID\u000d\u000a  AND OPINION IS NOT NULL')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_38','2013-09-27 12:42:06.686000',4,'DOCUMENT','true ','SELECT DR.OPINION, ORG.NAME ORGANIZATION, CODE.NAME ROLE, MBR.NAME RECEIVER_NAME, OPINION_DATE\u000d\u000a  FROM\u000d\u000a      (\u000d\u000a      SELECT IF(ID = GROUP_ID, OPINION, CONTENTS) OPINION, \u000d\u000a             IF(ID = GROUP_ID, RECEIVER, RGST_MEMBER_ID) RECEIVER_ID,\u000d\u000a             IF(ID = GROUP_ID, DECISION_DATE, RGST_DTTM) OPINION_DATE\u000d\u000a        FROM DECISION_REQUEST\u000d\u000a       WHERE GROUP_ID = :GROUP_ID\u000d\u000a      ORDER BY RGST_DTTM\u000d\u000a      ) DR,\u000d\u000a      PROJECT_MEMBER PMBR, MEMBER MBR, ORGANIZATION ORG, ROLE, CODE\u000d\u000aWHERE DR.RECEIVER_ID = PMBR.MEMBER_ID\u000d\u000a  AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a  AND PMBR.ORGANIZATION_ID = ORG.ID\u000d\u000a  AND PMBR.ORGANIZATION_ID = ROLE.ORGANIZATION_ID\u000d\u000a  AND PMBR.MEMBER_ID = ROLE.MEMBER_ID \u000d\u000a  AND ROLE.ROLE_CODE = CODE.ID\u000d\u000a  AND OPINION IS NOT NULL')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_38','2013-09-27 12:43:29.874000',4,'DOCUMENT','true ','SELECT DR.OPINION, ORG.NAME ORGANIZATION, CODE.NAME ROLE, MBR.NAME RECEIVER_NAME, , DATE_FORMAT(OPINION_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i'') OPINION_DATE\u000d\u000a  FROM\u000d\u000a      (\u000d\u000a      SELECT IF(ID = GROUP_ID, OPINION, CONTENTS) OPINION, \u000d\u000a             IF(ID = GROUP_ID, RECEIVER, RGST_MEMBER_ID) RECEIVER_ID,\u000d\u000a             IF(ID = GROUP_ID, DECISION_DATE, RGST_DTTM) OPINION_DATE\u000d\u000a        FROM DECISION_REQUEST\u000d\u000a       WHERE GROUP_ID = :GROUP_ID\u000d\u000a      ORDER BY RGST_DTTM\u000d\u000a      ) DR,\u000d\u000a      PROJECT_MEMBER PMBR, MEMBER MBR, ORGANIZATION ORG, ROLE, CODE\u000d\u000aWHERE DR.RECEIVER_ID = PMBR.MEMBER_ID\u000d\u000a  AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a  AND PMBR.ORGANIZATION_ID = ORG.ID\u000d\u000a  AND PMBR.ORGANIZATION_ID = ROLE.ORGANIZATION_ID\u000d\u000a  AND PMBR.MEMBER_ID = ROLE.MEMBER_ID \u000d\u000a  AND ROLE.ROLE_CODE = CODE.ID\u000d\u000a  AND OPINION IS NOT NULL')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_38','2013-09-27 12:44:41.381000',4,'DOCUMENT','true ','SELECT DR.OPINION, ORG.NAME ORGANIZATION, CODE.NAME ROLE, MBR.NAME RECEIVER_NAME, DATE_FORMAT(OPINION_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i'') OPINION_DATE\u000d\u000a  FROM\u000d\u000a      (\u000d\u000a      SELECT IF(ID = GROUP_ID, OPINION, CONTENTS) OPINION, \u000d\u000a             IF(ID = GROUP_ID, RECEIVER, RGST_MEMBER_ID) RECEIVER_ID,\u000d\u000a             IF(ID = GROUP_ID, DECISION_DATE, RGST_DTTM) OPINION_DATE\u000d\u000a        FROM DECISION_REQUEST\u000d\u000a       WHERE GROUP_ID = :GROUP_ID\u000d\u000a      ORDER BY RGST_DTTM\u000d\u000a      ) DR,\u000d\u000a      PROJECT_MEMBER PMBR, MEMBER MBR, ORGANIZATION ORG, ROLE, CODE\u000d\u000aWHERE DR.RECEIVER_ID = PMBR.MEMBER_ID\u000d\u000a  AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a  AND PMBR.ORGANIZATION_ID = ORG.ID\u000d\u000a  AND PMBR.ORGANIZATION_ID = ROLE.ORGANIZATION_ID\u000d\u000a  AND PMBR.MEMBER_ID = ROLE.MEMBER_ID \u000d\u000a  AND ROLE.ROLE_CODE = CODE.ID\u000d\u000a  AND OPINION IS NOT NULL')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_38','2013-09-27 12:49:51.351000',4,'DOCUMENT','true ','SELECT DR.OPINION, ORG.NAME ORGANIZATION, CODE.NAME ROLE, MBR.NAME RECEIVER_NAME, DATE_FORMAT(OPINION_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i'') OPINION_DATE\u000d\u000a  FROM\u000d\u000a      (\u000d\u000a      SELECT IF(ID = GROUP_ID, OPINION, CONTENTS) OPINION, \u000d\u000a             IF(ID = GROUP_ID, RECEIVER, RGST_MEMBER_ID) RECEIVER_ID,\u000d\u000a             IF(ID = GROUP_ID, DECISION_DATE, RGST_DTTM) OPINION_DATE\u000d\u000a        FROM DECISION_REQUEST\u000d\u000a       WHERE GROUP_ID = :GROUP_ID\u000d\u000a      ORDER BY RGST_DTTM DESC\u000d\u000a      ) DR,\u000d\u000a      PROJECT_MEMBER PMBR, MEMBER MBR, ORGANIZATION ORG, ROLE, CODE\u000d\u000aWHERE DR.RECEIVER_ID = PMBR.MEMBER_ID\u000d\u000a  AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a  AND PMBR.ORGANIZATION_ID = ORG.ID\u000d\u000a  AND PMBR.ORGANIZATION_ID = ROLE.ORGANIZATION_ID\u000d\u000a  AND PMBR.MEMBER_ID = ROLE.MEMBER_ID \u000d\u000a  AND ROLE.ROLE_CODE = CODE.ID\u000d\u000a  AND OPINION IS NOT NULL')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_38','2013-09-27 12:50:10.011000',4,'DOCUMENT','true ','SELECT DR.OPINION, ORG.NAME ORGANIZATION, CODE.NAME ROLE, MBR.NAME RECEIVER_NAME, DATE_FORMAT(OPINION_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i'') OPINION_DATE\u000d\u000a  FROM\u000d\u000a      (\u000d\u000a      SELECT IF(ID = GROUP_ID, OPINION, CONTENTS) OPINION, \u000d\u000a             IF(ID = GROUP_ID, RECEIVER, RGST_MEMBER_ID) RECEIVER_ID,\u000d\u000a             IF(ID = GROUP_ID, DECISION_DATE, RGST_DTTM) OPINION_DATE\u000d\u000a        FROM DECISION_REQUEST\u000d\u000a       WHERE GROUP_ID = :GROUP_ID\u000d\u000a      ORDER BY RGST_DTTM ASC\u000d\u000a      ) DR,\u000d\u000a      PROJECT_MEMBER PMBR, MEMBER MBR, ORGANIZATION ORG, ROLE, CODE\u000d\u000aWHERE DR.RECEIVER_ID = PMBR.MEMBER_ID\u000d\u000a  AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a  AND PMBR.ORGANIZATION_ID = ORG.ID\u000d\u000a  AND PMBR.ORGANIZATION_ID = ROLE.ORGANIZATION_ID\u000d\u000a  AND PMBR.MEMBER_ID = ROLE.MEMBER_ID \u000d\u000a  AND ROLE.ROLE_CODE = CODE.ID\u000d\u000a  AND OPINION IS NOT NULL')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_38','2013-09-27 12:50:37.012000',4,'DOCUMENT','true ','SELECT DR.OPINION, ORG.NAME ORGANIZATION, CODE.NAME ROLE, MBR.NAME RECEIVER_NAME, DATE_FORMAT(OPINION_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i'') OPINION_DATE\u000d\u000a  FROM\u000d\u000a      (\u000d\u000a      SELECT IF(ID = GROUP_ID, OPINION, CONTENTS) OPINION, \u000d\u000a             IF(ID = GROUP_ID, RECEIVER, RGST_MEMBER_ID) RECEIVER_ID,\u000d\u000a             IF(ID = GROUP_ID, DECISION_DATE, RGST_DTTM) OPINION_DATE\u000d\u000a        FROM DECISION_REQUEST\u000d\u000a       WHERE GROUP_ID = :GROUP_ID\u000d\u000a      ORDER BY RGST_DTTM DESC\u000d\u000a      ) DR,\u000d\u000a      PROJECT_MEMBER PMBR, MEMBER MBR, ORGANIZATION ORG, ROLE, CODE\u000d\u000aWHERE DR.RECEIVER_ID = PMBR.MEMBER_ID\u000d\u000a  AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a  AND PMBR.ORGANIZATION_ID = ORG.ID\u000d\u000a  AND PMBR.ORGANIZATION_ID = ROLE.ORGANIZATION_ID\u000d\u000a  AND PMBR.MEMBER_ID = ROLE.MEMBER_ID \u000d\u000a  AND ROLE.ROLE_CODE = CODE.ID\u000d\u000a  AND OPINION IS NOT NULL')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_38','2013-09-27 12:51:58.649000',4,'DOCUMENT','true ','SELECT DR.OPINION, ORG.NAME ORGANIZATION, CODE.NAME ROLE, MBR.NAME RECEIVER_NAME, DATE_FORMAT(OPINION_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c %H:%i'') OPINION_DATE\u000d\u000a  FROM\u000d\u000a      (\u000d\u000a      SELECT IF(ID = GROUP_ID, OPINION, CONTENTS) OPINION, \u000d\u000a             IF(ID = GROUP_ID, RECEIVER, RGST_MEMBER_ID) RECEIVER_ID,\u000d\u000a             IF(ID = GROUP_ID, DECISION_DATE, RGST_DTTM) OPINION_DATE\u000d\u000a        FROM DECISION_REQUEST\u000d\u000a       WHERE GROUP_ID = :GROUP_ID\u000d\u000a      ) DR,\u000d\u000a      PROJECT_MEMBER PMBR, MEMBER MBR, ORGANIZATION ORG, ROLE, CODE\u000d\u000aWHERE DR.RECEIVER_ID = PMBR.MEMBER_ID\u000d\u000a  AND PMBR.MEMBER_ID = MBR.ID\u000d\u000a  AND PMBR.ORGANIZATION_ID = ORG.ID\u000d\u000a  AND PMBR.ORGANIZATION_ID = ROLE.ORGANIZATION_ID\u000d\u000a  AND PMBR.MEMBER_ID = ROLE.MEMBER_ID \u000d\u000a  AND ROLE.ROLE_CODE = CODE.ID\u000d\u000a  AND OPINION IS NOT NULL\u000d\u000aORDER BY OPINION_DATE DESC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_39','2013-10-11 15:25:19.176000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_39','2013-10-11 15:25:22.772000',4,'DOCUMENT','false','SELECT ID, SCHDL_TYPE, FROM_DATE, TO_DATE, TITLE, RGST_MEMBER_ID, RGST_DTTM\u000d\u000aFROM PROJECT_SCHEDULE\u000d\u000aWHERE ASSIGNEE = ''kykim''\u000d\u000aAND SCHDL_STATUS = ''ST002ST001''')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_39','2013-10-11 16:40:40.263000',4,'DOCUMENT','false','SELECT SCHDL.ID ID, \u000d\u000a       TP_CD.NAME SCHDL_TYPE, \u000d\u000a       DATE_FORMAT(SCHDL.FROM_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') FROM_DATE, \u000d\u000a       DATE_FORMAT(SCHDL.TO_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') TO_DATE, \u000d\u000a       SCHDL.TITLE TITLE, \u000d\u000a       MBR.NAME RGST_MEMBER_NAME,\u000d\u000a       SCHDL.RGST_MEMBER_ID RGST_MEMBER_ID, \u000d\u000a       DATE_FORMAT(SCHDL.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM\u000d\u000a  FROM PROJECT_SCHEDULE SCHDL, CODE TP_CD, MEMBER MBR\u000d\u000a WHERE SCHDL.SCHDL_TYPE = TP_CD.ID\u000d\u000a   AND SCHDL.RGST_MEMBER_ID = MBR.ID\u000d\u000a   AND ASSIGNEE = ''kykim''\u000d\u000a   AND SCHDL_STATUS = ''ST002ST001''')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_39','2013-10-11 16:50:16.534000',4,'DOCUMENT','true ','SELECT SCHDL.ID ID, \u000d\u000a       TP_CD.NAME SCHDL_TYPE, \u000d\u000a       DATE_FORMAT(SCHDL.FROM_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') FROM_DATE, \u000d\u000a       DATE_FORMAT(SCHDL.TO_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') TO_DATE, \u000d\u000a       SCHDL.TITLE TITLE, \u000d\u000a       MBR.NAME RGST_MEMBER_NAME,\u000d\u000a       SCHDL.RGST_MEMBER_ID RGST_MEMBER_ID, \u000d\u000a       DATE_FORMAT(SCHDL.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM\u000d\u000a  FROM PROJECT_SCHEDULE SCHDL, CODE TP_CD, MEMBER MBR\u000d\u000a WHERE SCHDL.SCHDL_TYPE = TP_CD.ID\u000d\u000a   AND SCHDL.RGST_MEMBER_ID = MBR.ID\u000d\u000a   AND ASSIGNEE = :ASSIGNEE\u000d\u000a   AND SCHDL_STATUS = ''ST002ST001''')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_39','2013-10-11 17:02:54.867000',4,'DOCUMENT','true ','SELECT SCHDL.ID ID, \u000d\u000a       TP_CD.NAME SCHDL_TYPE, \u000d\u000a       DATE_FORMAT(SCHDL.FROM_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') FROM_DATE, \u000d\u000a       DATE_FORMAT(SCHDL.TO_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') TO_DATE, \u000d\u000a       SCHDL.TITLE TITLE, \u000d\u000a       MBR.NAME RGST_MEMBER_NAME,\u000d\u000a       SCHDL.RGST_MEMBER_ID RGST_MEMBER_ID, \u000d\u000a       DATE_FORMAT(SCHDL.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM\u000d\u000a  FROM PROJECT_SCHEDULE SCHDL, CODE TP_CD, MEMBER MBR\u000d\u000a WHERE SCHDL.SCHDL_TYPE = TP_CD.ID\u000d\u000a   AND SCHDL.RGST_MEMBER_ID = MBR.ID\u000d\u000a   AND ASSIGNEE = :ASSIGNEE\u000d\u000a   AND SCHDL_STATUS = ''ST002ST001''\u000d\u000a   AND SCHDL.TO_DATE <= CURRENT_DATE\u000d\u000aORDER BY SCHDL.TO_DATE DESC')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_39','2013-10-11 17:06:06.279000',4,'DOCUMENT','true ','SELECT SCHDL.ID ID, \u000d\u000a       TP_CD.NAME SCHDL_TYPE, \u000d\u000a       DATE_FORMAT(SCHDL.FROM_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') FROM_DATE, \u000d\u000a       DATE_FORMAT(SCHDL.TO_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') TO_DATE, \u000d\u000a       SCHDL.TITLE TITLE, \u000d\u000a       MBR.NAME RGST_MEMBER_NAME,\u000d\u000a       SCHDL.RGST_MEMBER_ID RGST_MEMBER_ID, \u000d\u000a       DATE_FORMAT(SCHDL.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM\u000d\u000a  FROM PROJECT_SCHEDULE SCHDL, CODE TP_CD, MEMBER MBR\u000d\u000a WHERE SCHDL.SCHDL_TYPE = TP_CD.ID\u000d\u000a   AND SCHDL.RGST_MEMBER_ID = MBR.ID\u000d\u000a   AND ASSIGNEE = :ASSIGNEE\u000d\u000a   AND SCHDL_STATUS = ''ST002ST001''\u000d\u000a   AND SCHDL.TO_DATE <= CURRENT_DATE\u000d\u000aORDER BY \u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         SCHDL.TO_DATE DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         SCHDL.TITLE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         TP_CD.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         SCHDL.FROM_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         SCHDL.TO_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="5">\u000d\u000a         RPT.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_39','2013-10-11 17:06:58.962000',4,'DOCUMENT','true ','SELECT SCHDL.ID ID, \u000d\u000a       TP_CD.NAME SCHDL_TYPE, \u000d\u000a       DATE_FORMAT(SCHDL.FROM_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') FROM_DATE, \u000d\u000a       DATE_FORMAT(SCHDL.TO_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') TO_DATE, \u000d\u000a       SCHDL.TITLE TITLE, \u000d\u000a       MBR.NAME RGST_MEMBER_NAME,\u000d\u000a       SCHDL.RGST_MEMBER_ID RGST_MEMBER_ID, \u000d\u000a       DATE_FORMAT(SCHDL.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM\u000d\u000a  FROM PROJECT_SCHEDULE SCHDL, CODE TP_CD, MEMBER MBR\u000d\u000a WHERE SCHDL.SCHDL_TYPE = TP_CD.ID\u000d\u000a   AND SCHDL.RGST_MEMBER_ID = MBR.ID\u000d\u000a   AND ASSIGNEE = :ASSIGNEE\u000d\u000a   AND SCHDL_STATUS = ''ST002ST001''\u000d\u000a   AND SCHDL.TO_DATE <= CURRENT_DATE\u000d\u000aORDER BY \u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         SCHDL.TO_DATE DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         SCHDL.TITLE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         TP_CD.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         SCHDL.FROM_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         SCHDL.TO_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="5">\u000d\u000a         SCHDL.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.select.project_r_39','2013-10-11 17:15:53.019000',4,'DOCUMENT','true ','SELECT SCHDL.ID ID, \u000d\u000a       TP_CD.NAME SCHDL_TYPE, \u000d\u000a       SCHDL.SCHDL_TYPE SCHDL_TYPE_CD,\u000d\u000a       DATE_FORMAT(SCHDL.FROM_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') FROM_DATE, \u000d\u000a       DATE_FORMAT(SCHDL.TO_DATE, ''%Y\ub144 %m\uc6d4 %d\uc77c'') TO_DATE, \u000d\u000a       SCHDL.TITLE TITLE, \u000d\u000a       MBR.NAME RGST_MEMBER_NAME,\u000d\u000a       SCHDL.RGST_MEMBER_ID RGST_MEMBER_ID, \u000d\u000a       DATE_FORMAT(SCHDL.RGST_DTTM, ''%Y\ub144 %m\uc6d4 %d\uc77c'') RGST_DTTM\u000d\u000a  FROM PROJECT_SCHEDULE SCHDL, CODE TP_CD, MEMBER MBR\u000d\u000a WHERE SCHDL.SCHDL_TYPE = TP_CD.ID\u000d\u000a   AND SCHDL.RGST_MEMBER_ID = MBR.ID\u000d\u000a   AND ASSIGNEE = :ASSIGNEE\u000d\u000a   AND SCHDL_STATUS = ''ST002ST001''\u000d\u000a   AND SCHDL.TO_DATE <= CURRENT_DATE\u000d\u000aORDER BY \u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="null">\u000d\u000a         SCHDL.TO_DATE DESC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="0">\u000d\u000a         SCHDL.TITLE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="1">\u000d\u000a         TP_CD.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="2">\u000d\u000a         SCHDL.FROM_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="3">\u000d\u000a         SCHDL.TO_DATE\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="4">\u000d\u000a         MBR.NAME\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":iSortCol_0" operator="==" value="5">\u000d\u000a         SCHDL.RGST_DTTM\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="asc">\u000d\u000a         ASC\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":sSortDir_0" operator="==" value="desc">\u000d\u000a         DESC\u000d\u000a</dynamic>')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update','2013-08-07 17:49:36.896000',3,'FOLDER','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_01','2013-08-09 15:57:19.862000',4,'DOCUMENT','true ','UPDATE PROJECT\u000d\u000aSET\u000d\u000a<dynamic parameter=":TITLE" operator="!=" value="null">\u000d\u000aTITLE=:TITLE,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SUMMARY" operator="!=" value="null">\u000d\u000aSUMMARY=REPLACE(REPLACE(:SUMMARY, ''\r\n'', ''\\r\\n''), ''\"'', ''\\"''),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MANAGER" operator="!=" value="null">\u000d\u000aMANAGER=:MANAGER,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MANAGER_ORGANIZATION_NAME" operator="!=" value="null">\u000d\u000aMANAGER_ORGANIZATION_NAME=:MANAGER_ORGANIZATION_NAME,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MANAGER_ROLE_NAME" operator="!=" value="null">\u000d\u000aMANAGER_ROLE_NAME=:MANAGER_ROLE_NAME,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":BUDGET_AMOUNT" operator="!=" value="null">\u000d\u000aBUDGET_AMOUNT=:BUDGET_AMOUNT,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":FROM_DATE" operator="!=" value="null">\u000d\u000aFROM_DATE=STR_TO_DATE(:FROM_DATE, ''%Y-%m-%d''),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":TO_DATE" operator="!=" value="null">\u000d\u000aTO_DATE=STR_TO_DATE(:TO_DATE, ''%Y-%m-%d''),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PRJ_STATUS" operator="!=" value="null">\u000d\u000aPRJ_STATUS=:PRJ_STATUS,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_YN" operator="!=" value="null">\u000d\u000aUSE_YN=:USE_YN,\u000d\u000a</dynamic>\u000d\u000aMDF_MEMBER_ID=:LOGIN_MEMBER, \u000d\u000aMDF_DTTM=CURRENT_TIMESTAMP\u000d\u000aWHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_01','2013-08-09 15:59:10.418000',4,'DOCUMENT','true ','UPDATE PROJECT\u000d\u000aSET\u000d\u000a<dynamic parameter=":TITLE" operator="!=" value="null">\u000d\u000aTITLE=:TITLE,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SUMMARY" operator="!=" value="null">\u000d\u000aSUMMARY=REPLACE(REPLACE(REPLACE(REPLACE(:SUMMARY, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), " ","&nbsp;&nbsp;"),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MANAGER" operator="!=" value="null">\u000d\u000aMANAGER=:MANAGER,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MANAGER_ORGANIZATION_NAME" operator="!=" value="null">\u000d\u000aMANAGER_ORGANIZATION_NAME=:MANAGER_ORGANIZATION_NAME,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":MANAGER_ROLE_NAME" operator="!=" value="null">\u000d\u000aMANAGER_ROLE_NAME=:MANAGER_ROLE_NAME,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":BUDGET_AMOUNT" operator="!=" value="null">\u000d\u000aBUDGET_AMOUNT=:BUDGET_AMOUNT,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":FROM_DATE" operator="!=" value="null">\u000d\u000aFROM_DATE=STR_TO_DATE(:FROM_DATE, ''%Y-%m-%d''),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":TO_DATE" operator="!=" value="null">\u000d\u000aTO_DATE=STR_TO_DATE(:TO_DATE, ''%Y-%m-%d''),\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":PRJ_STATUS" operator="!=" value="null">\u000d\u000aPRJ_STATUS=:PRJ_STATUS,\u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_YN" operator="!=" value="null">\u000d\u000aUSE_YN=:USE_YN,\u000d\u000a</dynamic>\u000d\u000aMDF_MEMBER_ID=:LOGIN_MEMBER, \u000d\u000aMDF_DTTM=CURRENT_TIMESTAMP\u000d\u000aWHERE ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_02','2013-08-24 00:46:14.922000',4,'DOCUMENT','true ','UPDATE PROJECT_MEMBER\u000d\u000aSET \u000d\u000aMEMBER_ID = :MEMBER_ID, \u000d\u000aORGANIZATION_ID = :ORGANIZATION_ID\u000d\u000aWHERE 1=1\u000d\u000aAND PROJECT_ID = :PROJECT_ID\u000d\u000aAND MEMBER_ID = :OLD_MANAGER')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_03','2013-08-24 00:47:27.110000',4,'DOCUMENT','true ','UPDATE PROJECT_SCHEDULE \u000d\u000aSET \u000d\u000a<dynamic parameter=":USE_YN" operator="!=" value="null">\u000d\u000aSCHDL_TYPE = :SCHDL_TYPE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_YN" operator="!=" value="null">\u000d\u000aTITLE = :TITLE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_YN" operator="!=" value="null">\u000d\u000aASSIGNEE = :ASSIGNEE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_YN" operator="!=" value="null">\u000d\u000aFROM_DATE = :FROM_DATE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_YN" operator="!=" value="null">\u000d\u000aTO_DATE = :TO_DATE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":USE_YN" operator="!=" value="null">\u000d\u000aSUMMARY = REPLACE(REPLACE(REPLACE(REPLACE(:SUMMARY, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), " ","&nbsp;&nbsp;"),\u000d\u000a</dynamic>\u000d\u000aMDF_MEMBER_ID=:LOGIN_MEMBER, \u000d\u000aMDF_DTTM=CURRENT_TIMESTAMP\u000d\u000aWHERE PROJECT_ID = :PROJECT_ID\u000d\u000aAND ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_03','2013-08-24 00:48:23.107000',4,'DOCUMENT','true ','UPDATE PROJECT_SCHEDULE \u000d\u000aSET \u000d\u000a<dynamic parameter=":SCHDL_TYPE" operator="!=" value="null">\u000d\u000aSCHDL_TYPE = :SCHDL_TYPE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":TITLE" operator="!=" value="null">\u000d\u000aTITLE = :TITLE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":ASSIGNEE" operator="!=" value="null">\u000d\u000aASSIGNEE = :ASSIGNEE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":FROM_DATE" operator="!=" value="null">\u000d\u000aFROM_DATE = :FROM_DATE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":TO_DATE" operator="!=" value="null">\u000d\u000aTO_DATE = :TO_DATE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SUMMARY" operator="!=" value="null">\u000d\u000aSUMMARY = REPLACE(REPLACE(REPLACE(REPLACE(:SUMMARY, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), " ","&nbsp;&nbsp;"),\u000d\u000a</dynamic>\u000d\u000aMDF_MEMBER_ID=:LOGIN_MEMBER, \u000d\u000aMDF_DTTM=CURRENT_TIMESTAMP\u000d\u000aWHERE PROJECT_ID = :PROJECT_ID\u000d\u000aAND ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_03','2013-08-24 00:49:59.489000',4,'DOCUMENT','true ','UPDATE PROJECT_SCHEDULE \u000d\u000aSET \u000d\u000a<dynamic parameter=":SCHDL_TYPE" operator="!=" value="null">\u000d\u000aSCHDL_TYPE = :SCHDL_TYPE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":TITLE" operator="!=" value="null">\u000d\u000aTITLE = :TITLE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SCHDL_STATUS" operator="!=" value="null">\u000d\u000aSCHDL_STATUS = :SCHDL_STATUS, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":ASSIGNEE" operator="!=" value="null">\u000d\u000aASSIGNEE = :ASSIGNEE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":FROM_DATE" operator="!=" value="null">\u000d\u000aFROM_DATE = :FROM_DATE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":TO_DATE" operator="!=" value="null">\u000d\u000aTO_DATE = :TO_DATE, \u000d\u000a</dynamic>\u000d\u000a<dynamic parameter=":SUMMARY" operator="!=" value="null">\u000d\u000aSUMMARY = REPLACE(REPLACE(REPLACE(REPLACE(:SUMMARY, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), " ","&nbsp;&nbsp;"),\u000d\u000a</dynamic>\u000d\u000aMDF_MEMBER_ID=:LOGIN_MEMBER, \u000d\u000aMDF_DTTM=CURRENT_TIMESTAMP\u000d\u000aWHERE PROJECT_ID = :PROJECT_ID\u000d\u000aAND ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_04','2013-09-02 13:31:58.831000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_04','2013-09-02 13:37:51.852000',4,'DOCUMENT','true ','UPDATE BUDGET\u000d\u000a   SET BUDGET_CODE = :BUDGET_CODE,\u000d\u000a       AMOUNT = :BUDGET_AMOUNT,\u000d\u000a       SUMMARY = :SUMMARY,\u000d\u000a       MDF_MEMBER_ID = :LOGIN_MEMBER,\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE 1=1\u000d\u000a   AND PROJECT_SCHEDULE_ID = :PROJECT_SCHEDULE_ID\u000d\u000a   AND BUDGET_CODE = :ORG_BUDGET_CODE')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_05','2013-10-04 14:10:19.011000',4,'DOCUMENT','true ','UPDATE COST\u000d\u000a   SET BUDGET_CODE = :BUDGET_CODE,\u000d\u000a       USE_DTL = :USE_DTL,\u000d\u000a       PAYMENT_CODE = :PAYMENT_CODE,\u000d\u000a       PAYMENT_DATE = STR_TO_DATE(:PAYMENT_DATE, ''%Y-%m-%d'') ,\u000d\u000a       SUMMARY = REPLACE(REPLACE(REPLACE(REPLACE(:SUMMARY, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), " ","&nbsp;&nbsp;"),\u000d\u000a       AMOUNT = :AMOUNT,\u000d\u000a       EXECUTOR = :EXECUTOR,\u000d\u000a       RECEIVER = :RECEIVER,\u000d\u000a<dynamic parameter=":CONTENT" operator="!=" value="null">\u000d\u000a       ATTATCH_FILE = :CONTENT,\u000d\u000a       FILE_NAME = :CONTENT_FILE_NAME,\u000d\u000a       FILE_SIZE = :CONTENT_FILE_SIZE,\u000d\u000a</dynamic>\u000d\u000a       MDF_MEMBER_ID = :LOGIN_MEMBER,\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE ID = :COST_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_05','2013-10-04 14:13:22.523000',4,'DOCUMENT','true ','UPDATE COST\u000d\u000a   SET BUDGET_CODE = :BUDGET_CODE,\u000d\u000a       USE_DTL = :USE_DTL,\u000d\u000a       PAYMENT_CODE = :PAYMENT_CODE,\u000d\u000a       PAYMENT_DATE = STR_TO_DATE(:PAYMENT_DATE, ''%Y-%m-%d'') ,\u000d\u000a       SUMMARY = REPLACE(REPLACE(REPLACE(REPLACE(:SUMMARY, ''\r\n'', ''<BR>''), ''\n'', ''<BR>''), ''\"'', ''\\"''), " ","&nbsp;&nbsp;"),\u000d\u000a       AMOUNT = :AMOUNT,\u000d\u000a       EXECUTOR = :EXECUTOR,\u000d\u000a       RECEIVER = :RECEIVER,\u000d\u000a<dynamic parameter=":FILE_UPD" operator="==" value="Y">\u000d\u000a       ATTATCH_FILE = :CONTENT,\u000d\u000a       FILE_NAME = :CONTENT_FILE_NAME,\u000d\u000a       FILE_SIZE = :CONTENT_FILE_SIZE,\u000d\u000a</dynamic>\u000d\u000a       MDF_MEMBER_ID = :LOGIN_MEMBER,\u000d\u000a       MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000a WHERE ID = :COST_ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_06','2013-09-22 02:04:32.183000',4,'DOCUMENT','true ','UPDATE CONFERENCE\u000d\u000a   SET TITLE = :TITLE\u000d\u000a       CONFERENCE_DATE = :CONFERENCE_DATE\u000d\u000a       PARTICIPANTS = :PARTICIPANTS\u000d\u000a       PLACE = :PLACE\u000d\u000a       FROM_TIME = :FROM_DATE\u000d\u000a       TO_TIME = :TO_TIME\u000d\u000a       CONTENTS = :CONTENTS\u000d\u000a WHERE PROJECT_ID = :G_PROJECT_ID\u000d\u000a   AND ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_06','2013-09-22 02:05:24.398000',4,'DOCUMENT','true ','UPDATE CONFERENCE\u000d\u000a   SET TITLE = :TITLE\u000d\u000a       CONFERENCE_DATE = STR_TO_DATE(:CONFERENCE_DATE, ''%Y-%m-%d'')\u000d\u000a       PARTICIPANTS = :PARTICIPANTS\u000d\u000a       PLACE = :PLACE\u000d\u000a       FROM_TIME = STR_TO_DATE(:FROM_TIME, ''%h:%i %p'')\u000d\u000a       TO_TIME = STR_TO_DATE(:TO_TIME, ''%h:%i %p'')\u000d\u000a       CONTENTS = REPLACE(REPLACE(REPLACE(:CONTENTS, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"'')\u000d\u000a WHERE PROJECT_ID = :G_PROJECT_ID\u000d\u000a   AND ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_06','2013-09-22 02:06:06.256000',4,'DOCUMENT','true ','UPDATE CONFERENCE\u000d\u000a   SET TITLE = :TITLE,\u000d\u000a       CONFERENCE_DATE = STR_TO_DATE(:CONFERENCE_DATE, ''%Y-%m-%d''),\u000d\u000a       PARTICIPANTS = :PARTICIPANTS,\u000d\u000a       PLACE = :PLACE,\u000d\u000a       FROM_TIME = STR_TO_DATE(:FROM_TIME, ''%h:%i %p''),\u000d\u000a       TO_TIME = STR_TO_DATE(:TO_TIME, ''%h:%i %p''),\u000d\u000a       CONTENTS = REPLACE(REPLACE(REPLACE(:CONTENTS, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"'')\u000d\u000a WHERE PROJECT_ID = :G_PROJECT_ID\u000d\u000a   AND ID = :ID')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_07','2013-09-23 10:49:17.327000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_07','2013-09-23 11:12:46.501000',4,'DOCUMENT','true ','UPDATE REPORT\u000d\u000a   SET\u000d\u000a       :RECEIVER RECEIVER,\u000d\u000a       REPLACE(REPLACE(REPLACE(:CURRENT, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"'') CURRENT,\u000d\u000a       REPLACE(REPLACE(REPLACE(:NEXT, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"'') NEXT,\u000d\u000a       REPLACE(REPLACE(REPLACE(:EVALUATION, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"'') EVALUATION,\u000d\u000a       REPLACE(REPLACE(REPLACE(:ISSUE, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"'') ISSUE,\u000d\u000a       :LOGIN_MEMBER RGST_MEMBER_ID,\u000d\u000a       CURRENT_TIMESTAMP RGST_DTTM\u000d\u000a WHERE ID = :ID\u000d\u000a   AND PROJECT_ID = :G_PROJECT_ID\u000d\u000a   AND REPORT_TYPE = :REPORT_TYPE')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_07','2013-09-23 11:13:47.803000',4,'DOCUMENT','true ','UPDATE REPORT\u000d\u000a   SET RECEIVER = :RECEIVER,\u000d\u000a       CURRENT = REPLACE(REPLACE(REPLACE(:CURRENT, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"'') ,\u000d\u000a       NEXT = REPLACE(REPLACE(REPLACE(:NEXT, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"'') ,\u000d\u000a       EVALUATION = REPLACE(REPLACE(REPLACE(:EVALUATION, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"'') ,\u000d\u000a       ISSUE = REPLACE(REPLACE(REPLACE(:ISSUE, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"'')\u000d\u000a WHERE ID = :ID\u000d\u000a   AND PROJECT_ID = :G_PROJECT_ID\u000d\u000a   AND REPORT_TYPE = :REPORT_TYPE')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_08','2013-09-25 16:09:41.465000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_08','2013-09-25 18:04:33.350000',4,'DOCUMENT','true ','UPDATE DECISION_REQUEST\u000d\u000aSET \u000d\u000aRECEIVER, \u000d\u000aDUE_DATE = STR_TO_DATE(:DUE_DATE, ''%Y-%m-%d''), \u000d\u000aTITLE = :TITLE, \u000d\u000aCONTENTS = REPLACE(REPLACE(REPLACE(:CONTENTS, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"''), \u000d\u000aMDF_MEMBER_ID = :LOGIN_MEMBER, \u000d\u000aMDF_DTTM = CURRENT_TIMESTAMP,\u000d\u000aWHERE ID = :ID\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_08','2013-09-25 18:05:38.212000',4,'DOCUMENT','true ','UPDATE DECISION_REQUEST\u000d\u000aSET \u000d\u000aRECEIVER = :RECEIVER, \u000d\u000aDUE_DATE = STR_TO_DATE(:DUE_DATE, ''%Y-%m-%d''), \u000d\u000aTITLE = :TITLE, \u000d\u000aCONTENTS = REPLACE(REPLACE(REPLACE(:CONTENTS, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"''), \u000d\u000aMDF_MEMBER_ID = :LOGIN_MEMBER, \u000d\u000aMDF_DTTM = CURRENT_TIMESTAMP,\u000d\u000aWHERE ID = :ID\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_08','2013-09-25 18:06:28.656000',4,'DOCUMENT','true ','UPDATE DECISION_REQUEST\u000d\u000aSET \u000d\u000aRECEIVER = :RECEIVER, \u000d\u000aDUE_DATE = STR_TO_DATE(:DUE_DATE, ''%Y-%m-%d''), \u000d\u000aTITLE = :TITLE, \u000d\u000aCONTENTS = REPLACE(REPLACE(REPLACE(:CONTENTS, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"''), \u000d\u000aMDF_MEMBER_ID = :LOGIN_MEMBER, \u000d\u000aMDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE ID = :ID\u000d\u000a')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_09','2013-09-27 09:27:42.217000',4,'DOCUMENT','true ','UPDATE DECISION_REQUEST DR, \u000d\u000a       (SELECT GROUP_ID FROM DECISION_REQUEST WHERE ID = :ID) GI\u000d\u000aSET DR.DECISION_STATUS = :DECISION_STATUS,\u000d\u000a    DR.MDF_MEMBER_ID = :LOGIN_MEMBER,\u000d\u000a    DR.DECISION_DATE = CURRENT_TIMESTAMP\u000d\u000a    DR.MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE DR.GROUP_ID = GI.GROUP_ID;')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_09','2013-09-27 09:29:22.768000',4,'DOCUMENT','true ','UPDATE DECISION_REQUEST DR, \u000d\u000a       (SELECT GROUP_ID FROM DECISION_REQUEST WHERE ID = :ID) GI\u000d\u000aSET DR.DECISION_STATUS = :DECISION_STATUS,\u000d\u000a    DR.OPINION = :OPINION,\u000d\u000a    DR.MDF_MEMBER_ID = :LOGIN_MEMBER,\u000d\u000a    DR.DECISION_DATE = CURRENT_TIMESTAMP,\u000d\u000a    DR.MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE DR.GROUP_ID = GI.GROUP_ID;')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_09','2013-09-27 13:13:42.622000',4,'DOCUMENT','true ','UPDATE DECISION_REQUEST DR, \u000d\u000a       (SELECT GROUP_ID FROM DECISION_REQUEST WHERE ID = :ID) GI\u000d\u000aSET DR.DECISION_STATUS = :DECISION_STATUS,\u000d\u000a    DR.OPINION = REPLACE(REPLACE(REPLACE(:OPINION, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"''), ,\u000d\u000a    DR.MDF_MEMBER_ID = :LOGIN_MEMBER,\u000d\u000a    DR.DECISION_DATE = CURRENT_TIMESTAMP,\u000d\u000a    DR.MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE DR.GROUP_ID = GI.GROUP_ID;')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_09','2013-09-27 13:39:54.495000',4,'DOCUMENT','true ','UPDATE DECISION_REQUEST DR, \u000d\u000a       (SELECT GROUP_ID FROM DECISION_REQUEST WHERE ID = :ID) GI\u000d\u000aSET DR.DECISION_STATUS = :DECISION_STATUS,\u000d\u000a    DR.OPINION = REPLACE(REPLACE(REPLACE(:OPINION, ''\r\n'', ''''), ''\n'', ''''), ''\"'', ''\\"''),\u000d\u000a    DR.MDF_MEMBER_ID = :LOGIN_MEMBER,\u000d\u000a    DR.DECISION_DATE = CURRENT_TIMESTAMP,\u000d\u000a    DR.MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE DR.GROUP_ID = GI.GROUP_ID;')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_10','2013-09-27 10:34:27.908000',4,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_10','2013-09-27 10:36:30.472000',4,'DOCUMENT','true ','UPDATE DECISION_REQUEST\u000d\u000aSET DR.DECISION_STATUS = :DECISION_STATUS,\u000d\u000a     DR.MDF_MEMBER_ID = :LOGIN_MEMBER,\u000d\u000a    DR.MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE DR.GROUP_ID = :GROUP_ID;')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_10','2013-09-27 10:38:28.519000',4,'DOCUMENT','true ','UPDATE DECISION_REQUEST\u000d\u000aSET DECISION_STATUS = :DECISION_STATUS,\u000d\u000a    MDF_MEMBER_ID = :LOGIN_MEMBER,\u000d\u000a    MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE DR.GROUP_ID = :GROUP_ID;')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_10','2013-09-27 10:38:50.617000',4,'DOCUMENT','true ','UPDATE DECISION_REQUEST\u000d\u000aSET DECISION_STATUS = :DECISION_STATUS,\u000d\u000a    MDF_MEMBER_ID = :LOGIN_MEMBER,\u000d\u000a    MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE GROUP_ID = :GROUP_ID;')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_10','2013-09-27 14:27:23.783000',4,'DOCUMENT','true ','UPDATE DECISION_REQUEST\u000d\u000aSET DECISION_STATUS = :DECISION_STATUS,\u000d\u000a    RECEIVER = :RECEIVER\u000d\u000a    MDF_MEMBER_ID = :LOGIN_MEMBER,\u000d\u000a    MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE GROUP_ID = :GROUP_ID;')
INSERT INTO SQL_STORAGE_H VALUES('PMS','pms.project.update.project_u_10','2013-09-27 14:28:26.070000',4,'DOCUMENT','true ','UPDATE DECISION_REQUEST\u000d\u000aSET DECISION_STATUS = :DECISION_STATUS,\u000d\u000a    RECEIVER = :RECEIVER,\u000d\u000a    MDF_MEMBER_ID = :LOGIN_MEMBER,\u000d\u000a    MDF_DTTM = CURRENT_TIMESTAMP\u000d\u000aWHERE GROUP_ID = :GROUP_ID;')
INSERT INTO SQL_STORAGE_H VALUES('ReadByLengthField','.member_login','2013-05-02 14:42:18.908000',2,'FOLDER','false','')
INSERT INTO SQL_STORAGE_H VALUES('ReadByLengthField','.nist','2013-05-02 14:38:26.299000',2,'FOLDER','false','')
INSERT INTO SQL_STORAGE_H VALUES('ReadByLengthField','.test','2013-05-02 15:01:36.674000',2,'DOCUMENT','false','')
INSERT INTO SQL_STORAGE_H VALUES('ReadByLengthField','.tet','2013-05-02 15:02:49.830000',2,'FOLDER','false','')
INSERT INTO SQL_STORAGE_H VALUES('ReadByLengthField','member_login','2013-07-21 12:25:46.768000',1,'DOCUMENT','true ','/*\u000d\u000a\u0009Date\u0009\u0009: 2012.11.07\u000d\u000a\u0009Author\u0009\u0009: Kiyoung Kim\u000d\u000a\u0009Description : Search member for login\u000d\u000a*/\u000d\u000aSELECT IF(COUNT(*) > 0, ''Y'', ''N'') AS ACCESS_YN\u000d\u000a  FROM ACCESS_LIST, ROLE\u000d\u000a WHERE ROLE.MEMBER_ID = ACCESS_LIST.ROLE_MEMBER_ID\u000d\u000a   AND ROLE.ORGANIZATION_ID = ACCESS_LIST.ORGANIZATION_ID\u000d\u000a   AND ACCESS_LIST.ROLE_MEMBER_ID = :ID\u000d\u000a   AND ROLE.USE_YN = ''Y''')
INSERT INTO SQL_STORAGE_H VALUES('ReadByLengthField','nist.member','2013-05-02 14:38:57.924000',2,'FOLDER','false','')
